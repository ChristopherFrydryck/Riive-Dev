{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/EditPayment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"../components/Txt\";\nimport Input from \"../components/Input\";\nimport Icon from \"../components/Icon\";\nimport Button from \"../components/Button\";\nimport Colors from \"../constants/Colors\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ClickableChip from \"../components/ClickableChip\";\nimport { inject, observer } from 'mobx-react/native';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport firebaseConfig from \"../firebaseConfig\";\nvar EditPayment = (_dec = inject(\"UserStore\", \"ComponentStore\"), _dec(_class = observer(_class = (_temp = _class2 = function (_React$Component) {\n  _inherits(EditPayment, _React$Component);\n\n  var _super = _createSuper(EditPayment);\n\n  function EditPayment(props) {\n    var _this;\n\n    _classCallCheck(this, EditPayment);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.deleteSource = function _callee() {\n      var settings, fetchResponse, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              settings = {\n                method: 'DELETE',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  stripeID: _this.props.UserStore.stripeID,\n                  cardSource: _this.props.ComponentStore.selectedPayment[0].StripeID,\n                  FBID: firebase.auth().currentUser.uid\n                })\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://us-central1-riive-parking.cloudfunctions.net/deleteSource', settings));\n\n            case 4:\n              fetchResponse = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.deletePayment = function _callee2() {\n      var db, updatedPaymentArray;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this._isMounted) {\n                db = firebase.firestore();\n\n                try {\n                  db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n                    payments: firebase.firestore.FieldValue.arrayRemove({\n                      CardType: _this.props.ComponentStore.selectedPayment[0].CardType,\n                      Month: _this.props.ComponentStore.selectedPayment[0].Month,\n                      Name: _this.props.ComponentStore.selectedPayment[0].Name,\n                      Number: _this.props.ComponentStore.selectedPayment[0].Number,\n                      PaymentID: _this.props.ComponentStore.selectedPayment[0].PaymentID,\n                      StripeID: _this.props.ComponentStore.selectedPayment[0].StripeID,\n                      Type: _this.props.ComponentStore.selectedPayment[0].Type,\n                      Year: _this.props.ComponentStore.selectedPayment[0].Year,\n                      CCV: _this.props.ComponentStore.selectedPayment[0].CCV\n                    })\n                  });\n\n                  _this.deleteSource();\n                } catch (e) {\n                  alert(e);\n                }\n\n                updatedPaymentArray = _this.props.UserStore.payments.filter(function (i) {\n                  return i.PaymentID !== _this.props.ComponentStore.selectedPayment[0].PaymentID;\n                });\n                _this.props.UserStore.payments = updatedPaymentArray;\n              } else {\n                alert(\"Error deleting vehicle\");\n              }\n\n              _this.props.navigation.navigate(\"Profile\");\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      creditCardNum: '•••• •••• •••• ' + _this.props.ComponentStore.selectedPayment[0].Number,\n      creditCardType: _this.props.ComponentStore.selectedPayment[0].CardType,\n      creditCardFormat: _this.props.ComponentStore.selectedPayment[0].CardType,\n      name: _this.props.ComponentStore.selectedPayment[0].Name,\n      CCV: _this.props.ComponentStore.selectedPayment[0].CCV,\n      type: _this.props.ComponentStore.selectedPayment[0].Type,\n      exp: _this.props.ComponentStore.selectedPayment[0].Month + \"\" + _this.props.ComponentStore.selectedPayment[0].Year,\n      expMonth: _this.props.ComponentStore.selectedPayment[0].Month,\n      expYear: _this.props.ComponentStore.selectedPayment[0].Year,\n      StripecardId: _this.props.ComponentStore.selectedPayment[0].StripeID,\n      CCVError: \"\",\n      creditCardNumError: \"\",\n      nameError: \"\",\n      expError: \"\",\n      allValid: false\n    };\n    return _this;\n  }\n\n  _createClass(EditPayment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._navListener = this.props.navigation.addListener('didFocus', function () {\n        StatusBar.setBarStyle('dark-content', true);\n        Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          flex: 0,\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [Colors.apollo500, Colors.apollo700],\n        style: styles.creditCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        iconName: this.state.creditCardType !== '' ? 'cc-' + this.state.creditCardType : 'credit-card',\n        iconLib: \"FontAwesome\",\n        iconColor: Colors.mist300,\n        iconSize: 28,\n        style: {\n          marginLeft: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, this.state.creditCardNum ? this.state.creditCardNum : 'XXXX XXXX XXXX XXXX'), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 10,\n          marginBottom: 20,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, this.state.CCV ? this.state.CCV : 'CCV'), React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, \"GOOD \", \"\\n\", \" THRU \", \"\\n\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.creditCardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, this.state.name == \"\" ? 'Firstname Lastname' : this.state.name), React.createElement(Text, {\n        style: styles.creditCardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, this.state.exp == \"\" ? \"MM/YY\" : this.state.exp.length == 4 ? this.state.expMonth + '/' + this.state.expYear : \"0\" + this.state.expMonth + '/' + this.state.expYear)))), React.createElement(Button, {\n        style: {\n          backgroundColor: 'white',\n          borderColor: Colors.hal300,\n          borderWidth: 2\n        },\n        textStyle: {\n          color: Colors.hal300\n        },\n        onPress: function onPress() {\n          return _this2.deletePayment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, \"Delete Card\")));\n    }\n  }]);\n\n  return EditPayment;\n}(React.Component), _class2.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: \"Manage My Payment\",\n    headerTitleStyle: {\n      fontWeight: \"300\",\n      fontSize: 18\n    }\n  };\n}, _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  creditCard: {\n    width: \"100%\",\n    height: 200,\n    marginBottom: 20,\n    borderRadius: 10,\n    padding: 15,\n    justifyContent: \"space-between\"\n  },\n  creditCardText: {\n    color: Colors.mist300,\n    fontSize: 16,\n    alignSelf: \"flex-end\"\n  }\n});\nexport default EditPayment;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/EditPayment.js"],"names":["React","Text","Input","Icon","Button","Colors","LinearGradient","ClickableChip","inject","observer","firebase","firebaseConfig","EditPayment","props","_isMounted","deleteSource","settings","method","headers","Accept","body","JSON","stringify","stripeID","UserStore","cardSource","ComponentStore","selectedPayment","StripeID","FBID","auth","currentUser","uid","fetch","fetchResponse","json","data","alert","deletePayment","db","firestore","collection","doc","userID","update","payments","FieldValue","arrayRemove","CardType","Month","Name","Number","PaymentID","Type","Year","CCV","e","updatedPaymentArray","filter","i","navigation","navigate","state","creditCardNum","creditCardType","creditCardFormat","name","type","exp","expMonth","expYear","StripecardId","CCVError","creditCardNumError","nameError","expError","allValid","_navListener","addListener","StatusBar","setBarStyle","Platform","OS","setBackgroundColor","flex","backgroundColor","styles","container","apollo500","apollo700","creditCard","mist300","marginLeft","justifyContent","color","fontSize","flexDirection","marginBottom","creditCardText","length","borderColor","hal300","borderWidth","Component","navigationOptions","title","headerTitleStyle","fontWeight","StyleSheet","create","padding","alignContent","alignItems","width","height","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, StatusBar, Platform, StyleSheet, SafeAreaView } from 'react-native';\nimport Text from '../components/Txt'\nimport Input from '../components/Input'\nimport Icon from '../components/Icon'\nimport Button from '../components/Button'\nimport Colors from '../constants/Colors'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport ClickableChip from '../components/ClickableChip';\n//MobX Imports\nimport {inject, observer} from 'mobx-react/native'\n\nimport * as firebase from 'firebase'\nimport 'firebase/firestore';\nimport firebaseConfig from '../firebaseConfig'\n\n\n@inject(\"UserStore\", \"ComponentStore\")\n@observer\nclass EditPayment extends React.Component{\n    _isMounted = false;\n\n    static navigationOptions = ({ navigation }) => {\n        return{\n        title: \"Manage My Payment\",\n        headerTitleStyle:{\n            fontWeight: \"300\",\n            fontSize: 18,\n        },    \n    };};\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            creditCardNum: '•••• •••• •••• ' + this.props.ComponentStore.selectedPayment[0].Number,\n            creditCardType: this.props.ComponentStore.selectedPayment[0].CardType,\n            creditCardFormat: this.props.ComponentStore.selectedPayment[0].CardType,\n            name: this.props.ComponentStore.selectedPayment[0].Name,\n            CCV: this.props.ComponentStore.selectedPayment[0].CCV,\n            type: this.props.ComponentStore.selectedPayment[0].Type,\n            exp: this.props.ComponentStore.selectedPayment[0].Month + \"\" + this.props.ComponentStore.selectedPayment[0].Year,\n            expMonth: this.props.ComponentStore.selectedPayment[0].Month,\n            expYear: this.props.ComponentStore.selectedPayment[0].Year,\n            StripecardId: this.props.ComponentStore.selectedPayment[0].StripeID,\n\n            CCVError: \"\",\n            creditCardNumError: \"\",\n            nameError: \"\",\n            expError: \"\",\n            allValid: false,\n        }\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        this._navListener = this.props.navigation.addListener('didFocus', () => {\n         StatusBar.setBarStyle('dark-content', true);\n         Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\n       });\n    }\n\n    deleteSource = async () => {\n\n        const settings = {\n          method: 'DELETE',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            stripeID: this.props.UserStore.stripeID,\n            cardSource: this.props.ComponentStore.selectedPayment[0].StripeID,\n            FBID: firebase.auth().currentUser.uid,\n          })\n        }\n        try{\n          \n          const fetchResponse = await fetch('https://us-central1-riive-parking.cloudfunctions.net/deleteSource', settings)\n          const data = await fetchResponse.json();\n          return data;\n        }catch(e){\n          alert(e);\n        }    \n      }\n\n    deletePayment = async () => {\n\n        if(this._isMounted){\n        const db = firebase.firestore();\n\n        // Remove the current vehicle\n       try {db.collection(\"users\").doc(this.props.UserStore.userID).update({\n            payments: firebase.firestore.FieldValue.arrayRemove({\n                CardType: this.props.ComponentStore.selectedPayment[0].CardType,\n                Month: this.props.ComponentStore.selectedPayment[0].Month,\n                Name: this.props.ComponentStore.selectedPayment[0].Name,\n                Number: this.props.ComponentStore.selectedPayment[0].Number,\n                PaymentID: this.props.ComponentStore.selectedPayment[0].PaymentID,\n                StripeID: this.props.ComponentStore.selectedPayment[0].StripeID,\n                Type: this.props.ComponentStore.selectedPayment[0].Type,\n                Year: this.props.ComponentStore.selectedPayment[0].Year,\n                CCV: this.props.ComponentStore.selectedPayment[0].CCV,\n            })\n         })\n         this.deleteSource();\n        }catch(e){\n            alert(e)\n        }\n\n          // remove the old vehicle from the userstore mobx vehicles array\n        const updatedPaymentArray = this.props.UserStore.payments.filter(i => i.PaymentID !== this.props.ComponentStore.selectedPayment[0].PaymentID)\n        this.props.UserStore.payments = updatedPaymentArray\n       \n        }else{\n            alert(\"Error deleting vehicle\")\n        }\n\n        // navigate back to home.\n        this.props.navigation.navigate(\"Profile\")\n\n     \n    }\n\n    render(){\n        return(\n            // <View>\n            //     <Text>{this.props.ComponentStore.selectedPayment[0].PaymentID}</Text>\n            // </View>\n            <ScrollView>\n      <SafeAreaView style={{flex: 0, backgroundColor: \"white\", }} />\n      <View style={styles.container}>\n        <LinearGradient colors={[Colors.apollo500, Colors.apollo700]} style={styles.creditCard}>\n            <Icon \n              iconName={this.state.creditCardType !== '' ? 'cc-' + this.state.creditCardType : 'credit-card'}\n              iconLib=\"FontAwesome\"\n              iconColor={Colors.mist300}\n              iconSize={28}\n              style={{ marginLeft: \"auto\"}}\n            />\n            <View style={{justifyContent: 'flex-end'}}>\n            <Text style={{color: Colors.mist300, fontSize: 18}}>{this.state.creditCardNum ? this.state.creditCardNum : 'XXXX XXXX XXXX XXXX'}</Text>\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n              <Text style={{color: Colors.mist300, fontSize: 10, marginBottom: 20, marginLeft: 5}}>{this.state.CCV ? this.state.CCV : 'CCV'}</Text>\n              <Text style={{color: Colors.mist300, fontSize: 10}}>GOOD {\"\\n\"} THRU {\"\\n\"}</Text>\n            </View>\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n              <Text style={styles.creditCardText}>{this.state.name == \"\" ? 'Firstname Lastname' : this.state.name}</Text>               \n              <Text style={styles.creditCardText}>{this.state.exp == \"\" ? \"MM/YY\" : this.state.exp.length == 4 ? this.state.expMonth + '/' + this.state.expYear : \"0\" + this.state.expMonth + '/' + this.state.expYear }</Text>\n            </View>\n            </View>\n        </LinearGradient>\n        {/* <View style={{flexDirection: 'row'}}>\n          <View style={{marginRight: 16, flex: 5}}>\n            <Input \n              placeholder='XXXXXXXXXXXXXXXX'\n              mask='credit-card'\n              ccType = {this.state.creditCardFormat}\n              label=\"Credit Card Number\"\n              name=\"CCNum\"\n              onChangeText = {cc => {this.setState({creditCardNum: cc}); this.getCardType(cc)}}\n              value={this.state.creditCardNum}\n              error={this.state.creditCardNumError}\n            />\n          </View>\n          <View style={{flex: 2}}>\n                <Input \n                    placeholder='MM/YY'\n                    mask='mm/yy'\n                    label=\"Expiration\"\n                    name=\"expiration\"\n                    onChangeText = {i => this.cardExpirationDate(i)}\n                    value={this.state.exp}\n                    keyboardType='numeric' \n                    error={this.state.expError}\n                  />\n            </View>\n          \n         </View>\n          <View style={{flexDirection: 'row'}}>\n            \n           <View style={{marginRight: 16, flex: 3}}>\n            <Input \n              placeholder=\"Your name...\"\n              label=\"Name\"\n              name=\"name\"\n              onChangeText={(n) => this.setState({name: n})}\n              value={this.state.name}\n              maxLength={40}\n              error={this.state.nameError}\n            />\n           </View> \n           <View  style={{flex: 1}}>\n            <Input \n              placeholder={this.state.creditCardType == 'amex' ? '0000' : '000'}\n              label=\"CCV\"\n              name=\"ccv\"\n              onChangeText={(ccv) => this.setState({CCV: ccv})}\n              value={this.state.CCV}\n              maxLength={this.state.creditCardType == 'amex' ? 4 : 3}\n              keyboardType='numeric' \n              error={this.state.CCVError}\n              />\n          </View>  \n          </View> */}\n        <Button style={{backgroundColor: 'white', borderColor: Colors.hal300, borderWidth: 2}} textStyle={{color: Colors.hal300}} onPress={() => this.deletePayment()}>Delete Card</Button>\n      </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    padding: 20,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n\n  },\n  creditCard: {\n    width: \"100%\",\n    height: 200,\n    marginBottom: 20,\n    // backgroundColor: Colors.apollo500,\n    borderRadius: 10,\n    padding: 15,\n    justifyContent: \"space-between\",\n  },\n  creditCardText: {\n    color: Colors.mist300,\n    fontSize: 16,\n    alignSelf: \"flex-end\"\n  }\n})\n\nexport default EditPayment;"]},"metadata":{},"sourceType":"module"}