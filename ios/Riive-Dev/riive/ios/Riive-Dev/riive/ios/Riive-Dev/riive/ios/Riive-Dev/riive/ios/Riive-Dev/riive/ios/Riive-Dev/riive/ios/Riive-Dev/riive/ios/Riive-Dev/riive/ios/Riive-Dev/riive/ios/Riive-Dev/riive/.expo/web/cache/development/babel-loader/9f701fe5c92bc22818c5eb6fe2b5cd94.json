{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport Navigator from \"./navigators/MainNavigator\";\nimport AuthNavigator from \"./navigators/AuthNavigator\";\nimport * as Font from 'expo-font';\nimport { observer, Provider } from 'mobx-react/native';\nimport UserStore from \"./stores/userStore\";\nimport ComponentStore from \"./stores/componentStore\";\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar stores = {\n  UserStore: UserStore,\n  ComponentStore: ComponentStore\n};\nvar route = \"Auth\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    YellowBox.ignoreWarnings(['Setting a timer']);\n    _this.state = {\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'WorkSans-Thin': require(\"./assets/fonts/WorkSans-Thin.otf\"),\n                'WorkSans-SemiBold': require(\"./assets/fonts/WorkSans-SemiBold.otf\"),\n                'WorkSans-Regular': require(\"./assets/fonts/WorkSans-Regular.otf\"),\n                'WorkSans-Medium': require(\"./assets/fonts/WorkSans-Medium.otf\"),\n                'WorkSans-Light': require(\"./assets/fonts/WorkSans-Light.otf\"),\n                'WorkSans-Italic': require(\"./assets/fonts/WorkSans-Italic.otf\"),\n                'WorkSans-ExtraLight': require(\"./assets/fonts/WorkSans-ExtraLight.otf\"),\n                'WorkSans-ExtraBold': require(\"./assets/fonts/WorkSans-ExtraBold.otf\"),\n                'WorkSans-Bold': require(\"./assets/fonts/WorkSans-Bold.otf\"),\n                'WorkSans-Black': require(\"./assets/fonts/WorkSans-Black.otf\"),\n                'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf'),\n                'Feather': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Feather.ttf'),\n                'Entypo': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf'),\n                'EvilIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/EvilIcons.ttf'),\n                'Ionicons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf'),\n                'AntDesign': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/AntDesign.ttf'),\n                'Foundation': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Foundation.ttf'),\n                'MaterialCommunityIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n                'MaterialIcons.font': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialIcons.ttf')\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fontLoaded) {\n        return React.createElement(Provider, _extends({}, stores, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }\n        }), React.createElement(AuthNavigator, {\n          initRoute: \"Home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }\n        }, React.createElement(ActivityIndicator, {\n          style: {\n            alignSelf: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/App.js"],"names":["React","createAppContainer","createSwitchNavigator","Navigator","AuthNavigator","Font","observer","Provider","UserStore","ComponentStore","firebase","stores","route","App","props","YellowBox","ignoreWarnings","state","fontLoaded","loadAsync","require","setState","flex","flexDirection","justifyContent","alignSelf","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAIA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAMA,IAAMC,MAAM,GAAG;AACXH,EAAAA,SAAS,EAATA,SADW;AACAC,EAAAA,cAAc,EAAdA;AADA,CAAf;AAOA,IAAIG,KAAK,GAAG,MAAZ;;IACqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACAC,IAAAA,SAAS,CAACC,cAAV,CAAyB,CAAC,iBAAD,CAAzB;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,UAAU,EAAE;AADF,KAAZ;AAHgB;AAMjB;;;;;;;;;;+CAKOb,IAAI,CAACc,SAAL,CAAe;AACnB,iCAAiBC,OAAO,oCADL;AAEnB,qCAAqBA,OAAO,wCAFT;AAGnB,oCAAoBA,OAAO,uCAHR;AAInB,mCAAmBA,OAAO,sCAJP;AAKnB,kCAAkBA,OAAO,qCALN;AAMnB,mCAAmBA,OAAO,sCANP;AAOnB,uCAAuBA,OAAO,0CAPX;AAQnB,sCAAsBA,OAAO,yCARV;AASnB,iCAAiBA,OAAO,oCATL;AAUnB,kCAAkBA,OAAO,qCAVN;AAWnB,+BAAeA,OAAO,CAAC,iFAAD,CAXH;AAYnB,2BAAWA,OAAO,CAAC,6EAAD,CAZC;AAanB,0BAAUA,OAAO,CAAC,4EAAD,CAbE;AAcnB,6BAAaA,OAAO,CAAC,+EAAD,CAdD;AAenB,4BAAYA,OAAO,CAAC,8EAAD,CAfA;AAgBnB,6BAAaA,OAAO,CAAC,+EAAD,CAhBD;AAiBnB,8BAAcA,OAAO,CAAC,gFAAD,CAjBF;AAkBnB,0CAA0BA,OAAO,CAAC,4FAAD,CAlBd;AAmBnB,sCAAsBA,OAAO,CAAC,mFAAD;AAnBV,eAAf,C;;;AA4BN,mBAAKC,QAAL,CAAc;AAACH,gBAAAA,UAAU,EAAE;AAAb,eAAd;;;;;;;;;;;6BAWO;AACP,UAAI,KAAKD,KAAL,CAAWC,UAAf,EAA0B;AACxB,eACE,oBAAC,QAAD,eAAcP,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,oBAAC,aAAD;AAAe,UAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAND,MAMK;AACH,eACA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACW,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,aAAa,EAAC,QAAxB;AAAkCC,YAAAA,cAAc,EAAC;AAAjD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADA;AAKD;AACF;;;;EAjE8BzB,KAAK,CAAC0B,S;;SAAlBb,G","sourcesContent":["import React from 'react';\nimport { Text, View, ActivityIndicator, YellowBox } from 'react-native';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport Navigator from './navigators/MainNavigator'\nimport AuthNavigator from './navigators/AuthNavigator'\n\nimport * as Font from 'expo-font'\n\n\n\nimport { observer, Provider } from 'mobx-react/native'\nimport UserStore from './stores/userStore'\nimport ComponentStore from './stores/componentStore'\n\n// Firebase imports\nimport * as firebase from 'firebase'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\n\n\nconst stores = {\n    UserStore, ComponentStore\n}\n\n\n\n// const AppContainer = createAppContainer(Navigator);\nvar route = \"Auth\"\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    YellowBox.ignoreWarnings(['Setting a timer'])\n    this.state ={\n      fontLoaded: false\n    }\n  }\n\n\n  async componentDidMount(){\n    \n    await Font.loadAsync({\n      'WorkSans-Thin': require('./assets/fonts/WorkSans-Thin.otf'),\n      'WorkSans-SemiBold': require('./assets/fonts/WorkSans-SemiBold.otf'),\n      'WorkSans-Regular': require('./assets/fonts/WorkSans-Regular.otf'),\n      'WorkSans-Medium': require('./assets/fonts/WorkSans-Medium.otf'),\n      'WorkSans-Light': require('./assets/fonts/WorkSans-Light.otf'),\n      'WorkSans-Italic': require('./assets/fonts/WorkSans-Italic.otf'),\n      'WorkSans-ExtraLight': require('./assets/fonts/WorkSans-ExtraLight.otf'),\n      'WorkSans-ExtraBold': require('./assets/fonts/WorkSans-ExtraBold.otf'),\n      'WorkSans-Bold': require('./assets/fonts/WorkSans-Bold.otf'),\n      'WorkSans-Black': require('./assets/fonts/WorkSans-Black.otf'),\n      'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf'),\n      'Feather': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Feather.ttf'),\n      'Entypo': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf'),\n      'EvilIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/EvilIcons.ttf'),\n      'Ionicons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf'),\n      'AntDesign': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/AntDesign.ttf'),\n      'Foundation': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Foundation.ttf'),\n      'MaterialCommunityIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n      'MaterialIcons.font': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialIcons.ttf'),\n\n      \n      \n      \n    });\n\n\n\n    this.setState({fontLoaded: true})\n\n\n\n\n    \n      \n      \n  \n  }\n\n  render() {\n    if (this.state.fontLoaded){\n      return (\n        <Provider {...stores}>\n          <AuthNavigator initRoute=\"Home\"/>\n        </Provider>\n      )\n    }else{\n      return(\n      <View style={{flex: 1, flexDirection:'column', justifyContent:'center'}}> \n        <ActivityIndicator style={{alignSelf:'center'}}/>\n      </View>\n      )\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}