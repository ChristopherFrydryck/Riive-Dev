{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/VehicleList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"./Txt\";\nimport Colors from \"../constants/Colors\";\nimport Icon from \"../components/Icon\";\nimport * as Font from 'expo-font';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { withNavigation } from 'react-navigation';\nimport { inject, observer } from 'mobx-react/native';\nimport UserStore from \"../stores/userStore\";\nimport ComponentStore from \"../stores/componentStore\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport SvgAnimatedLinearGradient from 'react-native-svg-animated-linear-gradient';\nimport Svg, { Circle, Rect } from 'react-native-svg';\n\nfunction cacheFonts(fonts) {\n  return fonts.map(function (font) {\n    return Font.loadAsync(font);\n  });\n}\n\nvar VehicleList = (_dec = inject(\"UserStore\", \"ComponentStore\"), _dec(_class = observer(_class = (_temp = function (_React$Component) {\n  _inherits(VehicleList, _React$Component);\n\n  var _super = _createSuper(VehicleList);\n\n  function VehicleList() {\n    var _this;\n\n    _classCallCheck(this, VehicleList);\n\n    _this = _super.call(this);\n\n    _this.selectCar = function (car) {\n      _this.props.ComponentStore.selectedVehicle = [];\n\n      _this.props.ComponentStore.selectedVehicle.push({\n        VehicleID: car.VehicleID,\n        Year: car.Year,\n        Make: car.Make,\n        Model: car.Model,\n        Color: car.Color,\n        LicensePlate: car.LicensePlate\n      });\n\n      _this.props.navigation.navigate(\"EditVehicle\");\n    };\n\n    return _this;\n  }\n\n  _createClass(VehicleList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var iconAssets;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              iconAssets = cacheFonts([FontAwesome.font, MaterialCommunityIcons.font]);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(iconAssets)));\n\n            case 3:\n              this.props.ComponentStore.vehiclesLoaded = true;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vehiclesLoaded = this.props.ComponentStore.vehiclesLoaded;\n      var loaders = [];\n\n      if (vehiclesLoaded) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, this.props.UserStore.vehicles.map(function (car, i) {\n          return React.createElement(TouchableOpacity, {\n            key: _this2.props.UserStore.vehicles[i].VehicleID,\n            style: i == 0 ? styles.li_first : styles.li,\n            onPress: function onPress() {\n              return _this2.selectCar(car);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconName: \"navigation\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }\n          }), React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }\n          }, (car.Year + \" \" + car.Make + \" \" + car.Model).length <= 28 ? React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }\n          }, car.Year, \" \", car.Make, \" \", car.Model) : React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 35\n            }\n          }, (car.Year + \" \" + car.Make + \" \" + car.Model).substring(0, 28) + \"...\"), React.createElement(Text, {\n            style: {\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, car.LicensePlate)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }\n          }))));\n        }));\n      } else {\n        for (var i = 0; i < this.props.UserStore.vehicles.length; i++) {\n          loaders.push(React.createElement(SvgAnimatedLinearGradient, {\n            key: i,\n            width: Dimensions.get('window').width,\n            height: \"50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }\n          }, React.createElement(Rect, {\n            width: Dimensions.get('window').width,\n            height: \"40\",\n            rx: \"5\",\n            ry: \"5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }\n          })));\n        }\n\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }, loaders);\n      }\n    }\n  }]);\n\n  return VehicleList;\n}(React.Component), _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10\n  },\n  li: {\n    borderBottomColor: Colors.mist700,\n    borderBottomWidth: 1,\n    padding: 15\n  },\n  li_first: {\n    borderTopWidth: 1,\n    borderTopColor: Colors.mist700,\n    borderBottomColor: Colors.mist700,\n    borderBottomWidth: 1,\n    padding: 10\n  }\n});\nexport default withNavigation(VehicleList);","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/VehicleList.js"],"names":["React","Text","Colors","Icon","Font","FontAwesome","MaterialCommunityIcons","withNavigation","inject","observer","UserStore","ComponentStore","TouchableOpacity","SvgAnimatedLinearGradient","Svg","Circle","Rect","cacheFonts","fonts","map","font","loadAsync","VehicleList","selectCar","car","props","selectedVehicle","push","VehicleID","Year","Make","Model","Color","LicensePlate","navigation","navigate","iconAssets","Promise","all","vehiclesLoaded","loaders","styles","container","vehicles","i","li_first","li","flexDirection","alignItems","flexWrap","apollo500","marginRight","length","fontSize","substring","position","right","mist900","Dimensions","get","width","Component","StyleSheet","create","marginTop","borderBottomColor","mist700","borderBottomWidth","padding","borderTopWidth","borderTopColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, TouchableHighlight, Dimensions } from 'react-native';\r\nimport Text from './Txt'\r\nimport Colors from '../constants/Colors'\r\nimport Icon from '../components/Icon'\r\nimport * as Font from 'expo-font'\r\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { withNavigation } from 'react-navigation';\r\n\r\n\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport UserStore from '../stores/userStore'\r\nimport ComponentStore from '../stores/componentStore'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\n//For Shimmer\r\nimport SvgAnimatedLinearGradient from 'react-native-svg-animated-linear-gradient'\r\nimport Svg, {Circle, Rect} from 'react-native-svg'\r\n\r\n\r\n\r\nfunction cacheFonts(fonts){\r\n    return fonts.map(font => Font.loadAsync(font))\r\n}\r\n\r\n\r\n@inject(\"UserStore\", \"ComponentStore\")\r\n@observer\r\nclass VehicleList extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n       \r\n    }\r\n\r\n   \r\n\r\n    async componentDidMount(){\r\n        const iconAssets = cacheFonts([FontAwesome.font, MaterialCommunityIcons.font])\r\n        await Promise.all([...iconAssets])\r\n        this.props.ComponentStore.vehiclesLoaded = true;\r\n    }\r\n\r\n    selectCar = (car) => {\r\n        this.props.ComponentStore.selectedVehicle = [];\r\n        this.props.ComponentStore.selectedVehicle.push({\r\n            VehicleID: car.VehicleID,\r\n            Year: car.Year,\r\n            Make: car.Make,\r\n            Model: car.Model,\r\n            Color: car.Color,\r\n            LicensePlate: car.LicensePlate,\r\n        })\r\n        // alert(this.props.ComponentStore.selectedVehicle[0].Year + \" \" + this.props.ComponentStore.selectedVehicle[0].Make + \" \" + this.props.ComponentStore.selectedVehicle[0].Model)\r\n        this.props.navigation.navigate(\"EditVehicle\")\r\n    }\r\n\r\n\r\n    render(){\r\n        let {vehiclesLoaded} =  this.props.ComponentStore;\r\n        let loaders = [];\r\n        if(vehiclesLoaded){\r\n        return(\r\n            <View style={styles.container}>\r\n                {\r\n                    this.props.UserStore.vehicles.map((car, i) => (\r\n      \r\n                        <TouchableOpacity\r\n                            key={this.props.UserStore.vehicles[i].VehicleID}\r\n                            style={i == 0 ? styles.li_first : styles.li}\r\n                            onPress = {() => this.selectCar(car)}\r\n                            >\r\n                               \r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                                <Icon\r\n                                    iconName=\"navigation\"\r\n                                    iconColor={Colors.apollo500}\r\n                                    iconSize={28}\r\n                                    style={{marginRight: 8}}\r\n                                    \r\n                                />\r\n                                <View style={{flexDirection: \"column\"}}>\r\n                                {(car.Year + \" \" + car.Make + \" \" + car.Model).length <= 28 ?\r\n                                <Text style={{fontSize: 16}}>{car.Year} {car.Make} {car.Model}</Text>\r\n                                : <Text style={{fontSize: 16}}>{(car.Year + \" \" + car.Make + \" \" + car.Model).substring(0, 28) + \"...\"}</Text>}\r\n                                <Text style={{flexWrap: 'wrap'}}>{car.LicensePlate}</Text>\r\n                                </View>\r\n                                <View style={{position:\"absolute\", right:0}}>\r\n                                    <Icon \r\n                                        iconName=\"chevron-right\"\r\n                                        iconColor={Colors.mist900}\r\n                                        iconSize={28}\r\n                                    />\r\n                                </View>\r\n    \r\n                            </View>\r\n                           \r\n                           \r\n                        </TouchableOpacity>\r\n                        \r\n                    ))\r\n                }\r\n            </View>\r\n            \r\n        )}else{\r\n            for(let i = 0; i < this.props.UserStore.vehicles.length; i++){\r\n                loaders.push(\r\n                    <SvgAnimatedLinearGradient key={i} width={Dimensions.get('window').width} height=\"50\">\r\n                        <Rect width={Dimensions.get('window').width} height=\"40\" rx=\"5\" ry=\"5\" />\r\n                    </SvgAnimatedLinearGradient>\r\n                )\r\n            }\r\n            return(\r\n                <View style={styles.container}>{loaders}</View>\r\n                \r\n                    \r\n                \r\n            )\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        marginTop: 10,\r\n    },\r\n    li: {\r\n        borderBottomColor: Colors.mist700,\r\n        borderBottomWidth: 1,\r\n        padding: 15,\r\n\r\n       \r\n    },\r\n    li_first: {\r\n        borderTopWidth: 1,\r\n        borderTopColor: Colors.mist700,\r\n        borderBottomColor: Colors.mist700,\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n    }\r\n})\r\n\r\nexport default withNavigation(VehicleList);"]},"metadata":{},"sourceType":"module"}