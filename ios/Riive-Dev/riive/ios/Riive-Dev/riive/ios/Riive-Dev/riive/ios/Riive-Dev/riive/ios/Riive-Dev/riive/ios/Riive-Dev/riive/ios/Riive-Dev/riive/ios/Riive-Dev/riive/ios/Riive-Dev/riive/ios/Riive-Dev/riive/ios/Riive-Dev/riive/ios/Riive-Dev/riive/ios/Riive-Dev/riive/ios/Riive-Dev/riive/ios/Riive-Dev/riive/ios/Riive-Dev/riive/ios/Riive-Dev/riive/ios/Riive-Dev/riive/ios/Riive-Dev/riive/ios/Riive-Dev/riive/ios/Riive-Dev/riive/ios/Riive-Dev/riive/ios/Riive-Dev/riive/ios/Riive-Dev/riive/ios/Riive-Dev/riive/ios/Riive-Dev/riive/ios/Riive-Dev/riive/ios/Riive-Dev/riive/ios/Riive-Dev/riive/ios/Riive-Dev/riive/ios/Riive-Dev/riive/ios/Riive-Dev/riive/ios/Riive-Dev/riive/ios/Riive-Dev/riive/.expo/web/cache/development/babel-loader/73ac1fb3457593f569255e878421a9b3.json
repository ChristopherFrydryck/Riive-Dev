{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/Input.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"./Txt\";\nimport Color from \"../constants/Colors\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { isNullOrUndefined } from 'util';\n\nvar input = function input(_ref) {\n  var label = _ref.label,\n      masked = _ref.masked,\n      flex = _ref.flex,\n      error = _ref.error,\n      value = _ref.value,\n      onChangeText = _ref.onChangeText,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry,\n      id = _ref.id,\n      keyboardType = _ref.keyboardType,\n      maxLength = _ref.maxLength,\n      autoCapitalize = _ref.autoCapitalize,\n      editable = _ref.editable,\n      ccType = _ref.ccType,\n      numLines = _ref.numLines,\n      rightText = _ref.rightText,\n      props = _objectWithoutProperties(_ref, [\"label\", \"masked\", \"flex\", \"error\", \"value\", \"onChangeText\", \"placeholder\", \"secureTextEntry\", \"id\", \"keyboardType\", \"maxLength\", \"autoCapitalize\", \"editable\", \"ccType\", \"numLines\", \"rightText\"]);\n\n  if (!props.mask) {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 22\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }\n    }, rightText)), React.createElement(TextInput, {\n      autoCorrect: false,\n      autoCapitalize: autoCapitalize,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      style: editable ? styles.input : styles.input_disabled,\n      secureTextEntry: secureTextEntry,\n      value: value,\n      id: id,\n      keyboardType: keyboardType,\n      maxLength: maxLength,\n      error: error,\n      editable: editable,\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, error));\n  } else if (props.mask == 'multiline') {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, rightText)), React.createElement(TextInput, {\n      autoCorrect: false,\n      autoCapitalize: autoCapitalize,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      style: editable ? styles.input : styles.input_disabled,\n      secureTextEntry: secureTextEntry,\n      value: value,\n      id: id,\n      textAlignVertical: \"top\",\n      multiline: true,\n      keyboardType: keyboardType,\n      numberOfLines: numLines,\n      maxLength: maxLength,\n      error: error,\n      editable: editable,\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, error));\n  } else if (props.mask == 'credit-card') {\n    if (ccType == 'amex' || 'Amex' || \"AMEX\") {\n      var cc = 'amex';\n    } else {\n      var cc = 'visa-or-mastercard';\n    }\n\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, rightText)), React.createElement(TextInputMask, {\n      type: 'credit-card',\n      options: {\n        obfuscated: false,\n        issuer: ccType\n      },\n      value: value,\n      style: editable ? styles.input : styles.input_disabled,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      keyboardType: \"numeric\",\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, error));\n  }\n\n  if (props.mask == 'phone') {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, rightText)), React.createElement(TextInputMask, {\n      type: 'custom',\n      options: {\n        mask: '999-999-9999'\n      },\n      value: value,\n      style: editable ? styles.input : styles.input_disabled,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      keyboardType: \"numeric\",\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, error));\n  }\n\n  if (props.mask == 'mm/dd/yyyy') {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, rightText)), React.createElement(TextInputMask, {\n      type: 'custom',\n      options: {\n        mask: '99/99/9999'\n      },\n      value: value,\n      style: editable ? styles.input : styles.input_disabled,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      keyboardType: \"numeric\",\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, error));\n  }\n\n  if (props.mask == 'mm/yy') {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, rightText)), React.createElement(TextInputMask, {\n      type: 'custom',\n      options: {\n        mask: '99/99'\n      },\n      value: value,\n      style: editable ? styles.input : styles.input_disabled,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      keyboardType: \"numeric\",\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, error));\n  }\n\n  if (props.mask == 'USD') {\n    return React.createElement(View, {\n      style: {\n        flex: flex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: editable ? styles.label : styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, label, \" \"), React.createElement(Text, {\n      style: styles.label_disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, rightText)), React.createElement(TextInputMask, {\n      type: 'money',\n      options: {\n        precision: 2,\n        separator: '.',\n        delimiter: ',',\n        unit: '$',\n        suffixUnit: ''\n      },\n      value: value,\n      style: editable ? styles.input : styles.input_disabled,\n      onChangeText: onChangeText,\n      placeholder: placeholder,\n      keyboardType: \"numeric\",\n      maxLength: maxLength,\n      rightText: rightText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    })), React.createElement(Text, {\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, error));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 5,\n    width: '100%',\n    borderColor: '#eee',\n    borderBottomWidth: 2\n  },\n  label: {\n    paddingTop: 5,\n    paddingBottom: 2,\n    paddingTop: 0,\n    color: '#333',\n    fontSize: 14,\n    fontWeight: '400',\n    width: 'auto'\n  },\n  label_disabled: {\n    paddingTop: 5,\n    paddingBottom: 2,\n    paddingTop: 0,\n    color: Color.cosmos300,\n    fontSize: 14,\n    fontWeight: '400',\n    width: 'auto'\n  },\n  input: {\n    paddingRight: 5,\n    paddingLeft: 5,\n    paddingBottom: 0,\n    color: '#333',\n    fontSize: 18,\n    width: '100%'\n  },\n  input_disabled: {\n    paddingRight: 5,\n    paddingLeft: 5,\n    paddingBottom: 0,\n    color: Color.mist900,\n    fontSize: 18,\n    width: '100%'\n  },\n  error: {\n    paddingTop: 3,\n    paddingBottom: 0,\n    color: 'red',\n    fontSize: 12,\n    fontWeight: '300',\n    width: 'auto'\n  }\n});\ninput.defaultProps = {\n  editable: true,\n  masked: false,\n  ccType: 'visa-or-mastercard'\n};\nexport default input;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/Input.js"],"names":["React","Text","Color","TextInputMask","isNullOrUndefined","input","label","masked","flex","error","value","onChangeText","placeholder","secureTextEntry","id","keyboardType","maxLength","autoCapitalize","editable","ccType","numLines","rightText","props","mask","styles","container","display","flexDirection","justifyContent","label_disabled","input_disabled","cc","obfuscated","issuer","precision","separator","delimiter","unit","suffixUnit","StyleSheet","create","marginTop","width","borderColor","borderBottomWidth","paddingTop","paddingBottom","color","fontSize","fontWeight","cosmos300","paddingRight","paddingLeft","mist900","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAASC,iBAAT,QAAkC,MAAlC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmL;AAAA,MAAjLC,KAAiL,QAAjLA,KAAiL;AAAA,MAA1KC,MAA0K,QAA1KA,MAA0K;AAAA,MAAlKC,IAAkK,QAAlKA,IAAkK;AAAA,MAA5JC,KAA4J,QAA5JA,KAA4J;AAAA,MAArJC,KAAqJ,QAArJA,KAAqJ;AAAA,MAA9IC,YAA8I,QAA9IA,YAA8I;AAAA,MAAhIC,WAAgI,QAAhIA,WAAgI;AAAA,MAAnHC,eAAmH,QAAnHA,eAAmH;AAAA,MAAlGC,EAAkG,QAAlGA,EAAkG;AAAA,MAA9FC,YAA8F,QAA9FA,YAA8F;AAAA,MAAhFC,SAAgF,QAAhFA,SAAgF;AAAA,MAArEC,cAAqE,QAArEA,cAAqE;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,KAAW;;AAG7L,MAAG,CAACA,KAAK,CAACC,IAAV,EAAe;AACf,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFJ,CADL,EAMI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAE,KADjB;AAEI,MAAA,cAAc,EAAEJ,cAFpB;AAGI,MAAA,YAAY,EAAEN,YAHlB;AAII,MAAA,WAAW,EAAEC,WAJjB;AAKI,MAAA,KAAK,EAAEM,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAL5C;AAMI,MAAA,eAAe,EAAEjB,eANrB;AAOI,MAAA,KAAK,EAAEH,KAPX;AAQI,MAAA,EAAE,EAAEI,EARR;AASI,MAAA,YAAY,EAAIC,YATpB;AAUI,MAAA,SAAS,EAAIC,SAVjB;AAWI,MAAA,KAAK,EAAIP,KAXb;AAYI,MAAA,QAAQ,EAAIS,QAZhB;AAaI,MAAA,SAAS,EAAIG,SAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAuBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CAvBJ,CADJ;AA0BE,GA3BF,MA2BO,IAAGa,KAAK,CAACC,IAAN,IAAc,WAAjB,EAA6B;AAChC,WACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFJ,CADJ,EAMI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAE,KADjB;AAEI,MAAA,cAAc,EAAEJ,cAFpB;AAGI,MAAA,YAAY,EAAEN,YAHlB;AAII,MAAA,WAAW,EAAEC,WAJjB;AAKI,MAAA,KAAK,EAAEM,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAL5C;AAMI,MAAA,eAAe,EAAEjB,eANrB;AAOI,MAAA,KAAK,EAAEH,KAPX;AAQI,MAAA,EAAE,EAAEI,EARR;AASI,MAAA,iBAAiB,EAAE,KATvB;AAUI,MAAA,SAAS,EAAI,IAVjB;AAWI,MAAA,YAAY,EAAIC,YAXpB;AAYI,MAAA,aAAa,EAAIK,QAZrB;AAaI,MAAA,SAAS,EAAIJ,SAbjB;AAcI,MAAA,KAAK,EAAIP,KAdb;AAeI,MAAA,QAAQ,EAAIS,QAfhB;AAgBI,MAAA,SAAS,EAAIG,SAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EA0BI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CA1BJ,CADA;AA6BF,GA9BK,MA8BA,IAAGa,KAAK,CAACC,IAAN,IAAc,aAAjB,EAA+B;AAClC,QAAGJ,MAAM,IAAI,MAAV,IAAoB,MAApB,IAA8B,MAAjC,EAAwC;AACpC,UAAIY,EAAE,GAAG,MAAT;AACH,KAFD,MAEK;AACD,UAAIA,EAAE,GAAG,oBAAT;AACH;;AAGD,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACvB,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFJ,CADJ,EAMI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,aADV;AAEI,MAAA,OAAO,EAAE;AACLW,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,MAAM,EAAEd;AAFH,OAFb;AAMI,MAAA,KAAK,EAAET,KANX;AAOI,MAAA,KAAK,EAAEQ,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAP5C;AAQI,MAAA,YAAY,EAAEnB,YARlB;AASI,MAAA,WAAW,EAAEC,WATjB;AAUI,MAAA,YAAY,EAAC,SAVjB;AAWI,MAAA,SAAS,EAAIS,SAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAqBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CArBJ,CADJ;AAyBH;;AAAA,MAAGa,KAAK,CAACC,IAAN,IAAc,OAAjB,EAAyB;AACtB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADR,EAEQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFR,CADJ,EAMI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,OAAO,EAAE;AACLE,QAAAA,IAAI,EAAE;AADD,OAFb;AAKI,MAAA,KAAK,EAAEb,KALX;AAMI,MAAA,KAAK,EAAEQ,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAN5C;AAOI,MAAA,YAAY,EAAEnB,YAPlB;AAQI,MAAA,WAAW,EAAEC,WARjB;AASI,MAAA,YAAY,EAAC,SATjB;AAUI,MAAA,SAAS,EAAIS,SAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAoBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CApBJ,CADJ;AAwBH;;AAAA,MAAGa,KAAK,CAACC,IAAN,IAAc,YAAjB,EAA8B;AAC3B,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFJ,CADJ,EAMI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,OAAO,EAAE;AACLE,QAAAA,IAAI,EAAE;AADD,OAFb;AAKI,MAAA,KAAK,EAAEb,KALX;AAMI,MAAA,KAAK,EAAEQ,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAN5C;AAOI,MAAA,YAAY,EAAEnB,YAPlB;AAQI,MAAA,WAAW,EAAEC,WARjB;AASI,MAAA,YAAY,EAAC,SATjB;AAUI,MAAA,SAAS,EAAIS,SAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAoBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CApBJ,CADJ;AAwBH;;AAAA,MAAGa,KAAK,CAACC,IAAN,IAAc,OAAjB,EAAyB;AACtB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADR,EAEQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFR,CADJ,EAMI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,OAAO,EAAE;AACLE,QAAAA,IAAI,EAAE;AADD,OAFb;AAKI,MAAA,KAAK,EAAEb,KALX;AAMI,MAAA,KAAK,EAAEQ,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAN5C;AAOI,MAAA,YAAY,EAAEnB,YAPlB;AAQI,MAAA,WAAW,EAAEC,WARjB;AASI,MAAA,YAAY,EAAC,SATjB;AAUI,MAAA,SAAS,EAAIS,SAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAoBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CApBJ,CADJ;AAwBH;;AAAA,MAAGa,KAAK,CAACC,IAAN,IAAc,KAAjB,EAAuB;AACpB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACf,QAAAA,IAAI,EAAEA;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,KAAjC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,QAAQ,GAAGM,MAAM,CAAClB,KAAV,GAAkBkB,MAAM,CAACK,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DvB,KAA/D,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCR,SAArC,CAFJ,CADJ,EAKI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,OADV;AAEI,MAAA,OAAO,EAAE;AACLa,QAAAA,SAAS,EAAE,CADN;AAELC,QAAAA,SAAS,EAAE,GAFN;AAGLC,QAAAA,SAAS,EAAE,GAHN;AAILC,QAAAA,IAAI,EAAE,GAJD;AAKLC,QAAAA,UAAU,EAAE;AALP,OAFb;AASI,MAAA,KAAK,EAAE5B,KATX;AAUI,MAAA,KAAK,EAAEQ,QAAQ,GAAGM,MAAM,CAACnB,KAAV,GAAkBmB,MAAM,CAACM,cAV5C;AAWI,MAAA,YAAY,EAAEnB,YAXlB;AAYI,MAAA,WAAW,EAAEC,WAZjB;AAaI,MAAA,YAAY,EAAC,SAbjB;AAcI,MAAA,SAAS,EAAII,SAdjB;AAeI,MAAA,SAAS,EAAIK,SAfjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADR,EAwBQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAA5B,CAxBR,CADJ;AA4BH;AACJ,CAtMD;;AAyMA,IAAMe,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7Bf,EAAAA,SAAS,EAAE;AACPgB,IAAAA,SAAS,EAAE,CADJ;AAEPC,IAAAA,KAAK,EAAE,MAFA;AAGPC,IAAAA,WAAW,EAAE,MAHN;AAIPC,IAAAA,iBAAiB,EAAE;AAJZ,GADkB;AAS7BtC,EAAAA,KAAK,EAAE;AACHuC,IAAAA,UAAU,EAAE,CADT;AAEHC,IAAAA,aAAa,EAAE,CAFZ;AAGHD,IAAAA,UAAU,EAAE,CAHT;AAIHE,IAAAA,KAAK,EAAE,MAJJ;AAKHC,IAAAA,QAAQ,EAAE,EALP;AAMHC,IAAAA,UAAU,EAAE,KANT;AAOHP,IAAAA,KAAK,EAAE;AAPJ,GATsB;AAkB7Bb,EAAAA,cAAc,EAAE;AACZgB,IAAAA,UAAU,EAAE,CADA;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZD,IAAAA,UAAU,EAAE,CAHA;AAIZE,IAAAA,KAAK,EAAE7C,KAAK,CAACgD,SAJD;AAKZF,IAAAA,QAAQ,EAAE,EALE;AAMZC,IAAAA,UAAU,EAAE,KANA;AAOZP,IAAAA,KAAK,EAAE;AAPK,GAlBa;AA2B7BrC,EAAAA,KAAK,EAAE;AACH8C,IAAAA,YAAY,EAAE,CADX;AAEHC,IAAAA,WAAW,EAAE,CAFV;AAGHN,IAAAA,aAAa,EAAE,CAHZ;AAIHC,IAAAA,KAAK,EAAE,MAJJ;AAKHC,IAAAA,QAAQ,EAAE,EALP;AAMHN,IAAAA,KAAK,EAAE;AANJ,GA3BsB;AAmC7BZ,EAAAA,cAAc,EAAE;AACZqB,IAAAA,YAAY,EAAE,CADF;AAEZC,IAAAA,WAAW,EAAE,CAFD;AAGZN,IAAAA,aAAa,EAAE,CAHH;AAIZC,IAAAA,KAAK,EAAE7C,KAAK,CAACmD,OAJD;AAKZL,IAAAA,QAAQ,EAAE,EALE;AAMZN,IAAAA,KAAK,EAAE;AANK,GAnCa;AA2C7BjC,EAAAA,KAAK,EAAE;AACHoC,IAAAA,UAAU,EAAE,CADT;AAEHC,IAAAA,aAAa,EAAE,CAFZ;AAGHC,IAAAA,KAAK,EAAE,KAHJ;AAIHC,IAAAA,QAAQ,EAAE,EAJP;AAKHC,IAAAA,UAAU,EAAE,KALT;AAMHP,IAAAA,KAAK,EAAE;AANJ;AA3CsB,CAAlB,CAAf;AAqDArC,KAAK,CAACiD,YAAN,GAAqB;AACjBpC,EAAAA,QAAQ,EAAE,IADO;AAEjBX,EAAAA,MAAM,EAAE,KAFS;AAGjBY,EAAAA,MAAM,EAAE;AAHS,CAArB;AAMA,eAAed,KAAf","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, TextInput } from 'react-native';\r\nimport Text from './Txt'\r\nimport Color from '../constants/Colors'\r\nimport {TextInputMask} from 'react-native-masked-text'\r\nimport { isNullOrUndefined } from 'util';\r\n\r\nconst input = ({label, masked, flex, error, value, onChangeText, placeholder, secureTextEntry, id, keyboardType, maxLength, autoCapitalize, editable, ccType, numLines, rightText, ...props}) => {\r\n \r\n   \r\n    if(!props.mask){\r\n    return (\r\n        <View style={{flex: flex}}>\r\n            <View style={styles.container}>\r\n                 <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                     <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                     <Text style={styles.label_disabled}>{rightText}</Text>\r\n                </View>\r\n                \r\n                <TextInput\r\n                    autoCorrect={false}\r\n                    autoCapitalize={autoCapitalize}\r\n                    onChangeText={onChangeText}\r\n                    placeholder={placeholder}\r\n                    style={editable ? styles.input : styles.input_disabled}\r\n                    secureTextEntry={secureTextEntry}\r\n                    value={value}\r\n                    id={id}\r\n                    keyboardType = {keyboardType}\r\n                    maxLength = {maxLength}\r\n                    error = {error}\r\n                    editable = {editable}\r\n                    rightText = {rightText}\r\n                />\r\n            </View>\r\n            <Text style={styles.error}>{error}</Text>\r\n        </View>    \r\n    )}else if(props.mask == 'multiline'){\r\n        return(\r\n        <View style={{flex: flex}}>\r\n            <View style={styles.container}>\r\n                <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                    <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                    <Text style={styles.label_disabled}>{rightText}</Text>\r\n                </View>\r\n                \r\n                <TextInput\r\n                    autoCorrect={false}\r\n                    autoCapitalize={autoCapitalize}\r\n                    onChangeText={onChangeText}\r\n                    placeholder={placeholder}\r\n                    style={editable ? styles.input : styles.input_disabled}\r\n                    secureTextEntry={secureTextEntry}\r\n                    value={value}\r\n                    id={id}\r\n                    textAlignVertical= \"top\"\r\n                    multiline = {true}\r\n                    keyboardType = {keyboardType}\r\n                    numberOfLines = {numLines}\r\n                    maxLength = {maxLength}\r\n                    error = {error}\r\n                    editable = {editable}\r\n                    rightText = {rightText}\r\n                />\r\n            </View>\r\n            <Text style={styles.error}>{error}</Text>\r\n        </View>\r\n    )}else if(props.mask == 'credit-card'){\r\n        if(ccType == 'amex' || 'Amex' || \"AMEX\"){\r\n            var cc = 'amex'\r\n        }else{\r\n            var cc = 'visa-or-mastercard'\r\n        }\r\n        // For docs on text input masking:\r\n        // https://github.com/benhurott/react-native-masked-text\r\n        return (\r\n            <View style={{flex: flex}}>\r\n                <View style={styles.container}>\r\n                    <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                        <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                        <Text style={styles.label_disabled}>{rightText}</Text>\r\n                     </View>\r\n                    \r\n                    <TextInputMask\r\n                        type={'credit-card'}\r\n                        options={{\r\n                            obfuscated: false,\r\n                            issuer: ccType\r\n                        }}\r\n                        value={value}\r\n                        style={editable ? styles.input : styles.input_disabled}\r\n                        onChangeText={onChangeText}\r\n                        placeholder={placeholder}\r\n                        keyboardType='numeric' \r\n                        rightText = {rightText}\r\n                    />\r\n                </View>\r\n                <Text style={styles.error}>{error}</Text>\r\n            </View>    \r\n        )\r\n    }if(props.mask == 'phone'){\r\n        return (\r\n            <View style={{flex: flex}}>\r\n                <View style={styles.container}>\r\n                    <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                            <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                            <Text style={styles.label_disabled}>{rightText}</Text>\r\n                    </View>\r\n                    \r\n                    <TextInputMask\r\n                        type={'custom'}\r\n                        options={{\r\n                            mask: '999-999-9999'\r\n                        }}\r\n                        value={value}\r\n                        style={editable ? styles.input : styles.input_disabled}\r\n                        onChangeText={onChangeText}\r\n                        placeholder={placeholder}\r\n                        keyboardType='numeric' \r\n                        rightText = {rightText}\r\n                    />\r\n                </View>\r\n                <Text style={styles.error}>{error}</Text>\r\n            </View>    \r\n        )\r\n    }if(props.mask == 'mm/dd/yyyy'){\r\n        return (\r\n            <View style={{flex: flex}}>\r\n                <View style={styles.container}>\r\n                    <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                        <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                        <Text style={styles.label_disabled}>{rightText}</Text>\r\n                    </View>\r\n                    \r\n                    <TextInputMask\r\n                        type={'custom'}\r\n                        options={{\r\n                            mask: '99/99/9999'\r\n                        }}\r\n                        value={value}\r\n                        style={editable ? styles.input : styles.input_disabled}\r\n                        onChangeText={onChangeText}\r\n                        placeholder={placeholder}\r\n                        keyboardType='numeric' \r\n                        rightText = {rightText}\r\n                    />\r\n                </View>\r\n                <Text style={styles.error}>{error}</Text>\r\n            </View>    \r\n        )\r\n    }if(props.mask == 'mm/yy'){\r\n        return (\r\n            <View style={{flex: flex}}>\r\n                <View style={styles.container}>\r\n                    <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                            <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                            <Text style={styles.label_disabled}>{rightText}</Text>\r\n                        </View>\r\n                    \r\n                    <TextInputMask\r\n                        type={'custom'}\r\n                        options={{\r\n                            mask: '99/99'\r\n                        }}\r\n                        value={value}\r\n                        style={editable ? styles.input : styles.input_disabled}\r\n                        onChangeText={onChangeText}\r\n                        placeholder={placeholder}\r\n                        keyboardType='numeric' \r\n                        rightText = {rightText}\r\n                    />\r\n                </View>\r\n                <Text style={styles.error}>{error}</Text>\r\n            </View>    \r\n        )\r\n    }if(props.mask == 'USD'){\r\n        return(\r\n            <View style={{flex: flex}}>\r\n                    <View style={styles.container}>\r\n                        <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                            <Text style={editable ? styles.label : styles.label_disabled}>{label} </Text>\r\n                            <Text style={styles.label_disabled}>{rightText}</Text>\r\n                        </View>\r\n                        <TextInputMask\r\n                            type={'money'}\r\n                            options={{\r\n                                precision: 2,\r\n                                separator: '.',\r\n                                delimiter: ',',\r\n                                unit: '$',\r\n                                suffixUnit: ''\r\n                            }}\r\n                            value={value}\r\n                            style={editable ? styles.input : styles.input_disabled}\r\n                            onChangeText={onChangeText}\r\n                            placeholder={placeholder}\r\n                            keyboardType='numeric' \r\n                            maxLength = {maxLength}\r\n                            rightText = {rightText}\r\n                        />\r\n                    </View>\r\n                    <Text style={styles.error}>{error}</Text>\r\n                </View>    \r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 5,\r\n        width: '100%',\r\n        borderColor: '#eee',\r\n        borderBottomWidth: 2\r\n\r\n    },\r\n    \r\n    label: {\r\n        paddingTop: 5,\r\n        paddingBottom: 2,\r\n        paddingTop: 0,\r\n        color: '#333',\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        width: 'auto'\r\n    },\r\n    label_disabled: {\r\n        paddingTop: 5,\r\n        paddingBottom: 2,\r\n        paddingTop: 0,\r\n        color: Color.cosmos300,\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        width: 'auto'\r\n    },\r\n    input: {\r\n        paddingRight: 5,\r\n        paddingLeft: 5,\r\n        paddingBottom: 0,\r\n        color: '#333',\r\n        fontSize: 18,\r\n        width: '100%'\r\n    },\r\n    input_disabled: {\r\n        paddingRight: 5,\r\n        paddingLeft: 5,\r\n        paddingBottom: 0,\r\n        color: Color.mist900,\r\n        fontSize: 18,\r\n        width: '100%'\r\n    },\r\n    error: {\r\n        paddingTop: 3,\r\n        paddingBottom: 0,\r\n        color: 'red',\r\n        fontSize: 12,\r\n        fontWeight: '300',\r\n        width: 'auto'\r\n    }\r\n})\r\n\r\ninput.defaultProps = {\r\n    editable: true,\r\n    masked: false,\r\n    ccType: 'visa-or-mastercard'\r\n}\r\n\r\nexport default input"]},"metadata":{},"sourceType":"module"}