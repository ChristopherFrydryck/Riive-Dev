{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/PaymentList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"./Txt\";\nimport Colors from \"../constants/Colors\";\nimport Icon from \"./Icon\";\nimport ClickableChip from \"./ClickableChip\";\nimport * as Font from 'expo-font';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { withNavigation } from 'react-navigation';\nimport { inject, observer } from 'mobx-react/native';\nimport UserStore from \"../stores/userStore\";\nimport ComponentStore from \"../stores/componentStore\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport SvgAnimatedLinearGradient from 'react-native-svg-animated-linear-gradient';\nimport Svg, { Circle, Rect } from 'react-native-svg';\n\nfunction cacheFonts(fonts) {\n  return fonts.map(function (font) {\n    return Font.loadAsync(font);\n  });\n}\n\nvar VehicleList = (_dec = inject(\"UserStore\", \"ComponentStore\"), _dec(_class = observer(_class = (_temp = function (_React$Component) {\n  _inherits(VehicleList, _React$Component);\n\n  var _super = _createSuper(VehicleList);\n\n  function VehicleList() {\n    var _this;\n\n    _classCallCheck(this, VehicleList);\n\n    _this = _super.call(this);\n\n    _this.selectPayment = function (payment) {\n      _this.props.ComponentStore.selectedPayment = [];\n\n      _this.props.ComponentStore.selectedPayment.push({\n        CardType: payment.CardType,\n        Month: payment.Month,\n        Name: payment.Name,\n        Number: payment.Number,\n        PaymentID: payment.PaymentID,\n        StripeID: payment.StripeID,\n        Type: payment.Type,\n        Year: payment.Year,\n        CCV: payment.CCV\n      });\n\n      _this.props.navigation.navigate(\"EditPayment\");\n    };\n\n    return _this;\n  }\n\n  _createClass(VehicleList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var iconAssets;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              iconAssets = cacheFonts([FontAwesome.font, MaterialCommunityIcons.font]);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(iconAssets)));\n\n            case 3:\n              this.props.ComponentStore.paymentsLoaded = true;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var yearString = new Date().getFullYear().toString().substr(-2);\n      var lastTwoYear = parseInt(yearString, 10);\n      var month = new Date().getMonth();\n      var paymentsLoaded = this.props.ComponentStore.paymentsLoaded;\n      var payments = this.props.UserStore.payments;\n      var loaders = [];\n\n      if (paymentsLoaded) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        }, this.props.UserStore.payments.map(function (payment, i) {\n          return React.createElement(TouchableOpacity, {\n            key: payments[i].PaymentID,\n            style: i == 0 ? styles.li_first : styles.li,\n            onPress: function onPress() {\n              return _this2.selectPayment(payment);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }\n          }, payment.Type == \"Card\" ? React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconName: \"credit-card\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }), payments[i].Year > lastTwoYear || payments[i].Year === lastTwoYear && payments[i].Month >= month ? React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }\n          }, payment.CardType == 'diners-club' ? React.createElement(Text, {\n            style: styles.cardTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }\n          }, \"Diners Club Card\") : payment.CardType == 'jcb' ? React.createElement(Text, {\n            style: styles.cardTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }\n          }, \"JCB Card\") : payment.CardType == 'mastercard' ? React.createElement(Text, {\n            style: styles.cardTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }\n          }, \"Mastercard\") : React.createElement(Text, {\n            style: styles.cardTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }\n          }, payment.CardType.charAt(0).toUpperCase() + payment.CardType.slice(1), \" Card\"), payment.CardType == 'diners-club' ? React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 73\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number) : payment.Type == \"amex\" ? React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 62\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number) : React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number)) : React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 35\n            }\n          }, payment.CardType == 'diners-club' ? React.createElement(Text, {\n            style: styles.cardTitleExpired,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }\n          }, \"Diners Club Card\") : payment.CardType == 'jcb' ? React.createElement(Text, {\n            style: styles.cardTitleExpired,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }\n          }, \"JCB Card\") : payment.CardType == 'mastercard' ? React.createElement(Text, {\n            style: styles.cardTitleExpired,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }\n          }, \"Mastercard\") : React.createElement(View, {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: styles.cardTitleExpired,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 113\n            }\n          }, payment.CardType.charAt(0).toUpperCase() + payment.CardType.slice(1), \" Card\"), React.createElement(Text, {\n            style: styles.expiredText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 233\n            }\n          }, \"Expired\")), payment.CardType == 'diners-club' ? React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 74\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number) : payment.Type == \"amex\" ? React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 62\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number) : React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }\n          }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", payment.Number)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }\n          }))) : payment.Type == \"Riive Credit\" ? React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconName: \"dollar-sign\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }\n          }), React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }\n          }, payment.Type), React.createElement(Text, {\n            style: {\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }\n          }, payment.Amount % 1 === 0 ? '$' + payment.Amount + '.00' : '$' + payment.Amount)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }\n          }))) : payment.Type == \"PayPal\" ? React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconLib: \"Entypo\",\n            iconName: \"paypal\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }\n          }), React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }\n          }, payment.Type), React.createElement(Text, {\n            style: {\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }\n          }, payment.Email)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }\n          }))) : payment.Type == \"Venmo\" ? React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }\n          }, React.createElement(Icon, {\n            iconLib: \"MaterialCommunityIcons\",\n            iconName: \"venmo\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }\n          }), React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }\n          }, payment.Type), React.createElement(Text, {\n            style: {\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }\n          }, payment.Email)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }\n          }))) : React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              flexWrap: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }\n          }, React.createElement(Icon, {\n            iconName: \"dollar-sign\",\n            iconColor: Colors.apollo500,\n            iconSize: 28,\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }\n          }), React.createElement(View, {\n            style: {\n              flexDirection: \"column\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 16\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }\n          }, payment.Type), React.createElement(Text, {\n            style: {\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }\n          }, payment.Email)), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              right: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }\n          }, React.createElement(Icon, {\n            iconName: \"chevron-right\",\n            iconColor: Colors.mist900,\n            iconSize: 28,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }\n          }))));\n        }));\n      } else {\n        for (var i = 0; i < this.props.UserStore.vehicles.length; i++) {\n          loaders.push(React.createElement(SvgAnimatedLinearGradient, {\n            key: i,\n            width: Dimensions.get('window').width,\n            height: \"50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }\n          }, React.createElement(Rect, {\n            width: Dimensions.get('window').width,\n            height: \"40\",\n            rx: \"5\",\n            ry: \"5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }\n          })));\n        }\n\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }\n        }, loaders);\n      }\n    }\n  }]);\n\n  return VehicleList;\n}(React.Component), _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10\n  },\n  li: {\n    borderBottomColor: Colors.mist700,\n    borderBottomWidth: 1,\n    padding: 15\n  },\n  li_first: {\n    borderTopWidth: 1,\n    borderTopColor: Colors.mist700,\n    borderBottomColor: Colors.mist700,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  cardTitle: {\n    fontSize: 16\n  },\n  cardTitleExpired: {\n    fontSize: 16,\n    color: Colors.cosmos300,\n    textDecorationLine: 'line-through',\n    textDecorationStyle: 'solid'\n  },\n  expiredText: {\n    fontSize: 14,\n    color: Colors.hal500\n  }\n});\nexport default withNavigation(VehicleList);","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/PaymentList.js"],"names":["React","Text","Colors","Icon","ClickableChip","Font","FontAwesome","MaterialCommunityIcons","withNavigation","inject","observer","UserStore","ComponentStore","TouchableOpacity","SvgAnimatedLinearGradient","Svg","Circle","Rect","cacheFonts","fonts","map","font","loadAsync","VehicleList","selectPayment","payment","props","selectedPayment","push","CardType","Month","Name","Number","PaymentID","StripeID","Type","Year","CCV","navigation","navigate","iconAssets","Promise","all","paymentsLoaded","yearString","Date","getFullYear","toString","substr","lastTwoYear","parseInt","month","getMonth","payments","loaders","styles","container","i","li_first","li","flexDirection","alignItems","flexWrap","apollo500","marginRight","cardTitle","charAt","toUpperCase","slice","cardTitleExpired","display","expiredText","position","right","mist900","fontSize","Amount","Email","vehicles","length","Dimensions","get","width","Component","StyleSheet","create","marginTop","borderBottomColor","mist700","borderBottomWidth","padding","borderTopWidth","borderTopColor","color","cosmos300","textDecorationLine","textDecorationStyle","hal500"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, TouchableHighlight, Dimensions } from 'react-native';\r\nimport Text from './Txt'\r\nimport Colors from '../constants/Colors'\r\nimport Icon from './Icon'\r\nimport ClickableChip from './ClickableChip'\r\nimport * as Font from 'expo-font'\r\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { withNavigation } from 'react-navigation';\r\n\r\n\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport UserStore from '../stores/userStore'\r\nimport ComponentStore from '../stores/componentStore'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\n//For Shimmer\r\nimport SvgAnimatedLinearGradient from 'react-native-svg-animated-linear-gradient'\r\nimport Svg, {Circle, Rect} from 'react-native-svg'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction cacheFonts(fonts){\r\n    return fonts.map(font => Font.loadAsync(font))\r\n}\r\n\r\n\r\n\r\n@inject(\"UserStore\", \"ComponentStore\")\r\n@observer\r\nclass VehicleList extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n       \r\n    }\r\n\r\n    async componentDidMount(){\r\n        const iconAssets = cacheFonts([FontAwesome.font, MaterialCommunityIcons.font])\r\n        await Promise.all([...iconAssets])\r\n        this.props.ComponentStore.paymentsLoaded = true;\r\n    }\r\n\r\n    selectPayment = (payment) => {\r\n        this.props.ComponentStore.selectedPayment = [];\r\n        this.props.ComponentStore.selectedPayment.push({\r\n            CardType: payment.CardType,\r\n            Month: payment.Month,\r\n            Name: payment.Name,\r\n            Number: payment.Number,\r\n            PaymentID: payment.PaymentID,\r\n            StripeID: payment.StripeID,\r\n            Type: payment.Type,\r\n            Year: payment.Year,\r\n            CCV: payment.CCV,\r\n        })\r\n        // alert(this.props.ComponentStore.selectedVehicle[0].Year + \" \" + this.props.ComponentStore.selectedVehicle[0].Make + \" \" + this.props.ComponentStore.selectedVehicle[0].Model)\r\n        this.props.navigation.navigate(\"EditPayment\")\r\n    }\r\n\r\n\r\n    render(){\r\n        let yearString = new Date().getFullYear().toString().substr(-2);\r\n        let lastTwoYear = parseInt(yearString, 10);\r\n        let month = new Date().getMonth();\r\n        let {paymentsLoaded} =  this.props.ComponentStore;\r\n        let {payments} = this.props.UserStore;\r\n        let loaders = [];\r\n        if(paymentsLoaded){\r\n        return(\r\n            \r\n            <View style={styles.container}>\r\n                {\r\n                    this.props.UserStore.payments.map((payment, i) => (\r\n                        \r\n                        <TouchableOpacity\r\n                            key={payments[i].PaymentID}\r\n                            style={i == 0 ? styles.li_first : styles.li}\r\n                            onPress = {() => this.selectPayment(payment)}\r\n                            >\r\n                            {payment.Type == \"Card\" ?   \r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                                <Icon\r\n                                    iconName=\"credit-card\"\r\n                                    iconColor={Colors.apollo500}\r\n                                    iconSize={28}\r\n                                    style={{marginRight: 8}}\r\n                                    \r\n                                />\r\n                                {payments[i].Year > lastTwoYear || payments[i].Year === lastTwoYear && payments[i].Month >= month ? \r\n                                    <View style={{flexDirection: \"column\"}}>\r\n                                    {payment.CardType == 'diners-club' ? \r\n                                    <Text style={styles.cardTitle}>Diners Club Card</Text>: payment.CardType == 'jcb' ? \r\n                                    <Text style={styles.cardTitle}>JCB Card</Text> : payment.CardType == 'mastercard' ? \r\n                                    <Text style={styles.cardTitle}>Mastercard</Text> : \r\n                                    <Text style={styles.cardTitle}>{payment.CardType.charAt(0).toUpperCase() + payment.CardType.slice(1)} Card</Text>}\r\n                                    \r\n                                    {payment.CardType == 'diners-club'? <Text>••••••••••••{payment.Number}</Text> : \r\n                                    payment.Type == \"amex\" ? <Text>•••••••••••{payment.Number}</Text> : \r\n                                    <Text>••••••••••••{payment.Number}</Text>}\r\n                                </View>\r\n                                : <View style={{flexDirection: \"column\"}}>\r\n                                    {payment.CardType == 'diners-club' ? \r\n                                    <Text style={styles.cardTitleExpired}>Diners Club Card</Text>: payment.CardType == 'jcb' ? \r\n                                    <Text style={styles.cardTitleExpired}>JCB Card</Text> : payment.CardType == 'mastercard' ? \r\n                                    <Text style={styles.cardTitleExpired}>Mastercard</Text> : \r\n                                    <View style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}><Text style={styles.cardTitleExpired}>{payment.CardType.charAt(0).toUpperCase() + payment.CardType.slice(1)} Card</Text><Text style={styles.expiredText}>Expired</Text></View>}\r\n\r\n                                    {payment.CardType == 'diners-club' ? <Text>••••••••••••{payment.Number}</Text> : \r\n                                    payment.Type == \"amex\" ? <Text>•••••••••••{payment.Number}</Text> : \r\n                                    <Text>••••••••••••{payment.Number}</Text>}\r\n                                </View>}\r\n                                \r\n                                <View style={{position:\"absolute\", right:0}}>\r\n                                    <Icon \r\n                                        iconName=\"chevron-right\"\r\n                                        iconColor={Colors.mist900}\r\n                                        iconSize={28}\r\n                                    />\r\n                                </View>\r\n    \r\n                            </View>\r\n                            : payment.Type == \"Riive Credit\" ? \r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                            <Icon\r\n                                iconName=\"dollar-sign\"\r\n                                iconColor={Colors.apollo500}\r\n                                iconSize={28}\r\n                                style={{marginRight: 8}}\r\n                                \r\n                            />\r\n                            <View style={{flexDirection: \"column\"}}>\r\n                                <Text style={{fontSize: 16}}>{payment.Type}</Text>\r\n                                <Text style={{flexWrap: 'wrap'}}>{payment.Amount % 1 === 0 ? '$' + payment.Amount + '.00' : '$' + payment.Amount}</Text>\r\n                            </View>\r\n                            <View style={{position:\"absolute\", right:0}}>\r\n                                <Icon \r\n                                    iconName=\"chevron-right\"\r\n                                    iconColor={Colors.mist900}\r\n                                    iconSize={28}\r\n                                />\r\n                            </View>\r\n\r\n                        </View> \r\n                            : payment.Type == \"PayPal\" ?\r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                                <Icon\r\n                                    iconLib = \"Entypo\"\r\n                                    iconName=\"paypal\"\r\n                                    iconColor={Colors.apollo500}\r\n                                    iconSize={28}\r\n                                    style={{marginRight: 8}}\r\n                                    \r\n                                />\r\n                                <View style={{flexDirection: \"column\"}}>\r\n                                    <Text style={{fontSize: 16}}>{payment.Type}</Text>\r\n                                    <Text style={{flexWrap: 'wrap'}}>{payment.Email}</Text>\r\n                                </View>\r\n                                <View style={{position:\"absolute\", right:0}}>\r\n                                    <Icon \r\n                                        iconName=\"chevron-right\"\r\n                                        iconColor={Colors.mist900}\r\n                                        iconSize={28}\r\n                                    />\r\n                                </View>\r\n\r\n                            </View> \r\n                        : payment.Type == \"Venmo\" ?\r\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                            <Icon\r\n                                iconLib = \"MaterialCommunityIcons\"\r\n                                iconName=\"venmo\"\r\n                                iconColor={Colors.apollo500}\r\n                                iconSize={28}\r\n                                style={{marginRight: 8}}\r\n                                \r\n                            />\r\n                            <View style={{flexDirection: \"column\"}}>\r\n                                <Text style={{fontSize: 16}}>{payment.Type}</Text>\r\n                                <Text style={{flexWrap: 'wrap'}}>{payment.Email}</Text>\r\n                            </View>\r\n                            <View style={{position:\"absolute\", right:0}}>\r\n                                <Icon \r\n                                    iconName=\"chevron-right\"\r\n                                    iconColor={Colors.mist900}\r\n                                    iconSize={28}\r\n                                />\r\n                            </View>\r\n                        </View> \r\n                        :\r\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexWrap: 'nowrap'}}>\r\n                                <Icon\r\n                                    iconName=\"dollar-sign\"\r\n                                    iconColor={Colors.apollo500}\r\n                                    iconSize={28}\r\n                                    style={{marginRight: 8}}\r\n                                    \r\n                                />\r\n                                <View style={{flexDirection: \"column\"}}>\r\n                                    <Text style={{fontSize: 16}}>{payment.Type}</Text>\r\n                                    <Text style={{flexWrap: 'wrap'}}>{payment.Email}</Text>\r\n                                </View>\r\n                                <View style={{position:\"absolute\", right:0}}>\r\n                                    <Icon \r\n                                        iconName=\"chevron-right\"\r\n                                        iconColor={Colors.mist900}\r\n                                        iconSize={28}\r\n                                    />\r\n                                </View>\r\n\r\n                            </View> \r\n                            }\r\n                           \r\n                           \r\n                        </TouchableOpacity>\r\n                        \r\n                    ))\r\n                }\r\n            </View>\r\n            \r\n        )}else{\r\n            for(let i = 0; i < this.props.UserStore.vehicles.length; i++){\r\n                loaders.push(\r\n                    <SvgAnimatedLinearGradient key={i} width={Dimensions.get('window').width} height=\"50\">\r\n                        <Rect width={Dimensions.get('window').width} height=\"40\" rx=\"5\" ry=\"5\" />\r\n                    </SvgAnimatedLinearGradient>\r\n                )\r\n            }\r\n            return(\r\n                <View style={styles.container}>{loaders}</View>\r\n                \r\n                    \r\n                \r\n            )\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        marginTop: 10,\r\n    },\r\n    li: {\r\n        borderBottomColor: Colors.mist700,\r\n        borderBottomWidth: 1,\r\n        padding: 15,\r\n\r\n       \r\n    },\r\n    li_first: {\r\n        borderTopWidth: 1,\r\n        borderTopColor: Colors.mist700,\r\n        borderBottomColor: Colors.mist700,\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n    },\r\n    cardTitle: {\r\n        fontSize: 16,\r\n    },\r\n    cardTitleExpired: {\r\n        fontSize: 16,\r\n        color: Colors.cosmos300,\r\n        textDecorationLine: 'line-through',\r\n        textDecorationStyle: 'solid',\r\n    },\r\n    expiredText: {\r\n        fontSize: 14,\r\n        color: Colors.hal500,\r\n    }\r\n})\r\n\r\nexport default withNavigation(VehicleList)"]},"metadata":{},"sourceType":"module"}