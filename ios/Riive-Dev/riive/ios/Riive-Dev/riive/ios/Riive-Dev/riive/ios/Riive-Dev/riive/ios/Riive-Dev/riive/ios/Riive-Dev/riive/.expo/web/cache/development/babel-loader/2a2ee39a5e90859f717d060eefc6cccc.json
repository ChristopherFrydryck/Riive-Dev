{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/AddPayment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"../components/Txt\";\nimport Input from \"../components/Input\";\nimport Icon from \"../components/Icon\";\nimport Button from \"../components/Button\";\nimport Colors from \"../constants/Colors\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport firebaseConfig from \"../firebaseConfig\";\nimport { inject, observer } from 'mobx-react/native';\nimport { requireNativeViewManager } from '@unimodules/core';\nimport stripe from 'tipsi-stripe';\nstripe.setOptions({\n  publishableKey: 'pk_test_lojsrOCvzrsIiGQFXSUquLHX00pzpkST7r'\n});\nvar regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/i;\nvar d = new Date();\nvar year = d.getFullYear().toString();\nvar lastTwoYearString = year.slice(-2);\nvar lastTwoYear = Number(lastTwoYearString);\nvar month = d.getMonth() + 1;\nvar addPayment = (_dec = inject(\"UserStore\", \"ComponentStore\"), _dec(_class = observer(_class = (_temp = _class2 = function (_Component) {\n  _inherits(addPayment, _Component);\n\n  var _super = _createSuper(addPayment);\n\n  function addPayment(props) {\n    var _this;\n\n    _classCallCheck(this, addPayment);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.getCardType = function (cardNum) {\n      if (cardNum !== null) {\n        if (cardNum.length >= 2) {\n          if (cardNum.charAt(0) == 4) {\n            _this.setState({\n              creditCardType: 'visa',\n              creditCardFormat: 'visa-or-mastercard'\n            });\n          } else if (cardNum.charAt(0) == 5) {\n            _this.setState({\n              creditCardType: 'mastercard',\n              creditCardFormat: 'visa-or-mastercard'\n            });\n          } else if (cardNum.charAt(0) == 6) {\n            _this.setState({\n              creditCardType: 'discover',\n              creditCardFormat: 'visa-or-mastercard'\n            });\n          } else if (cardNum.charAt(0) == 3 && cardNum.charAt(1) == 4 || cardNum.charAt(1) == 7) {\n            _this.setState({\n              creditCardType: 'amex',\n              creditCardFormat: 'amex'\n            });\n          } else if (cardNum.charAt(0) == 3 && cardNum.charAt(1) == 0 || cardNum.charAt(1) == 6 || cardNum.charAt(1) == 8) {\n            _this.setState({\n              creditCardType: 'diners-club',\n              creditCardFormat: 'diners'\n            });\n          } else if (cardNum.charAt(0) == 3 && cardNum.charAt(1) == 5) {\n            _this.setState({\n              creditCardType: 'jcb',\n              creditCardFormat: 'visa-or-mastercard'\n            });\n          } else {\n            _this.setState({\n              creditCardType: '',\n              creditCardFormat: 'visa-or-mastercard'\n            });\n          }\n        } else {}\n      } else {\n        console.log('Credit card null');\n      }\n    };\n\n    _this.cardExpirationDate = function _callee(mmyy) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.setState({\n                exp: mmyy,\n                expMonth: Number(mmyy.split('/')[0]),\n                expYear: Number(mmyy.split('/')[1])\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setCardParams = function _callee2() {\n      var params, token;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = {\n                number: _this.state.creditCardNum,\n                expMonth: _this.state.expMonth,\n                expYear: _this.state.expYear,\n                cvc: _this.state.CCV,\n                name: _this.state.name,\n                currency: 'usd'\n              };\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(stripe.createTokenWithCard(params));\n\n            case 3:\n              token = _context2.sent;\n\n              _this.setState({\n                StripecardId: token.card.cardId,\n                StripecardTok: token.tokenId\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.addSource = function _callee3() {\n      var settings, fetchResponse, data;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              settings = {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  FBID: firebase.auth().currentUser.uid,\n                  stripeID: _this.props.UserStore.stripeID,\n                  cardSource: _this.state.StripecardTok\n                })\n              };\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://us-central1-riive-parking.cloudfunctions.net/addSource', settings));\n\n            case 4:\n              fetchResponse = _context3.sent;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data);\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              alert(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.submitPayment = function _callee4() {\n      var db, ref;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db = firebase.firestore();\n\n              if (!_this._isMounted) {\n                _context4.next = 17;\n                break;\n              }\n\n              _context4.prev = 2;\n              _context4.prev = 3;\n\n              _this.verifyInput();\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(_this.setCardParams());\n\n            case 7:\n              _context4.next = 11;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](3);\n\n            case 11:\n              if (_this.state.allValid) {\n                ref = db.collection(\"users\").doc();\n\n                if (_this.state.creditCardType !== \"\") {\n                  db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n                    payments: firebase.firestore.FieldValue.arrayUnion({\n                      PaymentID: ref.id,\n                      StripeID: _this.state.StripecardId,\n                      Type: \"Card\",\n                      CardType: _this.state.creditCardType,\n                      Name: _this.state.name,\n                      Month: _this.state.expMonth,\n                      Year: _this.state.expYear,\n                      Number: _this.state.creditCardNum.slice(-4),\n                      CCV: _this.state.CCV\n                    })\n                  });\n                } else {\n                  db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n                    payments: firebase.firestore.FieldValue.arrayUnion({\n                      PaymentID: ref.id,\n                      StripeID: _this.state.StripecardId,\n                      Type: \"Card\",\n                      CardType: \"Credit\",\n                      Name: _this.state.name,\n                      Month: _this.state.expMonth,\n                      Year: _this.state.expYear,\n                      Number: _this.state.creditCardNum.slice(-4),\n                      CCV: _this.state.CCV\n                    })\n                  });\n                }\n\n                if (_this.state.creditCardType !== \"\") {\n                  _this.props.UserStore.payments.push({\n                    PaymentID: ref.id,\n                    StripeID: _this.state.StripecardId,\n                    Type: \"Card\",\n                    CardType: _this.state.creditCardType,\n                    Name: _this.state.name,\n                    Month: _this.state.expMonth,\n                    Year: _this.state.expYear,\n                    Number: _this.state.creditCardNum.slice(-4),\n                    CCV: _this.state.CCV\n                  });\n                } else {\n                  _this.props.UserStore.payments.push({\n                    PaymentID: ref.id,\n                    StripeID: _this.state.StripecardId,\n                    Type: \"Card\",\n                    CardType: \"Credit\",\n                    Name: _this.state.name,\n                    Month: _this.state.expMonth,\n                    Year: _this.state.expYear,\n                    Number: _this.state.creditCardNum.slice(-4),\n                    CCV: _this.state.CCV\n                  });\n                }\n\n                _this.addSource();\n\n                _this.props.navigation.navigate(\"Profile\");\n              } else {\n                _this.setState({\n                  creditCardNumError: 'Credit card type is not supported'\n                });\n              }\n\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t1 = _context4[\"catch\"](2);\n\n              _this.setState({\n                creditCardNumError: _context4.t1\n              });\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[2, 14], [3, 9]], Promise);\n    };\n\n    _this.verifyInput = function () {\n      var nameValid = regexFullname.test(_this.state.name);\n      var ccLength = -1;\n      var CCVLength = -1;\n      var expLength = 5;\n\n      if (_this.state.creditCardFormat == 'visa-or-mastercard') {\n        ccLength = 19;\n        CCVLength = 3;\n      } else if (_this.state.creditCardFormat == 'amex') {\n        ccLength = 17;\n        CCVLength = 4;\n      } else if (_this.state.creditCardFormat == 'diners') {\n        ccLength = 16;\n        CCVLength = 3;\n      } else {\n        ccLength = 19;\n        CCVLength = 3;\n      }\n\n      if (_this.state.creditCardNum && _this.state.CCV) {\n        if (_this.state.creditCardNum.length == ccLength && _this.state.CCV.length == CCVLength && _this.state.exp.length == expLength && _this.state.expYear > lastTwoYear && _this.state.expMonth < 13 && nameValid) {\n          _this.setState({\n            creditCardNumError: \"\",\n            expError: \"\",\n            CCVError: \"\",\n            nameError: \"\"\n          });\n\n          _this.state.allValid = true;\n        } else if (_this.state.creditCardNum.length == ccLength && _this.state.CCV.length == CCVLength && _this.state.exp.length == expLength && _this.state.expYear == lastTwoYear && _this.state.expMonth >= month && nameValid) {\n          _this.setState({\n            creditCardNumError: \"\",\n            expError: \"\",\n            CCVError: \"\",\n            nameError: \"\"\n          });\n\n          _this.state.allValid = true;\n        } else {\n          _this.state.allValid = false;\n\n          if (_this.state.creditCardNum.length !== ccLength) {\n            _this.setState({\n              creditCardNumError: \"Number too short\"\n            });\n          } else {\n            _this.setState({\n              creditCardNumError: \"\"\n            });\n          }\n\n          if (_this.state.CCV.length !== CCVLength) {\n            _this.setState({\n              CCVError: \"CCV too short\"\n            });\n          } else {\n            _this.setState({\n              CCVError: \"\"\n            });\n          }\n\n          if (_this.state.exp.length !== expLength || _this.state.expMonth >= 13 || _this.state.expYear <= lastTwoYear || _this.state.expMonth < month) {\n            if (_this.state.exp.length !== expLength) {\n              _this.setState({\n                expError: \"MM/YY\"\n              });\n            } else if (_this.state.expMonth >= 13) {\n              _this.setState({\n                expError: \"Choose a month 1-12\"\n              });\n            } else if (_this.state.expYear <= lastTwoYear && _this.state.expMonth < month || _this.state.expYear < lastTwoYear) {\n              _this.setState({\n                expError: \"Date in past\"\n              });\n            } else {\n              _this.setState({\n                expError: \"\"\n              });\n            }\n          } else {\n            _this.setState({\n              expError: \"\"\n            });\n          }\n\n          if (!nameValid) {\n            _this.setState({\n              nameError: \"First and last name required\"\n            });\n          } else {\n            _this.setState({\n              nameError: \"\"\n            });\n          }\n        }\n      } else {\n        if (_this.state.creditCardNum == null) {\n          _this.setState({\n            creditCardNumError: 'Credit card required'\n          });\n        } else {\n          _this.setState({\n            creditCardNumError: ''\n          });\n        }\n\n        if (_this.state.CCV == null) {\n          _this.setState({\n            CCVError: \"CCV required\"\n          });\n        } else {\n          _this.setState({\n            CCVError: \"\"\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      creditCardNum: null,\n      creditCardType: '',\n      creditCardFormat: 'visa-or-mastercard',\n      name: _this.props.UserStore.fullname,\n      CCV: null,\n      type: \"\",\n      exp: \"\",\n      expMonth: \"\",\n      expYear: \"\",\n      StripecardId: null,\n      StripecardTok: null,\n      CCVError: \"\",\n      creditCardNumError: \"\",\n      nameError: \"\",\n      expError: \"\",\n      allValid: false\n    };\n    return _this;\n  }\n\n  _createClass(addPayment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this._isMounted = true;\n              this._navListener = this.props.navigation.addListener('didFocus', function () {\n                StatusBar.setBarStyle('dark-content', true);\n                Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\n              });\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n\n      this._navListener.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          flex: 0,\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 7\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [Colors.apollo500, Colors.apollo700],\n        style: styles.creditCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        iconName: this.state.creditCardType !== '' ? 'cc-' + this.state.creditCardType : 'credit-card',\n        iconLib: \"FontAwesome\",\n        iconColor: Colors.mist300,\n        iconSize: 28,\n        style: {\n          marginLeft: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, this.state.creditCardNum ? this.state.creditCardNum : 'XXXX XXXX XXXX XXXX'), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 10,\n          marginBottom: 20,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      }, this.state.CCV ? this.state.CCV : 'CCV'), React.createElement(Text, {\n        style: {\n          color: Colors.mist300,\n          fontSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }\n      }, \"GOOD \", \"\\n\", \" THRU \", \"\\n\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.creditCardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, this.state.name == \"\" ? 'Firstname Lastname' : this.state.name), React.createElement(Text, {\n        style: styles.creditCardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }\n      }, this.state.exp == \"\" ? \"MM/YY\" : this.state.exp)))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          marginRight: 16,\n          flex: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }\n      }, React.createElement(Input, {\n        placeholder: \"XXXXXXXXXXXXXXXX\",\n        mask: \"credit-card\",\n        ccType: this.state.creditCardFormat,\n        label: \"Credit Card Number\",\n        name: \"CCNum\",\n        onChangeText: function onChangeText(cc) {\n          _this2.setState({\n            creditCardNum: cc\n          });\n\n          _this2.getCardType(cc);\n        },\n        value: this.state.creditCardNum,\n        error: this.state.creditCardNumError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }\n      }, React.createElement(Input, {\n        placeholder: \"MM/YY\",\n        mask: \"mm/yy\",\n        label: \"Expiration\",\n        name: \"expiration\",\n        onChangeText: function onChangeText(i) {\n          return _this2.cardExpirationDate(i);\n        },\n        value: this.state.exp,\n        keyboardType: \"numeric\",\n        error: this.state.expError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }\n      }))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          marginRight: 16,\n          flex: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 12\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Your name...\",\n        label: \"Name\",\n        name: \"name\",\n        onChangeText: function onChangeText(n) {\n          return _this2.setState({\n            name: n\n          });\n        },\n        value: this.state.name,\n        maxLength: 40,\n        error: this.state.nameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 12\n        }\n      }, React.createElement(Input, {\n        placeholder: this.state.creditCardType == 'amex' ? '0000' : '000',\n        label: \"CCV\",\n        name: \"ccv\",\n        onChangeText: function onChangeText(ccv) {\n          return _this2.setState({\n            CCV: ccv\n          });\n        },\n        value: this.state.CCV,\n        maxLength: this.state.creditCardType == 'amex' ? 4 : 3,\n        keyboardType: \"numeric\",\n        error: this.state.CCVError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.submitPayment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }\n      }, \"Test\")));\n    }\n  }]);\n\n  return addPayment;\n}(Component), _class2.navigationOptions = {\n  title: \"Add A Card\",\n  headerTitleStyle: {\n    fontWeight: \"300\",\n    fontSize: 18\n  }\n}, _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  creditCard: {\n    width: \"100%\",\n    height: 200,\n    marginBottom: 20,\n    borderRadius: 10,\n    padding: 15,\n    justifyContent: \"space-between\"\n  },\n  creditCardText: {\n    color: Colors.mist300,\n    fontSize: 16,\n    alignSelf: \"flex-end\"\n  }\n});\nexport default addPayment;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/AddPayment.js"],"names":["React","Component","Text","Input","Icon","Button","Colors","LinearGradient","firebase","firebaseConfig","inject","observer","requireNativeViewManager","stripe","setOptions","publishableKey","regexFullname","d","Date","year","getFullYear","toString","lastTwoYearString","slice","lastTwoYear","Number","month","getMonth","addPayment","props","_isMounted","getCardType","cardNum","length","charAt","setState","creditCardType","creditCardFormat","console","log","cardExpirationDate","mmyy","exp","expMonth","split","expYear","setCardParams","params","number","state","creditCardNum","cvc","CCV","name","currency","createTokenWithCard","token","StripecardId","card","cardId","StripecardTok","tokenId","addSource","settings","method","headers","Accept","body","JSON","stringify","FBID","auth","currentUser","uid","stripeID","UserStore","cardSource","fetch","fetchResponse","json","data","alert","submitPayment","db","firestore","verifyInput","allValid","ref","collection","doc","userID","update","payments","FieldValue","arrayUnion","PaymentID","id","StripeID","Type","CardType","Name","Month","Year","push","navigation","navigate","creditCardNumError","nameValid","test","ccLength","CCVLength","expLength","expError","CCVError","nameError","fullname","type","_navListener","addListener","StatusBar","setBarStyle","Platform","OS","setBackgroundColor","remove","flex","backgroundColor","styles","container","apollo500","apollo700","creditCard","mist300","marginLeft","justifyContent","color","fontSize","flexDirection","marginBottom","creditCardText","marginRight","cc","i","n","ccv","navigationOptions","title","headerTitleStyle","fontWeight","StyleSheet","create","padding","alignContent","alignItems","width","height","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, ScrollView, StatusBar, Platform, StyleSheet, SafeAreaView } from 'react-native';\r\nimport Text from '../components/Txt'\r\nimport Input from '../components/Input'\r\nimport Icon from '../components/Icon'\r\nimport Button from '../components/Button'\r\nimport Colors from '../constants/Colors'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\n\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from '../firebaseConfig'\r\n\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport { requireNativeViewManager } from '@unimodules/core';\r\n\r\n// Stripe Payments\r\nimport stripe from 'tipsi-stripe'\r\nstripe.setOptions({\r\n  publishableKey: 'pk_test_lojsrOCvzrsIiGQFXSUquLHX00pzpkST7r',\r\n  // merchantId: 'MERCHANT_ID', // Optional\r\n  // androidPayMode: 'test', // Android only\r\n})\r\n\r\n\r\n\r\nconst regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/i;\r\nvar d = new Date();\r\nconst year = d.getFullYear().toString();\r\nconst lastTwoYearString = year.slice(-2);\r\nconst lastTwoYear = Number(lastTwoYearString);\r\nconst month = d.getMonth() + 1;\r\n\r\n\r\n\r\n\r\n@inject(\"UserStore\", \"ComponentStore\")\r\n@observer\r\nclass addPayment extends Component {\r\n  _isMounted = false;\r\n\r\n  static navigationOptions = {\r\n    title: \"Add A Card\",\r\n    headerTitleStyle:{\r\n        fontWeight: \"300\",\r\n        fontSize: 18,\r\n    }\r\n\r\n};\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            creditCardNum: null,\r\n            creditCardType: '',\r\n            creditCardFormat: 'visa-or-mastercard',\r\n            name: this.props.UserStore.fullname,\r\n            CCV: null,\r\n            type: \"\",\r\n            exp: \"\",\r\n            expMonth: \"\",\r\n            expYear: \"\",\r\n            StripecardId: null,\r\n            StripecardTok: null,\r\n            CCVError: \"\",\r\n            creditCardNumError: \"\",\r\n            nameError: \"\",\r\n            expError: \"\",\r\n            allValid: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n      // Set Status Bar page info here!\r\n      this._isMounted = true;\r\n     this._navListener = this.props.navigation.addListener('didFocus', () => {\r\n         StatusBar.setBarStyle('dark-content', true);\r\n         Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\r\n       });\r\n    }\r\n\r\n   \r\n\r\n\r\n       \r\n   \r\n\r\n     componentWillUnmount() {\r\n      this._isMounted = false;\r\n          // Unmount status bar info\r\n         this._navListener.remove();\r\n       }\r\n\r\ngetCardType = (cardNum) => {\r\n  if(cardNum !== null){\r\n    if(cardNum.length >= 2){\r\n        if(cardNum.charAt(0) == 4){\r\n            // console.log('visa  -  length: 16')\r\n            this.setState({creditCardType: 'visa', creditCardFormat:'visa-or-mastercard'})\r\n        }else if(cardNum.charAt(0) == 5){\r\n            // console.log('mastercard  -  length: 16')\r\n            this.setState({creditCardType: 'mastercard', creditCardFormat:'visa-or-mastercard'})\r\n        }else if(cardNum.charAt(0) == 6){\r\n          // console.log('discover  -  length: 16')\r\n          this.setState({creditCardType: 'discover', creditCardFormat:'visa-or-mastercard'})\r\n        }else if(cardNum.charAt(0) == 3 && cardNum.charAt(1) == 4 || cardNum.charAt(1) == 7){\r\n            // console.log('amex  -  length: 15')\r\n            this.setState({creditCardType: 'amex', creditCardFormat:'amex'})\r\n        }else if(cardNum.charAt(0) == 3 && cardNum.charAt(1) == 0 || cardNum.charAt(1) == 6 || cardNum.charAt(1) == 8){\r\n            // console.log('diners international  -  length: 14')\r\n            this.setState({creditCardType: 'diners-club', creditCardFormat:'diners'})\r\n        }else if(cardNum.charAt(0) == 3 && cardNum.charAt(1) == 5 ){\r\n          // console.log('jcb  -  length: 16')\r\n          this.setState({creditCardType: 'jcb', creditCardFormat:'visa-or-mastercard'})\r\n        }else{\r\n            // console.log('card not supported by Riive yet.')\r\n            this.setState({creditCardType: '', creditCardFormat: 'visa-or-mastercard'})\r\n        }\r\n    }else{}\r\n  }else{\r\n    console.log('Credit card null')\r\n  }\r\n\r\n\r\n}\r\n\r\ncardExpirationDate = async(mmyy) => {\r\n  await this.setState({\r\n    exp: mmyy,\r\n    expMonth: Number(mmyy.split('/')[0]),\r\n    expYear: Number(mmyy.split('/')[1]),\r\n  })\r\n\r\n  // console.log(this.state.expMonth + 1)\r\n}\r\n\r\nsetCardParams = async() => {\r\n  const params = {\r\n    // mandatory\r\n    number: this.state.creditCardNum,\r\n    expMonth: this.state.expMonth,\r\n    expYear: this.state.expYear,\r\n    cvc: this.state.CCV,\r\n    // optional\r\n    name: this.state.name,\r\n    currency: 'usd',\r\n    // addressLine1: '123 Test Street',\r\n    // addressLine2: 'Apt. 5',\r\n    // addressCity: 'Test City',\r\n    // addressState: 'Test State',\r\n    // addressCountry: 'Test Country',\r\n    // addressZip: '55555',\r\n  }\r\n \r\n  \r\n  var token = await stripe.createTokenWithCard(params)\r\n  this.setState({StripecardId: token.card.cardId, StripecardTok: token.tokenId})\r\n\r\n  \r\n  \r\n}\r\n\r\n\r\naddSource = async () => {\r\n\r\n  const settings = {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      FBID: firebase.auth().currentUser.uid,\r\n      stripeID: this.props.UserStore.stripeID,\r\n      cardSource: this.state.StripecardTok,\r\n    })\r\n  }\r\n  try{\r\n    \r\n    const fetchResponse = await fetch('https://us-central1-riive-parking.cloudfunctions.net/addSource', settings)\r\n    const data = await fetchResponse.json();\r\n    return data;\r\n  }catch(e){\r\n    alert(e);\r\n  }    \r\n}\r\n\r\n\r\n\r\n\r\nsubmitPayment = async() => {\r\n  const db = firebase.firestore();\r\n\r\n  if(this._isMounted){\r\n    \r\n\r\n  try{\r\n    \r\n    try{\r\n      this.verifyInput();\r\n      await this.setCardParams();\r\n    }catch(e){\r\n      \r\n    }\r\n    \r\n    \r\n    if(this.state.allValid){\r\n      const ref = db.collection(\"users\").doc(); // creates unique ID\r\n\r\n        // add card to database\r\n      if(this.state.creditCardType !== \"\"){\r\n        db.collection(\"users\").doc(this.props.UserStore.userID).update({\r\n            payments: firebase.firestore.FieldValue.arrayUnion({\r\n                PaymentID: ref.id,\r\n                StripeID: this.state.StripecardId,\r\n                Type: \"Card\",\r\n                CardType: this.state.creditCardType,\r\n                Name: this.state.name,\r\n                Month: this.state.expMonth,\r\n                Year: this.state.expYear,\r\n                Number: this.state.creditCardNum.slice(-4),\r\n                CCV: this.state.CCV,\r\n            })\r\n         })\r\n        }else{\r\n          db.collection(\"users\").doc(this.props.UserStore.userID).update({\r\n            payments: firebase.firestore.FieldValue.arrayUnion({\r\n                PaymentID: ref.id,\r\n                StripeID: this.state.StripecardId,\r\n                Type: \"Card\",\r\n                CardType: \"Credit\",\r\n                Name: this.state.name,\r\n                Month: this.state.expMonth,\r\n                Year: this.state.expYear,\r\n                Number: this.state.creditCardNum.slice(-4),\r\n                CCV: this.state.CCV,\r\n            })\r\n         })\r\n        }\r\n         // add card to mobx UserStore\r\n         if(this.state.creditCardType !== \"\"){\r\n         this.props.UserStore.payments.push({\r\n            PaymentID: ref.id,\r\n            StripeID: this.state.StripecardId,\r\n            Type: \"Card\",\r\n            CardType: this.state.creditCardType,\r\n            Name: this.state.name,\r\n            Month: this.state.expMonth,\r\n            Year: this.state.expYear,\r\n            Number: this.state.creditCardNum.slice(-4),\r\n            CCV: this.state.CCV,\r\n         })\r\n        }else{\r\n          this.props.UserStore.payments.push({\r\n            PaymentID: ref.id,\r\n            StripeID: this.state.StripecardId,\r\n            Type: \"Card\",\r\n            CardType: \"Credit\",\r\n            Name: this.state.name,\r\n            Month: this.state.expMonth,\r\n            Year: this.state.expYear,\r\n            Number: this.state.creditCardNum.slice(-4),\r\n            CCV: this.state.CCV,\r\n         })\r\n        }\r\n        this.addSource();\r\n\r\n        \r\n      \r\n         // navigate back to profile\r\n         this.props.navigation.navigate(\"Profile\")\r\n    \r\n      }else{\r\n        this.setState({creditCardNumError: 'Credit card type is not supported'})\r\n      }\r\n\r\n      \r\n\r\n\r\n  }catch(e){\r\n    this.setState({creditCardNumError: e})\r\n  }  \r\n  \r\n  \r\n}\r\n}\r\n\r\n\r\n\r\nverifyInput = () => {\r\n  //set a variable to check if name is valid (returns true or false...)\r\n  var nameValid = regexFullname.test(this.state.name)\r\n\r\n  // itialize length values for card type\r\n  var ccLength = -1;\r\n  var CCVLength = -1;\r\n  var expLength = 5;\r\n\r\n  // Set variable values for length requirements for credit card.\r\n  if(this.state.creditCardFormat == 'visa-or-mastercard'){\r\n    ccLength = 19;\r\n    CCVLength = 3;\r\n  }else if(this.state.creditCardFormat == 'amex'){\r\n    ccLength = 17;\r\n    CCVLength = 4;\r\n  }else if(this.state.creditCardFormat == 'diners'){\r\n    ccLength = 16;\r\n    CCVLength = 3;\r\n  }else{\r\n    ccLength = 19;\r\n    CCVLength = 3;\r\n  }\r\n\r\n  // credit card number and ccv are entered...\r\n  if(this.state.creditCardNum && this.state.CCV){\r\n     \r\n    //Checking if everything is valid for a year that is not the current year\r\n    if(this.state.creditCardNum.length == ccLength\r\n      && this.state.CCV.length == CCVLength\r\n      && this.state.exp.length == expLength\r\n      && this.state.expYear > lastTwoYear\r\n      && this.state.expMonth < 13 \r\n      && nameValid){\r\n      this.setState({\r\n        creditCardNumError: \"\",\r\n        expError: \"\",\r\n        CCVError: \"\",\r\n        nameError: \"\",\r\n      })\r\n      this.state.allValid = true;\r\n      // alert(\"Success future year!!!\")\r\n      \r\n\r\n      // Checking if valid for a year that is the current year\r\n    }else if(this.state.creditCardNum.length == ccLength\r\n      && this.state.CCV.length == CCVLength\r\n      && this.state.exp.length == expLength \r\n      && this.state.expYear == lastTwoYear\r\n      && this.state.expMonth >= month \r\n      && nameValid){\r\n        this.setState({\r\n          creditCardNumError: \"\",\r\n          expError: \"\",\r\n          CCVError: \"\",\r\n          nameError: \"\",\r\n        })\r\n        this.state.allValid = true;\r\n        // alert(\"Success current year!!!\")\r\n        \r\n\r\n    // Begin error checking....\r\n    }else{\r\n      this.state.allValid = false;\r\n\r\n      // Credit card value check\r\n      if(this.state.creditCardNum.length !== ccLength ){\r\n        // console.log('credit card number fail...')\r\n        this.setState({creditCardNumError: \"Number too short\"})\r\n      }else{this.setState({creditCardNumError: \"\"})}\r\n\r\n      // CCV value check\r\n      if(this.state.CCV.length !== CCVLength){\r\n        // console.log('CCV fail...')\r\n        this.setState({CCVError: \"CCV too short\"})\r\n      }else{this.setState({CCVError: \"\"})}\r\n\r\n      // expiration date value check\r\n      if(this.state.exp.length !== expLength || this.state.expMonth >= 13 || this.state.expYear <= lastTwoYear || this.state.expMonth < month){\r\n        if(this.state.exp.length !== expLength){this.setState({expError: \"MM/YY\"})}\r\n        else if(this.state.expMonth >= 13){this.setState({expError: \"Choose a month 1-12\"})}\r\n        else if(this.state.expYear <= lastTwoYear && this.state.expMonth < month || this.state.expYear < lastTwoYear){this.setState({expError: \"Date in past\"})}\r\n        else{this.setState({expError: \"\"})}\r\n      }else{this.setState({expError: \"\"})}\r\n\r\n      // Name value check\r\n      if (!nameValid){\r\n        // console.log(\"provide the full name on your credit card\")\r\n        this.setState({nameError: \"First and last name required\"})\r\n      }else{this.setState({nameError: \"\"})}\r\n    }\r\n\r\n  }else{\r\n    if(this.state.creditCardNum == null){\r\n      this.setState({creditCardNumError: 'Credit card required'})\r\n    }else{this.setState({creditCardNumError: ''})}\r\n    \r\n    if(this.state.CCV == null){\r\n      this.setState({CCVError: \"CCV required\"})\r\n    }else{this.setState({CCVError:\"\"})}\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <ScrollView>\r\n      <SafeAreaView style={{flex: 0, backgroundColor: \"white\", }} />\r\n      <View style={styles.container}>\r\n        <LinearGradient colors={[Colors.apollo500, Colors.apollo700]} style={styles.creditCard}>\r\n            <Icon \r\n              iconName={this.state.creditCardType !== '' ? 'cc-' + this.state.creditCardType : 'credit-card'}\r\n              iconLib=\"FontAwesome\"\r\n              iconColor={Colors.mist300}\r\n              iconSize={28}\r\n              style={{ marginLeft: \"auto\"}}\r\n            />\r\n            <View style={{justifyContent: 'flex-end'}}>\r\n            <Text style={{color: Colors.mist300, fontSize: 18}}>{this.state.creditCardNum ? this.state.creditCardNum : 'XXXX XXXX XXXX XXXX'}</Text>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n              <Text style={{color: Colors.mist300, fontSize: 10, marginBottom: 20, marginLeft: 5}}>{this.state.CCV ? this.state.CCV : 'CCV'}</Text>\r\n              <Text style={{color: Colors.mist300, fontSize: 10}}>GOOD {\"\\n\"} THRU {\"\\n\"}</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n              <Text style={styles.creditCardText}>{this.state.name == \"\" ? 'Firstname Lastname' : this.state.name}</Text>               \r\n              <Text style={styles.creditCardText}>{this.state.exp == \"\" ? \"MM/YY\" : this.state.exp}</Text>\r\n            </View>\r\n            </View>\r\n        </LinearGradient>\r\n        <View style={{flexDirection: 'row'}}>\r\n          <View style={{marginRight: 16, flex: 5}}>\r\n            <Input \r\n              placeholder='XXXXXXXXXXXXXXXX'\r\n              mask='credit-card'\r\n              ccType = {this.state.creditCardFormat}\r\n              label=\"Credit Card Number\"\r\n              name=\"CCNum\"\r\n              onChangeText = {cc => {this.setState({creditCardNum: cc}); this.getCardType(cc)}}\r\n              value={this.state.creditCardNum}\r\n              error={this.state.creditCardNumError}\r\n            />\r\n          </View>\r\n          <View style={{flex: 2}}>\r\n                <Input \r\n                    placeholder='MM/YY'\r\n                    mask='mm/yy'\r\n                    label=\"Expiration\"\r\n                    name=\"expiration\"\r\n                    onChangeText = {i => this.cardExpirationDate(i)}\r\n                    value={this.state.exp}\r\n                    keyboardType='numeric' \r\n                    error={this.state.expError}\r\n                  />\r\n            </View>\r\n          \r\n         </View>\r\n          <View style={{flexDirection: 'row'}}>\r\n            \r\n           <View style={{marginRight: 16, flex: 3}}>\r\n            <Input \r\n              placeholder=\"Your name...\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              onChangeText={(n) => this.setState({name: n})}\r\n              value={this.state.name}\r\n              maxLength={40}\r\n              error={this.state.nameError}\r\n            />\r\n           </View> \r\n           <View  style={{flex: 1}}>\r\n            <Input \r\n              placeholder={this.state.creditCardType == 'amex' ? '0000' : '000'}\r\n              label=\"CCV\"\r\n              name=\"ccv\"\r\n              onChangeText={(ccv) => this.setState({CCV: ccv})}\r\n              value={this.state.CCV}\r\n              maxLength={this.state.creditCardType == 'amex' ? 4 : 3}\r\n              keyboardType='numeric' \r\n              error={this.state.CCVError}\r\n              />\r\n          </View>  \r\n          </View>\r\n        <Button onPress={() => this.submitPayment()}>Test</Button>\r\n      </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    alignItems: 'center'\r\n\r\n  },\r\n  creditCard: {\r\n    width: \"100%\",\r\n    height: 200,\r\n    marginBottom: 20,\r\n    // backgroundColor: Colors.apollo500,\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  creditCardText: {\r\n    color: Colors.mist300,\r\n    fontSize: 16,\r\n    alignSelf: \"flex-end\"\r\n  }\r\n})\r\n\r\nexport default addPayment"]},"metadata":{},"sourceType":"module"}