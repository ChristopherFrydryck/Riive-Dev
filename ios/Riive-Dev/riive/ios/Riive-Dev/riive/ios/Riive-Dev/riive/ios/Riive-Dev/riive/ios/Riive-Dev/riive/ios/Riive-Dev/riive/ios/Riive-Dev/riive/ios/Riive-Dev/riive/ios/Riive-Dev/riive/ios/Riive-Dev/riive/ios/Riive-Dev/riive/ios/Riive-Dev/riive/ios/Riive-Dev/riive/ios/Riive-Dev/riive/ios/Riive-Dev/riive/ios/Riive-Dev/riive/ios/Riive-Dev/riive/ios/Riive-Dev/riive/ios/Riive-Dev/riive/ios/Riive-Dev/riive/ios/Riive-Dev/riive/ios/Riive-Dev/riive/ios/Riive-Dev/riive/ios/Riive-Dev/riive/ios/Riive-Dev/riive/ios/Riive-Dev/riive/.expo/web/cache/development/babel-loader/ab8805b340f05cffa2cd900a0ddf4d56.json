{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/Button.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"./Txt\";\nimport Icon from \"./Icon\";\n\nvar button = function button(_ref) {\n  var onPress = _ref.onPress,\n      iconLib = _ref.iconLib,\n      iconStyle = _ref.iconStyle,\n      iconName = _ref.iconName,\n      iconColor = _ref.iconColor,\n      iconSize = _ref.iconSize,\n      type = _ref.type,\n      props = _objectWithoutProperties(_ref, [\"onPress\", \"iconLib\", \"iconStyle\", \"iconName\", \"iconColor\", \"iconSize\", \"type\"]);\n\n  var style = [styles.button, props.style || {}];\n\n  var allProps = _extends({}, props, {\n    style: style\n  });\n\n  var textStyle = [styles.text, props.textStyle || {}];\n\n  var textProps = _extends({}, props, {\n    style: textStyle\n  });\n\n  return React.createElement(TouchableOpacity, _extends({}, allProps, {\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), React.createElement(Icon, {\n    iconLib: iconLib,\n    iconName: iconName,\n    iconColor: iconColor,\n    iconSize: iconSize,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, _extends({}, textProps, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), props.children));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    marginTop: 10,\n    padding: 12,\n    width: '100%',\n    borderRadius: 4,\n    alignItems: 'center',\n    alignContent: \"center\",\n    justifyContent: 'center',\n    flexDirection: \"row\"\n  },\n  text: {\n    fontSize: 18\n  }\n});\nexport default button;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/Button.js"],"names":["React","Text","Icon","button","onPress","iconLib","iconStyle","iconName","iconColor","iconSize","type","props","style","styles","allProps","textStyle","text","textProps","children","StyleSheet","create","marginTop","padding","width","borderRadius","alignItems","alignContent","justifyContent","flexDirection","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,IAAP;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkF;AAAA,MAAhFC,OAAgF,QAAhFA,OAAgF;AAAA,MAAvEC,OAAuE,QAAvEA,OAAuE;AAAA,MAA9DC,SAA8D,QAA9DA,SAA8D;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAXC,KAAW;;AAE7F,MAAMC,KAAK,GAAG,CAACC,MAAM,CAACV,MAAR,EAAiBQ,KAAK,CAACC,KAAN,IAAe,EAAhC,CAAd;;AACF,MAAME,QAAQ,GAAG,SAAc,EAAd,EAAkBH,KAAlB,EAAwB;AAACC,IAAAA,KAAK,EAACA;AAAP,GAAxB,CAAjB;;AACA,MAAMG,SAAS,GAAG,CAACF,MAAM,CAACG,IAAR,EAAcL,KAAK,CAACI,SAAN,IAAmB,EAAjC,CAAlB;;AACA,MAAME,SAAS,GAAG,SAAc,EAAd,EAAkBN,KAAlB,EAAwB;AAACC,IAAAA,KAAK,EAACG;AAAP,GAAxB,CAAlB;;AAKU,SACI,oBAAC,gBAAD,eAAsBD,QAAtB;AAAgC,IAAA,OAAO,EAAEV,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAC,IAAD;AACI,IAAA,OAAO,EAAEC,OADb;AAEI,IAAA,QAAQ,EAAEE,QAFd;AAGI,IAAA,SAAS,EAAEC,SAHf;AAII,IAAA,QAAQ,EAAEC,QAJd;AAKI,IAAA,KAAK,EAAEH,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,IAAD,eAAUW,SAAV;AAAqB,IAAA,IAAI,EAAEP,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkCC,KAAK,CAACO,QAAxC,CATJ,CADJ;AAaH,CAvBT;;AA4BA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAmB;AAC9BjB,EAAAA,MAAM,EAAE;AACJkB,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJC,IAAAA,YAAY,EAAE,QANV;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,aAAa,EAAE;AARX,GADsB;AAW9BZ,EAAAA,IAAI,EAAE;AAEFa,IAAAA,QAAQ,EAAE;AAFR;AAXwB,CAAnB,CAAf;AAiBA,eAAe1B,MAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\nimport Text from './Txt'\r\nimport Icon from './Icon'\r\n\r\n\r\nconst button = ({onPress, iconLib, iconStyle, iconName, iconColor, iconSize, type, ...props}) => {\r\n// ({ onPress, children}) => {\r\n    const style = [styles.button,  props.style || {}]\r\n  const allProps = Object.assign({}, props,{style:style})  \r\n  const textStyle = [styles.text, props.textStyle || {}]\r\n  const textProps = Object.assign({}, props,{style:textStyle})\r\n\r\n\r\n\r\n        \r\n            return(\r\n                <TouchableOpacity {...allProps} onPress={onPress}>\r\n                    <Icon \r\n                        iconLib={iconLib}\r\n                        iconName={iconName}\r\n                        iconColor={iconColor}\r\n                        iconSize={iconSize}\r\n                        style={iconStyle}\r\n                            \r\n                            />\r\n                    <Text {...textProps} type={type}>{props.children}</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        }\r\n        \r\n\r\n\r\n\r\nconst styles = StyleSheet.create ({\r\n    button: {\r\n        marginTop: 10,\r\n        padding: 12,\r\n        width: '100%',\r\n        borderRadius: 4,\r\n        alignItems: 'center',\r\n        alignContent: \"center\",\r\n        justifyContent: 'center',\r\n        flexDirection: \"row\"\r\n    },\r\n    text: {\r\n        \r\n        fontSize: 18\r\n    }\r\n})\r\n\r\nexport default button"]},"metadata":{},"sourceType":"module"}