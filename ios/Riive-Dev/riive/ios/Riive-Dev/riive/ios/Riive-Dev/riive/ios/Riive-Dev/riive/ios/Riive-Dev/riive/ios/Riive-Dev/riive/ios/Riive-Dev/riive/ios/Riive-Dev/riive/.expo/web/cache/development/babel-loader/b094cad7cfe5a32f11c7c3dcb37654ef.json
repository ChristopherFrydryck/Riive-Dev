{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/ProfileScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { NavigationActions } from 'react-navigation';\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport ProfilePic from \"../components/ProfilePic\";\nimport TopBar from \"../components/TopBar\";\nimport Icon from \"../components/Icon\";\nimport Circle from \"../components/Circle\";\nimport Text from \"../components/Txt\";\nimport VehicleList from \"../components/VehicleList\";\nimport PaymentList from \"../components/PaymentList\";\nimport SpacesList from \"../components/SpacesList\";\nimport ClickableChip from \"../components/ClickableChip\";\nimport DialogInput from 'react-native-dialog-input';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { Provider, Snackbar, Menu, Divider } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { inject, observer } from 'mobx-react/native';\nimport UserStore from \"../stores/userStore\";\nimport ComponentStore from \"../stores/componentStore\";\nimport Colors from \"../constants/Colors\";\nvar regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/gi;\nvar regexPhone = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\nvar regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nvar nameValid = true;\nvar phoneValid = true;\nvar Profile = (_dec = inject(\"UserStore\", \"ComponentStore\"), _dec(_class = observer(_class = (_temp = _class2 = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.getPermissionAsync = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS === 'ios')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onShare = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                Share.share({\n                  message: 'Come join Riive with me and learn how you can lease your driveway or park smarter at www.riive.net.',\n                  url: 'https://www.riive.net',\n                  title: 'Riive | The Shareparking App'\n                }, {\n                  dialogTitle: 'Share Riive',\n                  subject: 'Join Riive with me',\n                  excludedActivityTypes: ['com.apple.UIKit.activity.SaveToCameraRoll', 'com.apple.UIKit.activity.AssignToContact']\n                });\n              } catch (e) {\n                alert(e);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.pickImage = function _callee3() {\n      var result;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [3, 3],\n                quality: 0.1\n              }));\n\n            case 2:\n              result = _context3.sent;\n\n              _this.setState({\n                imageUploading: true\n              });\n\n              if (!result.cancelled) {\n                _this.uploadImg(result.uri).then(function () {\n                  _this.setState({\n                    imageUploading: false\n                  });\n                }).catch(function () {\n                  _this.setState({\n                    imageUploading: false\n                  });\n                });\n              } else {\n                _this.setState({\n                  imageUploading: false\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImg = function _callee4(uri) {\n      var db, doc, response, blob, storageRef, profilePicRef;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db = firebase.firestore();\n              doc = db.collection('users').doc(_this.props.UserStore.userID);\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 7:\n              blob = _context4.sent;\n              storageRef = firebase.storage().ref();\n              profilePicRef = storageRef.child(\"users/\" + _this.props.UserStore.userID + '/profile-pic');\n              return _context4.abrupt(\"return\", profilePicRef.put(blob).then(function () {\n                profilePicRef.getDownloadURL().then(function (uri) {\n                  db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n                    photo: uri\n                  });\n                  _this.props.UserStore.photo = uri;\n                });\n              }));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.resetPassword = function () {\n      firebase.auth().sendPasswordResetEmail(_this.props.UserStore.email).then(function () {\n        _this.setState({\n          resetPW: true\n        });\n\n        setTimeout(function () {\n          return _this.setState({\n            resetPW: false\n          });\n        }, 3000);\n      }).catch(function (error) {\n        alert('Failed to send password reset. ' + error.message);\n      });\n    };\n\n    _this.requirePasswordAuthentication = function (pw) {\n      var db = firebase.firestore();\n      var doc = db.collection('users').doc(_this.props.UserStore.userID);\n      var user = firebase.auth().currentUser;\n\n      _this.setState({\n        passwordAlert: false\n      });\n\n      var credentials = firebase.auth.EmailAuthProvider.credential(_this.props.UserStore.email, pw);\n      user.reauthenticateWithCredential(credentials).then(function () {\n        doc.get().then(function (u) {\n          if (u.exists) {\n            db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n              email: _this.state.emailUpdate\n            }).then(function () {\n              _this.props.UserStore.email = _this.state.emailUpdate;\n              firebase.auth().currentUser.updateEmail(_this.state.emailUpdate).then(function () {\n                _this.setState({\n                  submitted: true\n                });\n\n                setTimeout(function () {\n                  return _this.setState({\n                    submitted: false\n                  });\n                }, 3000);\n              }).catch(function (error) {\n                if (error.code == 'auth/email-already-in-use') {\n                  _this.setState({\n                    emailError: \"There is already an account with this email.\",\n                    submitted: false\n                  });\n                } else if (error.code == 'auth/invalid-email') {\n                  _this.setState({\n                    emailError: \"Email is invalid. Please try again.\",\n                    submitted: false\n                  });\n                } else if (error.code == 'auth/requires-recent-login') {\n                  alert(\"Please sign out and sign in again to verify your information\");\n\n                  _this.setState({\n                    editAccountModalVisible: false,\n                    submitted: false\n                  });\n                } else {\n                  alert(error.code + \": \" + error.message + \".\");\n\n                  _this.setState({\n                    editAccountModalVisible: false,\n                    submitted: false\n                  });\n                }\n              });\n            });\n          } else {\n            alert(\"Error!\");\n          }\n        });\n      }).catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        _this.setState({\n          passwordAlert: false\n        });\n\n        if (errorCode == 'auth/wrong-password') {\n          alert(\"Password incorrect. Please try again.\");\n        } else if (errorCode == 'auth/invalid-credential') {\n          alert(\"Whoops, our authentication failed... Please try again.\");\n        } else {\n          alert(errorCode + \": \" + errorMessage + \".\");\n        }\n      });\n    };\n\n    _this.updateAccountInfo = function () {\n      var db = firebase.firestore();\n      var doc = db.collection('users').doc(_this.props.UserStore.userID);\n\n      if (_this.state.phoneUpdate !== _this.props.UserStore.phone) {\n        if (_this.state.phoneUpdate.match(regexPhone) || _this.state.phoneUpdate == \"\") {\n          _this.props.UserStore.phone = _this.state.phoneUpdate;\n          doc.update({\n            phone: _this.props.UserStore.phone\n          });\n\n          _this.setState({\n            phoneError: '',\n            submitted: true\n          });\n\n          setTimeout(function () {\n            return _this.setState({\n              submitted: false\n            });\n          }, 3000);\n        } else {\n          _this.setState({\n            phoneError: 'Please provide a proper 10 digit phone number.'\n          });\n        }\n      }\n\n      if (_this.state.fullNameUpdate != _this.props.UserStore.fullname) {\n        if (_this.state.fullNameUpdate.match(regexFullname)) {\n          _this.props.UserStore.fullname = _this.state.fullNameUpdate;\n          doc.update({\n            fullname: _this.props.UserStore.fullname,\n            firstname: _this.props.UserStore.firstname,\n            lastname: _this.props.UserStore.lastname\n          });\n\n          _this.setState({\n            fullnameError: \"\",\n            submitted: true\n          });\n\n          setTimeout(function () {\n            return _this.setState({\n              submitted: false\n            });\n          }, 3000);\n        } else {\n          _this.setState({\n            fullnameError: \"Please provide first and last name with a space.\"\n          });\n        }\n      }\n\n      if (_this.state.emailUpdate !== _this.props.UserStore.email) {\n        if (_this.state.emailUpdate.match(regexEmail)) {\n          _this.setState({\n            passwordAlert: true,\n            emailError: \"\"\n          });\n        } else {\n          _this.setState({\n            emailError: 'Email format must be name@domain.com'\n          });\n        }\n      }\n    };\n\n    _this.resendVerification = function () {\n      firebase.auth().currentUser.sendEmailVerification().then(function () {\n        setTimeout(function () {\n          return _this.setState({\n            verificationSnackbarVisible: false\n          });\n        }, 500);\n      }).catch(function (e) {\n        alert(e);\n      });\n    };\n\n    _this.signOut = function () {\n      firebase.auth().signOut().then(function () {\n        _this.props.navigation.navigate('Auth');\n\n        _this.props.UserStore.email = \"\";\n        _this.props.UserStore.fullname = \"\";\n        _this.props.UserStore.password = \"\";\n        _this.props.UserStore.phone = \"\";\n        _this.props.UserStore.userID = \"\";\n      });\n    };\n\n    _this.state = {\n      icons: [{\n        id: 1,\n        iconName: 'arrow-left'\n      }, {\n        id: 2,\n        iconName: 'more-vertical'\n      }],\n      editAccountModalVisible: false,\n      passwordAlert: false,\n      fullNameUpdate: _this.props.UserStore.fullname,\n      emailUpdate: _this.props.UserStore.email,\n      phoneUpdate: _this.props.UserStore.phone,\n      inputTextModal: \"\",\n      editableTextInput: false,\n      fullnameError: \"\",\n      phoneError: \"\",\n      emailError: \"\",\n      submitted: false,\n      resetPW: false,\n      imageUploading: false,\n      selectedImageURI: \"\",\n      verificationSnackbarVisible: false,\n      menuVisible: false\n    };\n    _this.signOut = _this.signOut.bind(_assertThisInitialized(_this));\n    _this.updateAccountInfo = _this.updateAccountInfo.bind(_assertThisInitialized(_this));\n    _this.resetPassword = _this.resetPassword.bind(_assertThisInitialized(_this));\n    _this.pickImage = _this.pickImage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._navListener = this.props.navigation.addListener('didFocus', function () {\n        StatusBar.setBarStyle('light-content', true);\n        Platform.OS === 'android' && StatusBar.setBackgroundColor(Colors.tango900);\n      });\n      var db = firebase.firestore();\n      var doc = db.collection('users').doc(this.props.UserStore.userID);\n\n      if (this.props.UserStore.signInProvider == \"password\") {\n        this.setState({\n          editableTextInput: true\n        });\n      } else {\n        this.setState({\n          editableTextInput: false\n        });\n      }\n\n      this.getPermissionAsync();\n      firebase.auth().currentUser.emailVerified ? this.setState({\n        verificationSnackbarVisible: false\n      }) : this.setState({\n        verificationSnackbarVisible: true\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._navListener.remove();\n    }\n  }, {\n    key: \"passwordInputDialogue\",\n    value: function passwordInputDialogue(visible) {\n      this.setState({\n        passwordAlert: visible\n      });\n    }\n  }, {\n    key: \"editAccountModal\",\n    value: function editAccountModal(visible) {\n      this.setState({\n        editAccountModalVisible: visible,\n        fullnameError: \"\",\n        phoneError: \"\",\n        emailError: \"\"\n      });\n      this.state.emailUpdate = this.props.UserStore.email;\n      this.state.fullNameUpdate = this.props.UserStore.fullname;\n      this.state.phoneUpdate = this.props.UserStore.phone;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var initals = this.props.UserStore.firstname.charAt(0).toUpperCase() + \"\" + this.props.UserStore.lastname.charAt(0).toUpperCase();\n      var _this$props$UserStore = this.props.UserStore,\n          firstname = _this$props$UserStore.firstname,\n          lastname = _this$props$UserStore.lastname,\n          vehicles = _this$props$UserStore.vehicles,\n          payments = _this$props$UserStore.payments;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          height = _Dimensions$get.height,\n          width = _Dimensions$get.width;\n\n      var db = firebase.firestore();\n      var doc = db.collection('users').doc(this.props.UserStore.email);\n      return React.createElement(Provider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.editAccountModalVisible,\n        onRequestClose: function onRequestClose() {\n          return _this2.setState({\n            editAccountModalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }, React.createElement(DialogInput, {\n        isDialogVisible: this.state.passwordAlert,\n        title: \"Enter your password\",\n        message: \"We need to verify your changes before we can update your information.\",\n        hintInput: \"Password...\",\n        closeDialog: function closeDialog() {\n          _this2.setState({\n            passwordAlert: false\n          });\n        },\n        submitInput: function submitInput(inputText) {\n          return _this2.requirePasswordAuthentication(inputText);\n        },\n        submitText: \"Verify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }\n      }), React.createElement(SafeAreaView, {\n        style: {\n          paddingTop: 10,\n          marginHorizontal: 16,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }\n      }, React.createElement(TopBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto',\n          marginTop: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, \"Edit Profile\"), React.createElement(Icon, {\n        iconName: \"x\",\n        iconColor: Colors.cosmos500,\n        iconSize: 28,\n        onPress: function onPress() {\n          return _this2.editAccountModal(!_this2.state.editAccountModalVisible);\n        },\n        style: {\n          marginTop: 10,\n          marginLeft: \"auto\",\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      }, this.props.UserStore.photo && !this.state.imageUploading ? React.createElement(ProfilePic, {\n        source: {\n          uri: this.props.UserStore.photo\n        },\n        imgWidth: 60,\n        imgHeight: 60,\n        initals: initals,\n        style: {\n          backgroundColor: \"#FFFFFF\",\n          marginVertical: 20,\n          marginLeft: 8\n        },\n        fontSize: 18,\n        fontColor: \"#1D2951\",\n        onPress: this.pickImage,\n        alt: \"Your profile picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }) : firebase.auth().currentUser.photoURL && !this.state.imageUploading ? React.createElement(ProfilePic, {\n        source: {\n          uri: firebase.auth().currentUser.photoURL\n        },\n        imgWidth: 60,\n        imgHeight: 60,\n        initals: initals,\n        style: {\n          backgroundColor: \"#FFFFFF\",\n          marginVertical: 20,\n          marginLeft: 8\n        },\n        fontSize: 18,\n        fontColor: \"#1D2951\",\n        onPress: this.pickImage,\n        alt: \"Your profile picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }\n      }) : this.state.imageUploading ? React.createElement(Circle, {\n        width: 60,\n        style: {\n          marginVertical: 20,\n          marginLeft: 8\n        },\n        color: \"#ffffff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 29\n        }\n      })) : React.createElement(ProfilePic, {\n        initals: initals,\n        style: {\n          backgroundColor: \"#FFFFFF\",\n          marginVertical: 20,\n          marginLeft: 8,\n          width: 60,\n          height: 60\n        },\n        fontSize: 18,\n        imgWidth: 60,\n        imgHeight: 60,\n        fontColor: Colors.apollo900,\n        onPress: this.pickImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      }), this.props.UserStore.signInProvider == \"password\" ? React.createElement(ClickableChip, {\n        bgColor: \"rgba(rgba(232, 86, 86, 0.3))\",\n        textColor: Colors.hal700,\n        onPress: function onPress() {\n          return _this2.resetPassword();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }\n      }, this.state.resetPW ? \"Sent!\" : \"Reset Password\") : null), React.createElement(Input, {\n        placeholder: \"Your name...\",\n        label: \"Full Name\",\n        name: \"full name\",\n        onChangeText: function onChangeText(fullNameUpdate) {\n          return _this2.setState({\n            fullNameUpdate: fullNameUpdate\n          });\n        },\n        value: this.state.fullNameUpdate,\n        maxLength: 40,\n        keyboardType: \"default\",\n        error: this.state.fullnameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 25\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Enter email...\",\n        label: \"Email\",\n        name: \"email\",\n        editable: this.state.editableTextInput,\n        onChangeText: function onChangeText(emailUpdate) {\n          return _this2.setState({\n            emailUpdate: emailUpdate\n          });\n        },\n        value: this.state.emailUpdate,\n        maxLength: 55,\n        keyboardType: \"email-address\",\n        error: this.state.emailError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 25\n        }\n      }), React.createElement(Input, {\n        placeholder: \"000-000-0000\",\n        mask: \"phone\",\n        label: \"Phone\",\n        name: \"phone\",\n        onChangeText: function onChangeText(phoneUpdate) {\n          return _this2.setState({\n            phoneUpdate: phoneUpdate\n          });\n        },\n        value: this.state.phoneUpdate,\n        maxLength: 17,\n        keyboardType: \"phone-pad\",\n        error: this.state.phoneError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 25\n        }\n      }), React.createElement(ClickableChip, {\n        style: {\n          marginTop: 20,\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        onPress: function onPress() {\n          return _this2.updateAccountInfo();\n        },\n        bgColor: this.state.submitted ? 'rgba(53, 154, 106, 0.3)' : 'rgba(255, 193, 76, 0.3)',\n        textColor: this.state.submitted ? Colors.fortune700 : Colors.tango700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 26\n        }\n      }, this.state.submitted ? \"Submitted \" : \"Save Changes\")))), React.createElement(SafeAreaView, {\n        style: {\n          flexDirection: \"column\",\n          backgroundColor: Colors.tango900\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }\n      }, React.createElement(LinearGradient, {\n        colors: ['#FF8708', '#FFB33D'],\n        style: styles.headerBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 17\n        }\n      }, React.createElement(TopBar, {\n        style: {\n          zIndex: 9999\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        iconName: \"arrow-left\",\n        iconColor: \"#FFFFFF\",\n        iconSize: 28,\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          marginLeft: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 25\n        }\n      }, React.createElement(Menu, {\n        visible: this.state.menuVisible,\n        onDismiss: function onDismiss() {\n          return _this2.setState({\n            menuVisible: false\n          });\n        },\n        style: {\n          marginLeft: 'auto'\n        },\n        anchor: React.createElement(Icon, {\n          iconName: \"more-vertical\",\n          iconColor: \"#FFFFFF\",\n          iconSize: 24,\n          onPress: function onPress() {\n            return _this2.setState({\n              menuVisible: true\n            });\n          },\n          style: {\n            paddingLeft: 30,\n            marginLeft: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 37\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 29\n        }\n      }, React.createElement(Menu.Item, {\n        onPress: function onPress() {},\n        title: \"Settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 33\n        }\n      }), React.createElement(Menu.Item, {\n        onPress: function onPress() {\n          _this2.onShare();\n        },\n        title: \"Invite friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 33\n        }\n      }), React.createElement(Menu.Item, {\n        onPress: function onPress() {},\n        title: \"Promo code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 33\n        }\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 33\n        }\n      }), React.createElement(Menu.Item, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('TOS');\n        },\n        title: \"ToS and Privacy Policy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 33\n        }\n      }), React.createElement(Menu.Item, {\n        onPress: this.signOut,\n        title: \"Sign out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 33\n        }\n      }))))), this.props.UserStore.photo || firebase.auth().currentUser.photoURL ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 18\n        }\n      }, this.props.UserStore.photo ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }\n      }, React.createElement(ProfilePic, {\n        initals: initals,\n        imgWidth: 80,\n        imgHeight: 80,\n        style: {\n          width: 80,\n          height: 80,\n          backgroundColor: \"#ffffff\",\n          top: -45,\n          alignSelf: \"center\",\n          position: \"absolute\"\n        },\n        fontSize: 24,\n        fontColor: \"#1D2951\",\n        onPress: function onPress() {\n          return alert(\"YYYAAAAYYY!\");\n        },\n        source: {\n          uri: this.props.UserStore.photo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 25\n        }\n      })) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 21\n        }\n      }, React.createElement(ProfilePic, {\n        initals: initals,\n        imgWidth: 80,\n        imgHeight: 80,\n        style: {\n          width: 80,\n          height: 80,\n          backgroundColor: \"#ffffff\",\n          top: -45,\n          alignSelf: \"center\",\n          position: \"absolute\"\n        },\n        fontSize: 24,\n        fontColor: \"#1D2951\",\n        onPress: function onPress() {\n          return alert(\"YYYAAAAYYY!\");\n        },\n        source: {\n          uri: firebase.auth().currentUser.photoURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          zIndex: 999,\n          top: -55,\n          width: 80,\n          height: 80,\n          overflow: 'visible'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 21\n        }\n      }, React.createElement(Circle, {\n        onPress: function onPress() {\n          _this2.editAccountModal(true);\n        },\n        left: width / 2 + 15,\n        top: 0,\n        width: 50,\n        height: 30,\n        style: {\n          shadowColor: '#000',\n          margin: 5,\n          overflow: 'visible',\n          backgroundColor: \"#FFFFFF\",\n          width: 40,\n          height: 40,\n          shadowOpacity: 0.6,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowRadius: 3,\n          elevation: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        iconName: \"edit-2\",\n        iconColor: \"#fbb144\",\n        iconSize: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 33\n        }\n      })))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'absolute',\n          zIndex: 999,\n          top: -55,\n          width: 80,\n          height: 80,\n          overflow: 'visible'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 26\n        }\n      }, React.createElement(Circle, {\n        onPress: function onPress() {\n          _this2.editAccountModal(true);\n        },\n        left: width / 2 + 15,\n        top: 0,\n        width: 50,\n        height: 30,\n        style: {\n          shadowColor: '#000',\n          margin: 5,\n          overflow: 'visible',\n          backgroundColor: \"#FFFFFF\",\n          width: 40,\n          height: 40,\n          shadowOpacity: 0.6,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowRadius: 3,\n          elevation: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        iconName: \"edit-2\",\n        iconColor: \"#fbb144\",\n        iconSize: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 33\n        }\n      }))), React.createElement(ProfilePic, {\n        initals: initals,\n        style: {\n          width: 80,\n          height: 80,\n          backgroundColor: \"#ffffff\",\n          top: -45,\n          alignSelf: \"center\",\n          position: \"absolute\"\n        },\n        fontSize: 24,\n        fontColor: Colors.apollo900,\n        onPress: function onPress() {\n          return alert(\"YYYAAAAYYY!\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 25\n        }\n      })), React.createElement(ScrollView, {\n        style: {\n          marginTop: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.contentBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          paddingLeft: 8,\n          paddingRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 29\n        }\n      }, vehicles == undefined || vehicles.length <= 1 ? React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 82\n        }\n      }, \"My Space\") : React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 150\n        }\n      }, \"My Spaces\"), React.createElement(ClickableChip, {\n        bgColor: \"rgba(255, 193, 76, 0.3)\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"AddSpace\");\n        },\n        textColor: Colors.tango700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 33\n        }\n      }, \"+ Space\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 29\n        }\n      }, vehicles == undefined ? null : React.createElement(SpacesList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 65\n        }\n      }))), React.createElement(View, {\n        style: styles.contentBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          paddingLeft: 8,\n          paddingRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 29\n        }\n      }, vehicles == undefined || vehicles.length <= 1 ? React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 82\n        }\n      }, \"My Vehicle\") : React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 152\n        }\n      }, \"My Vehicles\"), React.createElement(ClickableChip, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"AddVehicle\");\n        },\n        bgColor: \"rgba(255, 193, 76, 0.3)\",\n        textColor: Colors.tango700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 33\n        }\n      }, \"+ Vehicle\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 29\n        }\n      }, vehicles == undefined ? null : React.createElement(VehicleList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 65\n        }\n      }))), React.createElement(View, {\n        style: styles.contentBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          paddingLeft: 8,\n          paddingRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 29\n        }\n      }, vehicles == undefined || vehicles.length <= 1 ? React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 82\n        }\n      }, \"My Payment\") : React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 152\n        }\n      }, \"My Payments\"), React.createElement(ClickableChip, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"AddPayment\");\n        },\n        bgColor: \"rgba(255, 193, 76, 0.3)\",\n        textColor: Colors.tango700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 33\n        }\n      }, \"+ Card\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 29\n        }\n      }, payments == undefined ? null : React.createElement(PaymentList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 65\n        }\n      }))), React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 25\n        }\n      })), React.createElement(Snackbar, {\n        visible: this.state.verificationSnackbarVisible,\n        onDismiss: function onDismiss() {\n          return _this2.setState({\n            verificationSnackbarVisible: false\n          });\n        },\n        action: {\n          label: 'Verify',\n          onPress: function onPress() {\n            _this2.resendVerification;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 21\n        }\n      }, \"Looks like your account needs verified at \", this.props.UserStore.email, \".\"))));\n    }\n  }]);\n\n  return Profile;\n}(Component), _class2.navigationOptions = {\n  header: null\n}, _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: 'center',\n    position: 'absolute'\n  },\n  contentBox: {\n    paddingVertical: 20\n  },\n  headerBox: {\n    height: Dimensions.get(\"window\").height / 9,\n    paddingBottom: 20,\n    width: Dimensions.get('window').width,\n    position: \"relative\"\n  },\n  name: {\n    alignSelf: 'center',\n    color: '#ffffff',\n    fontSize: 18,\n    marginTop: 5,\n    fontWeight: '700'\n  },\n  passwordReset: {\n    color: 'red',\n    textDecorationLine: 'underline',\n    fontSize: 16,\n    alignSelf: 'center',\n    marginTop: 24\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/ProfileScreen.js"],"names":["React","Component","LinearGradient","NavigationActions","Input","Button","ProfilePic","TopBar","Icon","Circle","Text","VehicleList","PaymentList","SpacesList","ClickableChip","DialogInput","ImagePicker","Permissions","Provider","Snackbar","Menu","Divider","firebase","inject","observer","UserStore","ComponentStore","Colors","regexFullname","regexPhone","regexEmail","nameValid","phoneValid","Profile","props","getPermissionAsync","Platform","OS","askAsync","CAMERA_ROLL","status","alert","onShare","Share","share","message","url","title","dialogTitle","subject","excludedActivityTypes","e","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","setState","imageUploading","cancelled","uploadImg","uri","then","catch","db","firestore","doc","collection","userID","fetch","response","blob","storageRef","storage","ref","profilePicRef","child","put","getDownloadURL","update","photo","resetPassword","auth","sendPasswordResetEmail","email","resetPW","setTimeout","error","requirePasswordAuthentication","pw","user","currentUser","passwordAlert","credentials","EmailAuthProvider","credential","reauthenticateWithCredential","get","u","exists","state","emailUpdate","updateEmail","submitted","code","emailError","editAccountModalVisible","errorCode","errorMessage","updateAccountInfo","phoneUpdate","phone","match","phoneError","fullNameUpdate","fullname","firstname","lastname","fullnameError","resendVerification","sendEmailVerification","verificationSnackbarVisible","signOut","navigation","navigate","password","icons","id","iconName","inputTextModal","editableTextInput","selectedImageURI","menuVisible","bind","_navListener","addListener","StatusBar","setBarStyle","setBackgroundColor","tango900","signInProvider","emailVerified","remove","visible","initals","charAt","toUpperCase","vehicles","payments","Dimensions","height","width","flex","inputText","paddingTop","marginHorizontal","fontSize","marginRight","marginTop","cosmos500","editAccountModal","marginLeft","flexDirection","alignItems","justifyContent","backgroundColor","marginVertical","photoURL","apollo900","hal700","paddingBottom","fortune700","tango700","styles","headerBox","zIndex","goBack","paddingLeft","top","alignSelf","position","overflow","shadowColor","margin","shadowOpacity","shadowOffset","shadowRadius","elevation","container","contentBox","paddingRight","undefined","length","label","onPress","navigationOptions","header","StyleSheet","create","paddingVertical","name","color","fontWeight","passwordReset","textDecorationLine"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {View, Share, ActivityIndicator, Dimensions, StatusBar, StyleSheet, ScrollView, Modal, Platform, SafeAreaView} from 'react-native'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\nimport {NavigationActions} from 'react-navigation'\r\nimport Input from '../components/Input'\r\nimport Button from '../components/Button'\r\n\r\nimport ProfilePic from '../components/ProfilePic'\r\nimport TopBar from '../components/TopBar'\r\nimport Icon from '../components/Icon'\r\nimport Circle from '../components/Circle'\r\nimport Text from '../components/Txt'\r\nimport VehicleList from '../components/VehicleList'\r\nimport PaymentList from '../components/PaymentList'\r\nimport SpacesList from '../components/SpacesList'\r\nimport ClickableChip from '../components/ClickableChip'\r\nimport DialogInput from 'react-native-dialog-input'\r\n// import Dialog from 'react-native-dialog'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport * as Permissions from 'expo-permissions'\r\n// import SnackBar from 'react-native-snackbar-component'\r\nimport {Provider, Snackbar, Menu, Divider} from 'react-native-paper'\r\n\r\n\r\n\r\n//Firebase imports\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport UserStore from '../stores/userStore'\r\nimport ComponentStore from '../stores/componentStore'\r\nimport Colors from '../constants/Colors';\r\n\r\n\r\n\r\n\r\n// Regex to check name and phone are valid at sign in\r\nconst regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/gi;\r\nconst regexPhone = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\r\nconst regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n// Vars that prevent continuing since this is not built into firebase natively\r\nlet nameValid = true;\r\nlet phoneValid = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@inject(\"UserStore\", \"ComponentStore\")\r\n@observer\r\nclass Profile extends Component{\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    };\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            icons: [\r\n                {id: 1, iconName: 'arrow-left'},\r\n                {id: 2, iconName: 'more-vertical'}\r\n            ],\r\n            editAccountModalVisible: false,\r\n            passwordAlert: false,\r\n            fullNameUpdate: this.props.UserStore.fullname,\r\n            emailUpdate: this.props.UserStore.email,\r\n            phoneUpdate: this.props.UserStore.phone,\r\n            inputTextModal: \"\",\r\n            editableTextInput: false,\r\n            fullnameError: \"\",\r\n            phoneError: \"\",\r\n            emailError: \"\",\r\n            submitted: false,\r\n            resetPW: false,\r\n            imageUploading: false,\r\n            selectedImageURI: \"\",\r\n            verificationSnackbarVisible: false,\r\n            menuVisible: false,\r\n        }\r\n\r\n        \r\n        \r\n\r\n        this.signOut = this.signOut.bind(this);\r\n        this.updateAccountInfo =  this.updateAccountInfo.bind(this);\r\n        this.resetPassword = this.resetPassword.bind(this);\r\n        this.pickImage = this.pickImage.bind(this);\r\n        // this.sendToFirebaseStorage = this.sendToFirebaseStorage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Set Status Bar page info here!\r\n        this._navListener = this.props.navigation.addListener('didFocus', () => {\r\n            StatusBar.setBarStyle('light-content', true);\r\n            Platform.OS === 'android' && StatusBar.setBackgroundColor(Colors.tango900);\r\n          });\r\n\r\n      \r\n\r\n\r\n    //    console.log(firebase.auth().currentUser.photoURL);\r\n    // alert(this.props.UserStore.memberTime)\r\n    const db = firebase.firestore();\r\n    const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n   \r\n\r\n    if(this.props.UserStore.signInProvider == \"password\"){\r\n        this.setState({editableTextInput: true})\r\n    }else{ this.setState({editableTextInput: false}) }\r\n\r\n    this.getPermissionAsync();\r\n\r\n    firebase.auth().currentUser.emailVerified ? \r\n        this.setState({verificationSnackbarVisible: false}) \r\n        : this.setState({verificationSnackbarVisible: true}) \r\n\r\n\r\n    \r\n\r\n\r\n       \r\n    \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Unmount status bar info\r\n        this._navListener.remove();\r\n      }\r\n\r\n\r\n    getPermissionAsync = async () => {\r\n        if (Platform.OS === 'ios') {\r\n          const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n          if (status !== 'granted') {\r\n            alert('Sorry, we need camera roll permissions to make this work!');\r\n          }\r\n        }\r\n      }\r\n\r\n      onShare = async () => {\r\n        try{\r\n         Share.share({\r\n            message: 'Come join Riive with me and learn how you can lease your driveway or park smarter at www.riive.net.',\r\n            url: 'https://www.riive.net',\r\n            title: 'Riive | The Shareparking App'\r\n          }, {\r\n            // Android only:\r\n            dialogTitle: 'Share Riive',\r\n            // iOS only:\r\n            subject: 'Join Riive with me',\r\n            excludedActivityTypes: [\r\n                'com.apple.UIKit.activity.SaveToCameraRoll', \r\n                'com.apple.UIKit.activity.AssignToContact'\r\n            ]\r\n          })\r\n        }catch(e){\r\n            alert(e)\r\n        }\r\n        }\r\n      \r\n\r\n\r\n    pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [3, 3],\r\n            quality: 0.1,\r\n            // base64: true,\r\n          });\r\n\r\n          this.setState({imageUploading: true})\r\n      \r\n      \r\n          if (!result.cancelled) {\r\n                this.uploadImg(result.uri)\r\n                    .then(() => {\r\n                        // alert(\"Success!\")\r\n                        this.setState({imageUploading: false})\r\n                    }).catch(() => {\r\n                        // alert(\"Failed to upload image. Please try again.\")\r\n                        this.setState({imageUploading: false})\r\n                    })\r\n            \r\n          }else{\r\n              this.setState({imageUploading: false})\r\n          }\r\n        };\r\n\r\n\r\n        \r\n    uploadImg = async (uri) => {\r\n        const db = firebase.firestore();\r\n        const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n\r\n        const response = await fetch(uri)\r\n        const blob = await response.blob()\r\n\r\n        const storageRef = firebase.storage().ref();\r\n        const profilePicRef = storageRef.child(\"users/\" + this.props.UserStore.userID + '/profile-pic')\r\n        return profilePicRef.put(blob)\r\n        .then(() => {\r\n           profilePicRef.getDownloadURL().then((uri) => {\r\n                db.collection(\"users\").doc(this.props.UserStore.userID).update({\r\n                    photo: uri\r\n                 })\r\n                 this.props.UserStore.photo = uri;\r\n\r\n                })\r\n            })\r\n\r\n        \r\n    }\r\n\r\n      \r\n\r\n\r\n\r\n    // Resets the password of the state with email\r\n        resetPassword = () => { \r\n            firebase.auth().sendPasswordResetEmail(this.props.UserStore.email).then(() => {\r\n                // this.setState({editAccountModalVisible: false})\r\n                //     alert(\"Check your email for a password reset link.\")\r\n                this.setState({resetPW: true})\r\n                setTimeout(() => this.setState({resetPW: false}), 3000)\r\n                             \r\n            }).catch((error) => {\r\n                alert('Failed to send password reset. ' + error.message)\r\n            });\r\n        }\r\n\r\n\r\n\r\n        \r\n    requirePasswordAuthentication = (pw) => {\r\n        // Prompt the user to re-provide their sign-in credentials\r\n\r\n        const db = firebase.firestore();\r\n        const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n\r\n        var user = firebase.auth().currentUser;\r\n        this.setState({passwordAlert : false})\r\n\r\n        // ensure that user is valid and authenticated. pw comes from <DialogInput> below\r\n        var credentials = firebase.auth.EmailAuthProvider.credential(\r\n        this.props.UserStore.email,\r\n        pw\r\n        );\r\n        // take authenticated credentials and verify that the user exists\r\n        user.reauthenticateWithCredential(credentials).then(() => {\r\n            doc.get().then((u) => {\r\n                if (u.exists){\r\n                    \r\n                    \r\n                    // update account info\r\n                    db.collection(\"users\").doc(this.props.UserStore.userID).update({\r\n                         \r\n                         email: this.state.emailUpdate,\r\n                         \r\n                      }).then(() => {\r\n                        // hide modal and dialog input and save new userstore email\r\n                        \r\n                        \r\n                        this.props.UserStore.email = this.state.emailUpdate;\r\n                        // checks for errors\r\n                        firebase.auth().currentUser.updateEmail(this.state.emailUpdate)\r\n                        .then(() => {\r\n                            this.setState({ submitted: true})\r\n                            setTimeout(() => this.setState({submitted: false}), 3000)\r\n                        })\r\n                        .catch((error) => {\r\n                            if(error.code == 'auth/email-already-in-use'){\r\n                                this.setState({ emailError: \"There is already an account with this email.\", submitted: false})\r\n                            }else if(error.code == 'auth/invalid-email'){\r\n                                this.setState({ emailError: \"Email is invalid. Please try again.\", submitted: false})\r\n                            }else if(error.code == 'auth/requires-recent-login'){\r\n                                alert(\"Please sign out and sign in again to verify your information\")\r\n                                this.setState({editAccountModalVisible: false, submitted: false})\r\n                            }else{\r\n                                alert(error.code + \": \" + error.message + \".\")\r\n                                this.setState({editAccountModalVisible: false, submitted: false})\r\n                            }\r\n                        })\r\n                       \r\n                      })\r\n\r\n\r\n                    }else{\r\n                        alert(\"Error!\")\r\n                    }\r\n            })\r\n\r\n           \r\n        }).catch((error) => {\r\n           var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            this.setState ({ passwordAlert: false})\r\n            if(errorCode == 'auth/wrong-password'){\r\n                alert(\"Password incorrect. Please try again.\")\r\n            }else if(errorCode == 'auth/invalid-credential'){\r\n                alert(\"Whoops, our authentication failed... Please try again.\")\r\n            }else{\r\n                alert(errorCode + \": \" + errorMessage + \".\")\r\n            }\r\n        });\r\n    }\r\n\r\n    updateAccountInfo = () => {\r\n        const db = firebase.firestore();\r\n        const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n        \r\n\r\n        if (this.state.phoneUpdate !== this.props.UserStore.phone){\r\n            if (this.state.phoneUpdate.match(regexPhone) || this.state.phoneUpdate == \"\"){\r\n                this.props.UserStore.phone = this.state.phoneUpdate;\r\n                doc.update({ phone: this.props.UserStore.phone})\r\n                this.setState({phoneError: '', submitted: true})\r\n                setTimeout(() => this.setState({submitted: false}), 3000)\r\n            }else{\r\n                this.setState({phoneError: 'Please provide a proper 10 digit phone number.'})\r\n            }\r\n        }\r\n        if (this.state.fullNameUpdate != this.props.UserStore.fullname){\r\n            if (this.state.fullNameUpdate.match(regexFullname)){\r\n                this.props.UserStore.fullname = this.state.fullNameUpdate\r\n                doc.update({ \r\n                    fullname: this.props.UserStore.fullname,\r\n                    firstname: this.props.UserStore.firstname,\r\n                    lastname: this.props.UserStore.lastname\r\n                })\r\n                this.setState({fullnameError: \"\", submitted: true}) \r\n                setTimeout(() => this.setState({submitted: false}), 3000)\r\n            }else{\r\n                this.setState({fullnameError: \"Please provide first and last name with a space.\"})\r\n            }           \r\n        }\r\n        if (this.state.emailUpdate !== this.props.UserStore.email){\r\n            if (this.state.emailUpdate.match(regexEmail)){\r\n            // See requirePasswordAuthentication function for more detail!\r\n            this.setState({passwordAlert: true, emailError: \"\"})\r\n            }else{\r\n                this.setState({emailError: 'Email format must be name@domain.com'})\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    passwordInputDialogue(visible){\r\n        this.setState({passwordAlert: visible})\r\n    }\r\n\r\n    resendVerification = () => {\r\n        firebase.auth().currentUser.sendEmailVerification().then(() => {\r\n            setTimeout(() => this.setState({verificationSnackbarVisible: false}), 500)\r\n        }).catch((e) => {\r\n            alert(e)\r\n        })\r\n    }\r\n        \r\n\r\n    editAccountModal(visible){\r\n        this.setState({\r\n            editAccountModalVisible: visible,\r\n            fullnameError: \"\",\r\n            phoneError: \"\",\r\n            emailError: \"\",\r\n        })\r\n        this.state.emailUpdate =  this.props.UserStore.email;\r\n        this.state.fullNameUpdate = this.props.UserStore.fullname;\r\n        this.state.phoneUpdate = this.props.UserStore.phone;\r\n    }\r\n\r\n\r\n\r\n    // carList () {\r\n    //     return this.props.UserStore.vehicles.map((car, index) => {\r\n    //         return (\r\n\r\n    //         <Text key={index}>Hello {car.Make}!</Text>\r\n                    \r\n     \r\n                \r\n    //         )\r\n    //     }) \r\n    // }\r\n\r\n    \r\n \r\n\r\n    signOut = () => {\r\n        firebase.auth().signOut().then(() => {\r\n            // alert(this.props.UserStore.firstname + \" has signed out.\");\r\n            this.props.navigation.navigate('Auth')\r\n\r\n            this.props.UserStore.email = \"\"\r\n            this.props.UserStore.fullname = \"\"\r\n            this.props.UserStore.password = \"\"\r\n            this.props.UserStore.phone = \"\"\r\n            this.props.UserStore.userID = \"\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const initals = this.props.UserStore.firstname.charAt(0).toUpperCase() + \"\" + this.props.UserStore.lastname.charAt(0).toUpperCase()\r\n        const {firstname, lastname, vehicles, payments} = this.props.UserStore \r\n        var {height, width} = Dimensions.get('window');\r\n\r\n\r\n       \r\n\r\n        const db = firebase.firestore();\r\n        const doc = db.collection('users').doc(this.props.UserStore.email);\r\n\r\n   \r\n\r\n        return(\r\n            <Provider>\r\n                <View style={{flex: 1}}>\r\n\r\n                     {/* Edit Account Modal!!! */}\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={false}\r\n                    visible={this.state.editAccountModalVisible}\r\n                    onRequestClose={() => this.setState({editAccountModalVisible: false})}\r\n                    \r\n                >\r\n\r\n                <DialogInput \r\n                    isDialogVisible={this.state.passwordAlert}\r\n                    title={\"Enter your password\"}\r\n                    message={\"We need to verify your changes before we can update your information.\"}\r\n                    hintInput={\"Password...\"}\r\n                    closeDialog={() => {this.setState({passwordAlert: false})}}\r\n                    submitInput={(inputText) => this.requirePasswordAuthentication(inputText)}\r\n                    submitText={\"Verify\"}\r\n                />\r\n                    \r\n                    <SafeAreaView style={{paddingTop: 10, marginHorizontal: 16, flex: 1}}>\r\n                        \r\n                    <ScrollView>\r\n                        <TopBar>\r\n                        <Text style={{fontSize: 20, marginRight: 'auto', marginTop: 8}}>Edit Profile</Text>\r\n                            <Icon \r\n                                iconName=\"x\"\r\n                                iconColor={Colors.cosmos500}\r\n                                iconSize={28}\r\n                                onPress={() => this.editAccountModal(!this.state.editAccountModalVisible)}\r\n                                style={{marginTop: 10, marginLeft: \"auto\", marginRight: 5}}\r\n                            />\r\n                        </TopBar>\r\n                        \r\n                        <View style={{flexDirection:\"row\", alignItems:\"center\", justifyContent:\"space-between\"}} >\r\n                        {this.props.UserStore.photo && !this.state.imageUploading ?\r\n                                           \r\n                        <ProfilePic \r\n                            source={{ uri: this.props.UserStore.photo }}\r\n                            imgWidth = {60}\r\n                            imgHeight = {60}\r\n                            initals={initals}\r\n                            style={{backgroundColor:\"#FFFFFF\", marginVertical: 20, marginLeft: 8}}\r\n                            fontSize={18}\r\n                            fontColor=\"#1D2951\"\r\n                            onPress={this.pickImage}\r\n                            alt=\"Your profile picture\"\r\n                        />\r\n                        \r\n                        : firebase.auth().currentUser.photoURL && !this.state.imageUploading ?\r\n                     \r\n                        <ProfilePic \r\n                            source={{ uri: firebase.auth().currentUser.photoURL }}\r\n                            imgWidth = {60}\r\n                            imgHeight = {60}\r\n                            initals={initals}\r\n                            style={{backgroundColor:\"#FFFFFF\", marginVertical: 20, marginLeft: 8}}\r\n                            fontSize={18}\r\n                            fontColor=\"#1D2951\"\r\n                            onPress={this.pickImage}\r\n                            alt=\"Your profile picture\"\r\n                        />\r\n                        \r\n\r\n                        : this.state.imageUploading ?\r\n\r\n                        <Circle\r\n                            width={60}\r\n                            style={{marginVertical: 20, marginLeft: 8}}\r\n                            color=\"#ffffff\"\r\n                        >\r\n                            <ActivityIndicator/>  \r\n                        </Circle>\r\n\r\n\r\n                        :\r\n\r\n                     \r\n                        <ProfilePic \r\n                            initals={initals}\r\n                            style={{backgroundColor:\"#FFFFFF\", marginVertical: 20, marginLeft: 8, width: 60, height: 60}}\r\n                            fontSize={18}\r\n                            imgWidth = {60}\r\n                            imgHeight = {60}\r\n                            fontColor={Colors.apollo900}\r\n                            onPress={this.pickImage}\r\n\r\n                        />\r\n                        \r\n                            \r\n                        \r\n                        }\r\n                        {this.props.UserStore.signInProvider == \"password\" ? \r\n                        <ClickableChip\r\n                                bgColor='rgba(rgba(232, 86, 86, 0.3))' // Colors.Tango300 with opacity of 30%\r\n                                textColor={Colors.hal700}\r\n                                onPress={() => this.resetPassword()}\r\n                                \r\n                        >{this.state.resetPW ? \"Sent!\" : \"Reset Password\"}</ClickableChip> : null }\r\n                        </View>\r\n\r\n                        <Input \r\n                             placeholder='Your name...'\r\n                             label=\"Full Name\"\r\n                             name=\"full name\"\r\n                             onChangeText= {(fullNameUpdate) => this.setState({fullNameUpdate})}\r\n                             value={this.state.fullNameUpdate}\r\n                             maxLength = {40}\r\n                             keyboardType='default'\r\n                             error={this.state.fullnameError}\r\n                        />\r\n                        <Input \r\n                             placeholder='Enter email...'\r\n                             label=\"Email\"\r\n                             name=\"email\"\r\n                             editable= {this.state.editableTextInput}\r\n                             onChangeText= {(emailUpdate) => this.setState({emailUpdate})}\r\n                             value={this.state.emailUpdate}\r\n                             maxLength = {55}\r\n                             keyboardType='email-address'\r\n                             error={this.state.emailError}\r\n                        />\r\n                        <Input \r\n                             placeholder='000-000-0000'\r\n                             mask='phone'\r\n                             label=\"Phone\"\r\n                             name=\"phone\"\r\n                             onChangeText= {(phoneUpdate) => this.setState({phoneUpdate})}\r\n                             value={this.state.phoneUpdate}\r\n                             maxLength = {17}\r\n                             keyboardType='phone-pad'\r\n                             error={this.state.phoneError}\r\n                        />\r\n                         \r\n                         <ClickableChip\r\n                                style={{marginTop: 20, paddingTop: 10, paddingBottom: 10,}}\r\n                                onPress={() => this.updateAccountInfo()}\r\n                                bgColor={this.state.submitted ? 'rgba(53, 154, 106, 0.3)' : 'rgba(255, 193, 76, 0.3)' }// Colors.Tango300 with opacity of 30%\r\n                                textColor={this.state.submitted ? Colors.fortune700 : Colors.tango700}\r\n                        >{this.state.submitted ? \"Submitted \" : \"Save Changes\"}</ClickableChip>\r\n\r\n                        \r\n                    \r\n                    </ScrollView>\r\n                    </SafeAreaView>\r\n                </Modal>\r\n\r\n                    \r\n\r\n\r\n\r\n\r\n\r\n            <SafeAreaView style={{ flexDirection: \"column\", backgroundColor: Colors.tango900}} />\r\n\r\n            <View style={{flex: 1}}>\r\n\r\n                <LinearGradient\r\n                    colors={['#FF8708', '#FFB33D']}\r\n                    style={styles.headerBox}\r\n                >\r\n                    <TopBar style={{zIndex: 9999}}>\r\n                        <Icon \r\n                            iconName=\"arrow-left\"\r\n                            iconColor=\"#FFFFFF\"\r\n                            iconSize={28}\r\n                            onPress={() => this.props.navigation.goBack(null)}\r\n                        />\r\n                        <View style={{marginLeft: 'auto'}}>\r\n                            <Menu\r\n                                visible={this.state.menuVisible}\r\n                                onDismiss={() => this.setState({menuVisible: false})}\r\n                                style={{marginLeft: 'auto'}}\r\n                                anchor={\r\n                                    <Icon \r\n                                        iconName=\"more-vertical\"\r\n                                        iconColor=\"#FFFFFF\"\r\n                                        iconSize={24}\r\n                                        onPress={() => this.setState({menuVisible: true})}\r\n                                        style={{paddingLeft: 30, marginLeft: \"auto\"}}\r\n                                    /> \r\n                                }\r\n                            >\r\n                                <Menu.Item onPress={() => {}} title=\"Settings\" />\r\n                                <Menu.Item onPress={() => {this.onShare()}} title=\"Invite friends\" />\r\n                                <Menu.Item onPress={() => {}} title=\"Promo code\" />\r\n                                <Divider />\r\n                                <Menu.Item onPress={() => {this.props.navigation.navigate('TOS')}} title=\"ToS and Privacy Policy\" />\r\n                                <Menu.Item onPress={this.signOut} title=\"Sign out\" />\r\n                            </Menu>\r\n                        </View>\r\n                        \r\n                        {/* <Icon \r\n                            iconName=\"more-vertical\"\r\n                            iconColor=\"#FFFFFF\"\r\n                            iconSize={24}\r\n                            onPress={() => alert(\"pressed 2!\")}\r\n                            style={{marginLeft: \"auto\"}}\r\n                        /> */}\r\n                    </TopBar>\r\n                </LinearGradient>\r\n                 \r\n\r\n\r\n                {/* returns if we know the user has a profile photo via Firebase Auth or uploaded to UserStore  */}\r\n                 {this.props.UserStore.photo || firebase.auth().currentUser.photoURL ? \r\n                 <View>\r\n                    {/* if we are hosting user image ourselves */}\r\n                    {this.props.UserStore.photo ?\r\n\r\n                    <View>\r\n                        <ProfilePic \r\n                            initals={initals}\r\n                            imgWidth = {80}\r\n                            imgHeight = {80}\r\n                            style={{width: 80, height: 80, backgroundColor: \"#ffffff\", top: -45 , alignSelf: \"center\", position: \"absolute\"}}\r\n                            fontSize={24}\r\n                            fontColor=\"#1D2951\"\r\n                            onPress={() => alert(\"YYYAAAAYYY!\")}\r\n                            source={{ uri: this.props.UserStore.photo }}\r\n\r\n                        />\r\n                    </View>\r\n                   \r\n                    // if google is hosting the photo\r\n                    :\r\n                    <View>\r\n                        <ProfilePic \r\n                            initals={initals}\r\n                            imgWidth = {80}\r\n                            imgHeight = {80}\r\n                            style={{width: 80, height: 80, backgroundColor: \"#ffffff\", top: -45, alignSelf: \"center\", position: \"absolute\"}}\r\n                            fontSize={24}\r\n                            fontColor=\"#1D2951\"\r\n                            onPress={() => alert(\"YYYAAAAYYY!\")}\r\n                            source={{ uri: firebase.auth().currentUser.photoURL }}\r\n\r\n                        />\r\n                    </View>\r\n                }\r\n                    <View style={{position: 'absolute', zIndex: 999, top: -55, width: 80, height: 80,overflow: 'visible'}}>\r\n                            <Circle \r\n                                onPress={() => {this.editAccountModal(true)}}\r\n                                left={(width/2) + 15}\r\n                                top={0}\r\n                                width={50}\r\n                                height={30}\r\n                                style={{shadowColor: '#000', margin: 5, overflow: 'visible', backgroundColor:\"#FFFFFF\", width: 40, height: 40, shadowOpacity: 0.6, shadowOffset:{width: 0, height: 0}, shadowRadius: 3, elevation: 12}}\r\n                            >   \r\n                                <Icon\r\n                                    iconName=\"edit-2\"\r\n                                    iconColor=\"#fbb144\"\r\n                                    iconSize={18}\r\n                                    \r\n                                />\r\n                            </Circle>\r\n                        </View> \r\n                    \r\n                \r\n                    </View>\r\n                    : \r\n                    <View>\r\n                         <View style={{position: 'absolute', zIndex: 999, top: -55, width: 80, height: 80,overflow: 'visible'}}>\r\n                            <Circle \r\n                                onPress={() => {this.editAccountModal(true)}}\r\n                                left={(width/2) + 15}\r\n                                top={0}\r\n                                width={50}\r\n                                height={30}\r\n                                style={{shadowColor: '#000', margin: 5, overflow: 'visible', backgroundColor:\"#FFFFFF\", width: 40, height: 40, shadowOpacity: 0.6, shadowOffset:{width: 0, height: 0}, shadowRadius: 3, elevation: 12}}\r\n                            >   \r\n                                <Icon\r\n                                    iconName=\"edit-2\"\r\n                                    iconColor=\"#fbb144\"\r\n                                    iconSize={18}\r\n                                    \r\n                                />\r\n                            </Circle>\r\n                        </View> \r\n                        <ProfilePic \r\n                            initals={initals}\r\n                            style={{width: 80, height: 80, backgroundColor: \"#ffffff\", top: -45, alignSelf: \"center\", position: \"absolute\"}}\r\n                            fontSize={24}\r\n                            fontColor={Colors.apollo900}\r\n                            onPress={() => alert(\"YYYAAAAYYY!\")}\r\n\r\n                        />\r\n                        \r\n                        <View style={styles.container}>\r\n                      \r\n                     </View>\r\n                    </View>\r\n                    }\r\n\r\n                   \r\n                    <ScrollView style={{marginTop: 40}}>\r\n                        <View style={styles.contentBox}>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'flex-start', paddingLeft: 8, paddingRight: 8}}>\r\n                                {vehicles == undefined || vehicles.length <= 1 ? <Text style={{fontSize: 20, marginRight: 'auto'}}>My Space</Text> : <Text style={{fontSize: 20, marginRight: 'auto'}}>My Spaces</Text>}\r\n                                <ClickableChip\r\n                                    bgColor='rgba(255, 193, 76, 0.3)' // Colors.Tango300 with opacity of 30%\r\n                                    onPress={() => this.props.navigation.navigate(\"AddSpace\")}\r\n                                    textColor={Colors.tango700}\r\n                                >+ Space</ClickableChip>\r\n                            </View>\r\n                            <View>\r\n                                {vehicles == undefined ? null : <SpacesList/>}\r\n                            </View>\r\n                            \r\n                        </View>\r\n                        <View style={styles.contentBox}>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'flex-start', paddingLeft: 8, paddingRight: 8}}>\r\n                                {vehicles == undefined || vehicles.length <= 1 ? <Text style={{fontSize: 20, marginRight: 'auto'}}>My Vehicle</Text> : <Text style={{fontSize: 20, marginRight: 'auto'}}>My Vehicles</Text>}\r\n                                <ClickableChip\r\n                                    onPress={() => this.props.navigation.navigate(\"AddVehicle\")}\r\n                                    bgColor='rgba(255, 193, 76, 0.3)' // Colors.Tango300 with opacity of 30%\r\n                                    textColor={Colors.tango700}\r\n                                >+ Vehicle</ClickableChip>\r\n                            </View>\r\n                            <View>\r\n                                {vehicles == undefined ? null : <VehicleList/>}\r\n                            </View>\r\n                            \r\n                        </View>\r\n                        <View style={styles.contentBox}>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'flex-start', paddingLeft: 8, paddingRight: 8}}>\r\n                                {vehicles == undefined || vehicles.length <= 1 ? <Text style={{fontSize: 20, marginRight: 'auto'}}>My Payment</Text> : <Text style={{fontSize: 20, marginRight: 'auto'}}>My Payments</Text>}\r\n                                <ClickableChip\r\n                                    onPress={() => this.props.navigation.navigate(\"AddPayment\")}\r\n                                    bgColor='rgba(255, 193, 76, 0.3)' // Colors.Tango300 with opacity of 30%\r\n                                    textColor={Colors.tango700}\r\n                                >+ Card</ClickableChip>\r\n                            </View>\r\n                            <View>\r\n                                {payments == undefined ? null : <PaymentList/>}\r\n                            </View>\r\n                        </View>\r\n                        <SafeAreaView></SafeAreaView>\r\n                    </ScrollView>\r\n\r\n                    <Snackbar\r\n                        visible={this.state.verificationSnackbarVisible}\r\n                        onDismiss={() => this.setState({ verificationSnackbarVisible: false })}\r\n                        action={{\r\n                            label: 'Verify',\r\n                            onPress: () => {this.resendVerification},\r\n                        }}\r\n                        >\r\n                        Looks like your account needs verified at {this.props.UserStore.email}.\r\n                        </Snackbar>\r\n                </View>\r\n            </View>\r\n            </Provider>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flexDirection: \"row\",\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n     \r\n    },\r\n    contentBox:{\r\n        paddingVertical: 20,   \r\n\r\n    },\r\n    headerBox: {\r\n        // position: 'absolute',\r\n        height: Dimensions.get(\"window\").height /9,\r\n        paddingBottom: 20,\r\n        width: Dimensions.get('window').width,\r\n        // borderWidth: 1,\r\n        // borderBottomRightRadius: 20,\r\n        // borderBottomLeftRadius: 20,\r\n        position: \"relative\",\r\n        \r\n    },\r\n    name: {\r\n        alignSelf: 'center',\r\n        color: '#ffffff',\r\n        fontSize: 18,\r\n        marginTop: 5,\r\n        fontWeight: '700'\r\n    },\r\n    passwordReset: {\r\n        color: 'red',\r\n        textDecorationLine: 'underline',\r\n        fontSize: 16,\r\n        alignSelf: 'center',\r\n        marginTop: 24\r\n      }\r\n})\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}