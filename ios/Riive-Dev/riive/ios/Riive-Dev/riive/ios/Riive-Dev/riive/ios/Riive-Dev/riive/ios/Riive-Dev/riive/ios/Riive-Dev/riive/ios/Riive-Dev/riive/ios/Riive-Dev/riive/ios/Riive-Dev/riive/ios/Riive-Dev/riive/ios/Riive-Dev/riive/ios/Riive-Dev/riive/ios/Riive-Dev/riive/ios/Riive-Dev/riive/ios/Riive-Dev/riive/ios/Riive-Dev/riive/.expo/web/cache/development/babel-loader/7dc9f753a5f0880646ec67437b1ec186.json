{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/features/camera-roll/ImageTile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Colors from \"../../constants/Colors\";\nimport Icon from \"../../components/Icon\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar ImageTile = function (_React$PureComponent) {\n  _inherits(ImageTile, _React$PureComponent);\n\n  var _super = _createSuper(ImageTile);\n\n  function ImageTile() {\n    _classCallCheck(this, ImageTile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          index = _this$props.index,\n          selected = _this$props.selected,\n          selectImage = _this$props.selectImage,\n          numSelected = _this$props.numSelected;\n      if (!item) return null;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          opacity: selected ? 1 : 0,\n          position: 'absolute',\n          top: 8,\n          right: 8,\n          backgroundColor: Colors.fortune900,\n          borderRadius: 24,\n          width: 24,\n          height: 24,\n          zIndex: 20,\n          display: \"flex\",\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        iconName: \"check\",\n        iconColor: Colors.cosmos500,\n        iconSize: 16,\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      })), React.createElement(TouchableHighlight, {\n        style: {\n          opacity: selected ? 0.5 : 1\n        },\n        underlayColor: \"transparent\",\n        onPress: function onPress() {\n          return selectImage(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: width / 4,\n          height: width / 4\n        },\n        source: {\n          uri: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ImageTile;\n}(React.PureComponent);\n\nexport default ImageTile;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/features/camera-roll/ImageTile.js"],"names":["React","Colors","Icon","Dimensions","get","width","ImageTile","props","item","index","selected","selectImage","numSelected","opacity","position","top","right","backgroundColor","fortune900","borderRadius","height","zIndex","display","alignItems","justifyContent","cosmos500","color","uri","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,OAAOC,MAAP;AACA,OAAOC,IAAP;;sBACkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;IAEFC,S;;;;;;;;;;;;;6BACK;AAAA,wBACmD,KAAKC,KADxD;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,KADL,eACKA,KADL;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,WADtB,eACsBA,WADtB;AAAA,UACmCC,WADnC,eACmCA,WADnC;AAEP,UAAI,CAACJ,IAAL,EAAW,OAAO,IAAP;AACX,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,OAAO,EAAEH,QAAQ,GAAG,CAAH,GAAO,CAAzB;AAA4BI,UAAAA,QAAQ,EAAE,UAAtC;AAAkDC,UAAAA,GAAG,EAAE,CAAvD;AAA0DC,UAAAA,KAAK,EAAE,CAAjE;AAAoEC,UAAAA,eAAe,EAAEhB,MAAM,CAACiB,UAA5F;AAAwGC,UAAAA,YAAY,EAAE,EAAtH;AAA0Hd,UAAAA,KAAK,EAAE,EAAjI;AAAqIe,UAAAA,MAAM,EAAE,EAA7I;AAAiJC,UAAAA,MAAM,EAAE,EAAzJ;AAA6JC,UAAAA,OAAO,EAAE,MAAtK;AAA8KC,UAAAA,UAAU,EAAE,QAA1L;AAAoMC,UAAAA,cAAc,EAAE;AAApN,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAC,OADX;AAEE,QAAA,SAAS,EAAEvB,MAAM,CAACwB,SAFpB;AAGE,QAAA,QAAQ,EAAE,EAHZ;AAIE,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF,EAUE,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAE;AAACb,UAAAA,OAAO,EAAEH,QAAQ,GAAG,GAAH,GAAS;AAA3B,SADT;AAEE,QAAA,aAAa,EAAC,aAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMC,WAAW,CAACF,KAAD,CAAjB;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAACJ,UAAAA,KAAK,EAAEA,KAAK,GAAC,CAAd;AAAiBe,UAAAA,MAAM,EAAEf,KAAK,GAAC;AAA/B,SADT;AAEE,QAAA,MAAM,EAAE;AAACsB,UAAAA,GAAG,EAAEnB;AAAN,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAVF,CADF;AAwBD;;;;EA5BqBR,KAAK,CAAC4B,a;;AA8B9B,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  TouchableHighlight,\n} from 'react-native';\nimport Colors from '../../constants/Colors';\nimport Icon from '../../components/Icon'\nconst { width } = Dimensions.get('window')\n\nclass ImageTile extends React.PureComponent {\n  render() {\n    let { item, index, selected, selectImage, numSelected } = this.props;\n    if (!item) return null;\n    return (\n      <View>\n        <View style={{opacity: selected ? 1 : 0, position: 'absolute', top: 8, right: 8, backgroundColor: Colors.fortune900, borderRadius: 24, width: 24, height: 24, zIndex: 20, display: \"flex\", alignItems: 'center', justifyContent: 'center'}}>\n        {/* <Text style={{color: \"white\"}}>{selected ? numSelected : \"?\"}</Text> */}\n        <Icon \n          iconName=\"check\"\n          iconColor={Colors.cosmos500}\n          iconSize={16}\n          style={{color: 'white'}}\n        />\n        </View>\n        <TouchableHighlight\n          style={{opacity: selected ? 0.5 : 1}}\n          underlayColor='transparent'\n          onPress={() => selectImage(index)}\n        >\n          \n          <Image\n            style={{width: width/4, height: width/4}}\n            source={{uri: item}}\n          />\n        </TouchableHighlight>\n      </View>\n    )\n  }\n}\nexport default ImageTile;"]},"metadata":{},"sourceType":"module"}