{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/ProfilePic.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"./Txt\";\nimport Circle from \"./Circle\";\nimport Icon from \"./Icon\";\n\nvar ProfilePic = function ProfilePic(_ref) {\n  var alt = _ref.alt,\n      source = _ref.source,\n      initals = _ref.initals,\n      fontSize = _ref.fontSize,\n      fontColor = _ref.fontColor,\n      imgWidth = _ref.imgWidth,\n      imgHeight = _ref.imgHeight,\n      onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, [\"alt\", \"source\", \"initals\", \"fontSize\", \"fontColor\", \"imgWidth\", \"imgHeight\", \"onPress\"]);\n\n  var style = [styles.container, props.style || {}];\n\n  var allProps = _extends({}, props, {\n    style: style\n  });\n\n  if (source) {\n    return React.createElement(View, {\n      style: {\n        postion: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        position: 'relative',\n        alignContent: 'center',\n        zIndex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, _extends({}, allProps, {\n      underlayColor: \"#ccc\",\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }), React.createElement(Image, {\n      style: {\n        width: imgWidth,\n        height: imgHeight,\n        borderRadius: imgHeight / 2\n      },\n      source: source,\n      resizeMode: \"cover\",\n      accessible: true,\n      accessibilityLabel: alt,\n      loadingIndicatorSource: React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 49\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }))));\n  } else {\n    return React.createElement(View, {\n      style: {\n        postion: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        position: 'relative',\n        alignContent: 'center',\n        zIndex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, _extends({}, allProps, {\n      underlayColor: \"#ccc\",\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: fontSize,\n        color: fontColor,\n        fontWeight: '700'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \" \", initals, \" \"))));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOpacity: 0.6,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowRadius: 3,\n    elevation: 12,\n    backgroundColor: 'white'\n  }\n});\nexport default ProfilePic;","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/components/ProfilePic.js"],"names":["React","Text","Circle","Icon","ProfilePic","alt","source","initals","fontSize","fontColor","imgWidth","imgHeight","onPress","props","style","styles","container","allProps","postion","position","alignContent","zIndex","width","height","borderRadius","color","fontWeight","StyleSheet","create","Math","round","Dimensions","get","justifyContent","alignItems","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, ActivityIndicator, StyleSheet, TouchableOpacity, Dimensions, Image} from 'react-native';\r\nimport Text from './Txt'\r\nimport Circle from './Circle'\r\nimport Icon from './Icon'\r\n\r\nconst ProfilePic = ({ alt, source, initals, fontSize, fontColor, imgWidth, imgHeight, onPress, ...props}) => {\r\n  const style = [styles.container,  props.style || {}]\r\n  const allProps = Object.assign({}, props,{style:style})  \r\n  \r\n  if (source){\r\n    return(\r\n      <View style={{postion: 'absolute'}}>\r\n      <View style={{position: 'relative', alignContent: 'center', zIndex:1,}}>\r\n      \r\n        <TouchableOpacity\r\n        {...allProps }\r\n        underlayColor = '#ccc'\r\n        onPress = {onPress}\r\n      >\r\n        {/* <Text style={{fontSize: fontSize, color: fontColor, fontWeight: '500'}}>FUK</Text> */}\r\n        <Image style={{ width: imgWidth, \r\n                        height: imgHeight,  \r\n                        borderRadius:  (imgHeight) / 2,\r\n                      }} \r\n                        source={source}\r\n                        resizeMode=\"cover\"\r\n                        accessible={true} \r\n                        accessibilityLabel={alt} \r\n                        loadingIndicatorSource={<ActivityIndicator />} \r\n          />\r\n      </TouchableOpacity>\r\n      </View>\r\n      \r\n      \r\n   </View>\r\n    )\r\n  }else{\r\n  return(\r\n      <View style={{postion: 'absolute'}}>\r\n      <View style={{position: 'relative', alignContent: 'center', zIndex:1}}>\r\n      \r\n        <TouchableOpacity\r\n        {...allProps }\r\n        underlayColor = '#ccc'\r\n        onPress = {onPress}\r\n      >\r\n        <Text style={{fontSize: fontSize, color: fontColor, fontWeight: '700'}}> {initals} </Text>\r\n      </TouchableOpacity>\r\n      \r\n      </View>\r\n      \r\n      \r\n   </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        // alignSelf: 'center',\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          // borderWidth: 5,\r\n          // borderColor: 'white',\r\n          shadowColor: '#000', \r\n          shadowOpacity: 0.6, \r\n          shadowOffset:{width: 2, height: 2}, \r\n          shadowRadius: 3, \r\n          elevation: 12,\r\n          backgroundColor: 'white'\r\n\r\n    }\r\n   \r\n})\r\n\r\nexport default ProfilePic"]},"metadata":{},"sourceType":"module"}