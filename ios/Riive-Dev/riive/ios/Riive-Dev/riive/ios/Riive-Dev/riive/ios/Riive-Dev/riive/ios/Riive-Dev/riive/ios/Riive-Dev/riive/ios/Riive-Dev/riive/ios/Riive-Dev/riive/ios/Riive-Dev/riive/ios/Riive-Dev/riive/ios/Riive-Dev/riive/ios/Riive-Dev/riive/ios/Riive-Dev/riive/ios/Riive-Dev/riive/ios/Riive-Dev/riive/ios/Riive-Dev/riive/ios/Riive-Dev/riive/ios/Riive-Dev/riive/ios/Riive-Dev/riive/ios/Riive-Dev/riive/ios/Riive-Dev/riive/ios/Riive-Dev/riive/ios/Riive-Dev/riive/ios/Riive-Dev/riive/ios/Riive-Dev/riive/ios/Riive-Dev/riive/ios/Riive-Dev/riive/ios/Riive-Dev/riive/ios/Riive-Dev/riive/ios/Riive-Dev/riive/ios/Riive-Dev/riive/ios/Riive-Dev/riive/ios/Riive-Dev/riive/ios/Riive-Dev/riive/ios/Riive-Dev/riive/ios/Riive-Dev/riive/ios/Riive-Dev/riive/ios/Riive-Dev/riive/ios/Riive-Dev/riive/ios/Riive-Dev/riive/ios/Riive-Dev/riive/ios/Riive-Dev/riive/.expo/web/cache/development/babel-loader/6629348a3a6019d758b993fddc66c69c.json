{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Fragment } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"../components/Button\";\nimport Text from \"../components/Txt\";\nimport * as Font from 'expo-font';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport { inject, observer } from 'mobx-react/native';\nimport UserStore from \"../stores/userStore\";\nimport Colors from \"../constants/Colors\";\nvar Home = (_dec = inject(\"UserStore\"), _dec(_class = observer(_class = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    _classCallCheck(this, Home);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._navListener = this.props.navigation.addListener('didFocus', function () {\n        StatusBar.setBarStyle('dark-content', true);\n        Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._navListener.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$UserStore = this.props.UserStore,\n          firstname = _this$props$UserStore.firstname,\n          email = _this$props$UserStore.email;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          flex: 0,\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 28\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Hello \", firstname, \"! Your email is \", email, \".\"), React.createElement(Button, {\n        style: {\n          backgroundColor: \"#FF8708\"\n        },\n        textStyle: {\n          color: \"#FFFFFF\"\n        },\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Profile');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, \"Go to Profile\"));\n    }\n  }]);\n\n  return Home;\n}(Component)) || _class) || _class);\nexport { Home as default };","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/HomeScreen.js"],"names":["React","Component","Fragment","Button","Text","Font","firebase","inject","observer","UserStore","Colors","Home","props","_navListener","navigation","addListener","StatusBar","setBarStyle","Platform","OS","setBackgroundColor","remove","firstname","email","flex","backgroundColor","fontSize","color","navigate"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;SACQC,Q;;;;;;AACR,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AAKA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,mBAA/B;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;IAIqBC,I,WAFpBJ,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;AAEG,gBAAYI,KAAZ,EAAkB;AAAA;;AAAA,6BACRA,KADQ;AAIjB;;;;wCAEkB;AAEf,WAAKC,YAAL,GAAoB,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,WAAtB,CAAkC,UAAlC,EAA8C,YAAM;AACpEC,QAAAA,SAAS,CAACC,WAAV,CAAsB,cAAtB,EAAsC,IAAtC;AACAC,QAAAA,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BH,SAAS,CAACI,kBAAV,CAA6B,OAA7B,CAA7B;AACD,OAHiB,CAApB;AAIC;;;2CAGsB;AAEnB,WAAKP,YAAL,CAAkBQ,MAAlB;AACD;;;6BAEC;AAAA;;AAAA,kCACuB,KAAKT,KAAL,CAAWH,SADlC;AAAA,UACGa,SADH,yBACGA,SADH;AAAA,UACcC,KADd,yBACcA,KADd;AAEJ,aACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,eAAe,EAAE;AAA3B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoCJ,SAApC,sBAA+DC,KAA/D,MAFJ,EAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACE,UAAAA,eAAe,EAAE;AAAlB,SAAf;AAA6C,QAAA,SAAS,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAAxD;AAA2E,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACf,KAAL,CAAWE,UAAX,CAAsBc,QAAtB,CAA+B,SAA/B,CAAN;AAAA,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADR;AAOH;;;;EA9B6B3B,S;SAAbU,I","sourcesContent":["import React, {Component} from 'react'\r\nimport {Fragment, View, ActivityIndicator, SafeAreaView, StatusBar, Platform} from 'react-native'\r\nimport Button from '../components/Button'\r\nimport Text from '../components/Txt'\r\nimport * as Font from 'expo-font'\r\n\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore';\r\n\r\n\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport UserStore from '../stores/userStore'\r\nimport Colors from '../constants/Colors'\r\n\r\n@inject(\"UserStore\")\r\n@observer\r\nexport default class Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n         // Set Status Bar page info here!\r\n        this._navListener = this.props.navigation.addListener('didFocus', () => {\r\n            StatusBar.setBarStyle('dark-content', true);\r\n            Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\r\n          });\r\n        }\r\n      \r\n\r\n        componentWillUnmount() {\r\n             // Unmount status bar info\r\n            this._navListener.remove();\r\n          }\r\n\r\n    render(){\r\n        const {firstname, email} = this.props.UserStore\r\n        return(\r\n                <View>\r\n                    <SafeAreaView style={{flex: 0, backgroundColor: \"white\", }} />\r\n                    <Text style={{fontSize: 28}}>Hello {firstname}! Your email is {email}.</Text>\r\n                    <Button style={{backgroundColor: \"#FF8708\"}} textStyle={{color:\"#FFFFFF\"}} onPress={() => this.props.navigation.navigate('Profile')}>Go to Profile</Button>\r\n                </View>\r\n        )\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}