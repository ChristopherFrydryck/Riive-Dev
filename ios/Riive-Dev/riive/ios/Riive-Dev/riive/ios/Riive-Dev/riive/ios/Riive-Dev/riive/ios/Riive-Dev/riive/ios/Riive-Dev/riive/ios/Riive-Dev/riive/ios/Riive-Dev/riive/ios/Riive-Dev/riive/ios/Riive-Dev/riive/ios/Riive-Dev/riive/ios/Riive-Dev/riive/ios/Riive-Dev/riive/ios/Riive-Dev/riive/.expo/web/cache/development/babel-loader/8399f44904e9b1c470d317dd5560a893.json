{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/Authentication.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"../components/Txt\";\nimport logo from \"../assets/img/Logo_001.png\";\nimport Expo from 'expo';\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport 'firebase/auth';\nimport firebaseConfig from \"../firebaseConfig\";\nimport { createAppContainer } from 'react-navigation';\nimport HomeScreen from \"./HomeScreen\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { inject, observer } from 'mobx-react/native';\nimport { requireNativeViewManager } from '@unimodules/core';\nvar providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\nvar firebaseAppAuth = firebaseApp.auth();\nvar regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/gi;\nvar regexPhone = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\nvar nameValid = false;\nvar phoneValid = false;\nvar Authentication = (_dec = inject(\"UserStore\"), _dec(_class = observer(_class = (_temp = function (_Component) {\n  _inherits(Authentication, _Component);\n\n  var _super = _createSuper(Authentication);\n\n  function Authentication() {\n    var _this;\n\n    _classCallCheck(this, Authentication);\n\n    _this = _super.call(this);\n\n    _this.createStripeCustomer = function _callee() {\n      var settings, fetchResponse, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              settings = {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  name: _this.props.UserStore.fullname,\n                  email: _this.props.UserStore.email,\n                  phone: _this.props.UserStore.phone,\n                  FBID: firebase.auth().currentUser.uid\n                })\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://us-central1-riive-parking.cloudfunctions.net/addCustomer', settings));\n\n            case 4:\n              fetchResponse = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.resetPassword = function () {\n      firebase.auth().sendPasswordResetEmail(_this.props.UserStore.email).then(function () {\n        alert('Check your email for a password reset link.');\n      }).catch(function (error) {\n        alert('Failed to send password reset. ' + error.message);\n      });\n    };\n\n    _this.signInWithGoogle = function _callee2() {\n      var _await$GoogleSignIn$s, result, user, credential;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                authenticating: true\n              });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(GoogleSignIn.askForPlayServicesAsync());\n\n            case 4:\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(GoogleSignIn.signInAsync());\n\n            case 6:\n              _await$GoogleSignIn$s = _context2.sent;\n              result = _await$GoogleSignIn$s.result;\n              user = _await$GoogleSignIn$s.user;\n\n              if (result.type === 'success') {\n                credential = firebase.auth.GoogleAuthProvider.credential(result.idToken, result.accessToken);\n                firebase.auth().signInWithCredential(credential).then(function (result) {\n                  _this.props.UserStore.userID = result.user.uid;\n                  var db = firebase.firestore();\n                  var doc = db.collection('users').doc(_this.props.UserStore.userID);\n                  doc.get().then(function (doc) {\n                    if (doc.exists) {\n                      _this.props.UserStore.email = doc.data().email;\n                      _this.props.UserStore.fullname = doc.data().fullname;\n                      _this.props.UserStore.phone = doc.data().phone;\n                      _this.props.UserStore.userID = doc.data().id;\n                      _this.props.UserStore.stripeID = doc.data().stripeID;\n                      _this.props.UserStore.photo = doc.data().photo;\n                      _this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime;\n                      _this.props.UserStore.vehicles = doc.data().vehicles;\n                      _this.props.UserStore.listings = doc.data().listings;\n                      _this.props.UserStore.payments = doc.data().payments;\n                      _this.props.UserStore.searchHistory = doc.data().searchHistory;\n                      _this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\n                    } else {\n                      _this.props.UserStore.email = result.user.email;\n                      _this.props.UserStore.fullname = result.user.displayName;\n                      _this.props.UserStore.phone = result.user.phoneNumber;\n                      _this.props.UserStore.photo = result.user.photoURL;\n                      _this.props.UserStore.joinedDate = result.user.createdAt;\n                      db.collection(\"users\").doc(_this.props.UserStore.userID).set({\n                        id: firebase.auth().currentUser.uid,\n                        fullname: _this.props.UserStore.fullname,\n                        firstname: _this.props.UserStore.firstname,\n                        lastname: _this.props.UserStore.lastname,\n                        email: _this.props.UserStore.email,\n                        phone: _this.props.UserStore.phone,\n                        searchHistory: [],\n                        totalNumTimesParked: 0,\n                        numTimesOpenedApp: 1,\n                        listings: [],\n                        vehicles: [],\n                        payments: [],\n                        photo: _this.props.UserStore.photo\n                      });\n                    }\n                  }).then(function () {\n                    _this.props.UserStore.userID = firebase.auth().currentUser.uid;\n                    _this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime;\n                    _this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\n\n                    _this.setState({\n                      authenticating: false\n                    });\n\n                    _this.props.navigation.navigate(\"Home\");\n                  });\n                });\n              } else {\n                alert(\"Cancelled\");\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", alert(\"ERROR!! \" + _context2.t0));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 12]], Promise);\n    };\n\n    _this.onPressSignUp = function () {\n      _this.setState({\n        authenticating: true\n      });\n\n      if (_this.props.UserStore.fullname.match(regexFullname)) {\n        _this.setState({\n          fullnameError: ''\n        });\n\n        nameValid = true;\n      } else {\n        _this.setState({\n          fullnameError: 'Please provide first and last name with a space.',\n          authenticating: false\n        });\n\n        namevalid = false;\n      }\n\n      if (_this.props.UserStore.phone.match(regexPhone)) {\n        _this.setState({\n          phoneError: ''\n        });\n\n        phoneValid = true;\n      } else {\n        _this.setState({\n          phoneError: 'Please provide a proper 10 digit phone number.',\n          authenticating: false\n        });\n\n        phoneValid = false;\n      }\n\n      if (nameValid && phoneValid) {\n        firebase.auth().createUserWithEmailAndPassword(_this.props.UserStore.email, _this.props.UserStore.password).then(function (userCredentials) {\n          _this.setState({\n            emailError: '',\n            passwordError: '',\n            fullnameError: '',\n            phoneError: ''\n          });\n\n          if (userCredentials.user) {\n            _this.props.UserStore.userID = firebase.auth().currentUser.uid;\n            userCredentials.user.updateProfile({\n              displayName: _this.props.UserStore.fullname\n            });\n            userCredentials.user.updateEmail(_this.props.UserStore.email).then(function () {\n              _this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime;\n              _this.props.UserStore.userID = firebase.auth().currentUser.uid;\n            }).then(function () {\n              firebase.auth().currentUser.sendEmailVerification();\n              var db = firebase.firestore();\n              var doc = db.collection('users').doc(_this.props.UserStore.userID);\n              doc.get().then(function (docData) {\n                db.collection(\"users\").doc(_this.props.UserStore.userID).set({\n                  id: firebase.auth().currentUser.uid,\n                  fullname: _this.props.UserStore.fullname,\n                  firstname: _this.props.UserStore.firstname,\n                  lastname: _this.props.UserStore.lastname,\n                  email: _this.props.UserStore.email,\n                  phone: _this.props.UserStore.phone,\n                  searchHistory: [],\n                  totalNumTimesParked: 0,\n                  numTimesOpenedApp: 1,\n                  listings: [],\n                  vehicles: [],\n                  payments: [],\n                  photo: ''\n                });\n\n                _this.setState({\n                  authenticating: false\n                });\n\n                _this.props.navigation.navigate('Home');\n\n                _this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\n              }).then(function () {\n                return _this.createStripeCustomer();\n              }).catch(function (e) {\n                alert('Whoops! We accidently lost connection. Try signing up again.' + e);\n                firebase.auth().currentUser.delete();\n              });\n            });\n          }\n        }).catch(function (e) {\n          var errorCode = e.code;\n          var errorMessage = e.message;\n\n          _this.setState({\n            authenticating: false\n          });\n\n          if (errorCode == 'auth/invalid-email') {\n            _this.setState({\n              emailError: 'Email format must be name@domain.com',\n              passwordError: ''\n            });\n          } else if (errorCode == 'auth/email-already-in-use') {\n            _this.setState({\n              emailError: 'Email is already in use with another account.',\n              passwordError: ''\n            });\n          } else if (errorCode == 'auth/weak-password') {\n            _this.setState({\n              emailError: '',\n              passwordError: 'Password must be longer than 5 characters.'\n            });\n          } else {\n            alert(errorCode + ': ' + errorMessage);\n          }\n        });\n      }\n    };\n\n    _this.onPressSignIn = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                authenticating: true\n              });\n\n              firebase.auth().signInWithEmailAndPassword(_this.props.UserStore.email, _this.props.UserStore.password).then(function () {\n                _this.props.UserStore.userID = firebase.auth().currentUser.uid;\n\n                _this.setState({\n                  emailError: '',\n                  passwordError: ''\n                });\n\n                var db = firebase.firestore();\n                var doc = db.collection('users').doc(_this.props.UserStore.userID);\n                console.log(firebase.auth().currentUser.providerId);\n                doc.get().then(function (doc) {\n                  if (doc.exists) {\n                    _this.props.UserStore.fullname = doc.data().fullname;\n                    _this.props.UserStore.phone = doc.data().phone;\n                    _this.props.UserStore.userID = doc.data().id;\n                    _this.props.UserStore.stripeID = doc.data().stripeID;\n                    _this.props.UserStore.photo = doc.data().photo;\n                    _this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime;\n                    _this.props.UserStore.vehicles = doc.data().vehicles;\n                    _this.props.UserStore.listings = doc.data().listings;\n                    _this.props.UserStore.payments = doc.data().payments;\n                    _this.props.UserStore.searchHistory = doc.data().searchHistory;\n                    _this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\n                    ;\n                    db.collection(\"users\").doc(_this.props.UserStore.userID).update({\n                      email: _this.props.UserStore.email\n                    });\n\n                    _this.props.navigation.navigate('Home');\n                  } else {\n                    alert(\"No user found\");\n                  }\n                }).catch(function (e) {\n                  alert(\"Failed to grab user data. Please try again. \" + e);\n                });\n                firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {});\n              }).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                _this.setState({\n                  authenticating: false\n                });\n\n                if (errorCode == 'auth/invalid-email') {\n                  _this.setState({\n                    emailError: 'Email format must be name@domain.com',\n                    passwordError: ''\n                  });\n                } else if (errorCode == 'auth/user-not-found') {\n                  _this.setState({\n                    emailError: 'There is no account under this email',\n                    passwordError: ''\n                  });\n                } else if (errorCode == 'auth/too-many-requests') {\n                  _this.setState({\n                    emailError: 'Too many recent requests. Try again soon.',\n                    passwordError: ''\n                  });\n                } else if (errorCode == 'auth/wrong-password') {\n                  _this.setState({\n                    passwordError: 'Password is incorrect or empty',\n                    emailError: ''\n                  });\n                } else {\n                  alert(errorCode + ': ' + errorMessage);\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      fullname: '',\n      phone: '',\n      stripeID: 'invalid',\n      authenticating: false,\n      toggleLogIn: true,\n      emailError: '',\n      passwordError: '',\n      fullnameError: '',\n      phoneError: ''\n    };\n    _this.onPressSignIn = _this.onPressSignIn.bind(_assertThisInitialized(_this));\n    _this.onPressSignUp = _this.onPressSignUp.bind(_assertThisInitialized(_this));\n    _this.renderCurrentState = _this.renderCurrentState.bind(_assertThisInitialized(_this));\n    _this.toggleSignInOrUp = _this.toggleSignInOrUp.bind(_assertThisInitialized(_this));\n    _this.resetPassword = _this.resetPassword.bind(_assertThisInitialized(_this));\n    _this.signInWithGoogle = _this.signInWithGoogle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Authentication, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var message;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.props.UserStore.email = 'admin@riive.net';\n              this.props.UserStore.password = \"Fallon430\";\n              this._navListener = this.props.navigation.addListener('didFocus', function () {\n                StatusBar.setBarStyle('dark-content', true);\n                Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\n              });\n              _context4.prev = 3;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(GoogleSignIn.initAsync({\n                clientId: 'com.googleusercontent.apps.888723186328-bq5cq0kof3dd1mn5pbi6ivj5ebodis9o',\n                scopes: ['profile', 'email'],\n                behavior: 'web'\n              }));\n\n            case 6:\n              _context4.next = 12;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](3);\n              message = _context4.t0.message;\n              alert('GoogleSignIn.initAsync(): ' + message);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[3, 8]], Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._navListener.remove();\n    }\n  }, {\n    key: \"toggleSignInOrUp\",\n    value: function toggleSignInOrUp() {\n      this.setState({\n        toggleLogIn: !this.state.toggleLogIn,\n        password: '',\n        emailError: '',\n        passwordError: '',\n        fullnameError: '',\n        phoneError: ''\n      });\n    }\n  }, {\n    key: \"renderCurrentState\",\n    value: function renderCurrentState() {\n      var _this2 = this;\n\n      if (this.state.authenticating) {\n        return React.createElement(View, {\n          style: styles.form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 11\n          }\n        }), React.createElement(Button, {\n          style: {\n            backgroundColor: \"#FF8708\"\n          },\n          textStyle: {\n            color: \"#FFFFFF\"\n          },\n          onPress: function onPress() {\n            return _this2.setState({\n              authenticating: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 11\n          }\n        }, \"Cancel\"));\n      } else if (this.state.toggleLogIn) {\n        return React.createElement(View, {\n          style: styles.form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 11\n          }\n        }, React.createElement(Input, {\n          placeholder: \"Enter email...\",\n          label: \"Email\",\n          name: \"email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.props.UserStore.email = email;\n          },\n          value: this.props.UserStore.email,\n          keyboardType: \"email-address\",\n          maxLength: 55,\n          error: this.state.emailError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }\n        }), React.createElement(Input, {\n          placeholder: \"Enter password...\",\n          label: \"Password\",\n          name: \"password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return _this2.props.UserStore.password = password;\n          },\n          value: this.props.UserStore.password,\n          maxLength: 55,\n          keyboardType: \"default\",\n          error: this.state.passwordError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }\n        }), React.createElement(Button, {\n          style: {\n            backgroundColor: \"#FF8708\"\n          },\n          textStyle: {\n            color: \"#FFFFFF\"\n          },\n          onPress: function onPress() {\n            return _this2.onPressSignIn();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }\n        }, \"Log In\"), React.createElement(Button, {\n          iconLib: \"FontAwesome\",\n          iconName: \"google\",\n          iconSize: 24,\n          iconColor: \"#ffffff\",\n          iconStyle: {\n            marginRight: 16\n          },\n          style: {\n            backgroundColor: \"#DB4437\"\n          },\n          textStyle: {\n            color: \"#FFFFFF\"\n          },\n          onPress: function onPress() {\n            return _this2.signInWithGoogle();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }\n        }, \"Sign In With Google\"), React.createElement(Text, {\n          onPress: function onPress() {\n            return _this2.toggleSignInOrUp();\n          },\n          style: styles.hyperlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }\n        }, \"Or Sign Up\"), React.createElement(Text, {\n          onPress: function onPress() {\n            return _this2.resetPassword();\n          },\n          style: styles.hyperlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }\n        }, \"Forgot Password?\"));\n      } else {\n        return React.createElement(View, {\n          style: styles.form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 8\n          }\n        }, React.createElement(Input, {\n          placeholder: \"Your name...\",\n          label: \"Full Name\",\n          name: \"full name\",\n          onChangeText: function onChangeText(fullname) {\n            return _this2.props.UserStore.fullname = fullname;\n          },\n          value: this.props.UserStore.fullname,\n          maxLength: 40,\n          keyboardType: \"default\",\n          error: this.state.fullnameError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 11\n          }\n        }), React.createElement(Input, {\n          placeholder: \"000-000-0000\",\n          mask: \"phone\",\n          label: \"Phone\",\n          name: \"phone\",\n          type: \"phone\",\n          onChangeText: function onChangeText(phone) {\n            return _this2.props.UserStore.phone = phone;\n          },\n          value: this.props.UserStore.phone,\n          keyboardType: \"phone-pad\",\n          maxLength: 17,\n          error: this.state.phoneError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 11\n          }\n        }), React.createElement(Input, {\n          placeholder: \"Enter email...\",\n          label: \"Email\",\n          name: \"email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.props.UserStore.email = email;\n          },\n          value: this.props.UserStore.email,\n          keyboardType: \"email-address\",\n          maxLength: 55,\n          error: this.state.emailError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 11\n          }\n        }), React.createElement(Input, {\n          placeholder: \"Enter password...\",\n          label: \"Password\",\n          name: \"password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return _this2.props.UserStore.password = password;\n          },\n          value: this.props.UserStore.password,\n          maxLength: 55,\n          keyboardType: \"default\",\n          error: this.state.passwordError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 11\n          }\n        }), React.createElement(Button, {\n          style: {\n            backgroundColor: \"#FF8708\"\n          },\n          textStyle: {\n            color: \"#FFFFFF\"\n          },\n          onPress: function onPress() {\n            return _this2.onPressSignUp(\"HomeScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 11\n          }\n        }, \"Sign Up\"), React.createElement(Text, {\n          onPress: function onPress() {\n            return _this2.toggleSignInOrUp();\n          },\n          style: styles.hyperlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 11\n          }\n        }, \"Or Log In\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        keyboardVerticalOffset: 120,\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.primaryView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }\n      }, !this.state.authenticating ? React.createElement(Image, {\n        source: logo,\n        style: styles.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 43\n        }\n      }) : null, this.renderCurrentState())));\n    }\n  }]);\n\n  return Authentication;\n}(Component), _temp)) || _class) || _class);\nvar styles = StyleSheet.create({\n  primaryView: {\n    paddingHorizontal: 24\n  },\n  img: {\n    width: 150,\n    resizeMode: 'contain',\n    alignSelf: 'center'\n  },\n  form: {\n    flex: 1\n  },\n  hyperlink: {\n    color: 'blue',\n    textDecorationLine: 'underline',\n    fontSize: 18,\n    alignSelf: 'center',\n    marginTop: 24\n  }\n});\nexport default withFirebaseAuth({\n  providers: providers,\n  firebaseAppAuth: firebaseAppAuth\n})(Authentication);","map":{"version":3,"sources":["/Users/christopherfrydryck/Documents/Dev/Riive-Dev/riive/screens/Authentication.js"],"names":["React","Component","Text","logo","Expo","GoogleSignIn","firebase","withFirebaseAuth","firebaseConfig","createAppContainer","HomeScreen","Input","Button","getStatusBarHeight","inject","observer","requireNativeViewManager","providers","googleProvider","auth","GoogleAuthProvider","firebaseApp","initializeApp","firebaseAppAuth","regexFullname","regexPhone","nameValid","phoneValid","Authentication","createStripeCustomer","settings","method","headers","Accept","body","JSON","stringify","name","props","UserStore","fullname","email","phone","FBID","currentUser","uid","fetch","fetchResponse","json","data","alert","resetPassword","sendPasswordResetEmail","then","catch","error","message","signInWithGoogle","setState","authenticating","askForPlayServicesAsync","signInAsync","result","user","type","credential","idToken","accessToken","signInWithCredential","userID","db","firestore","doc","collection","get","exists","id","stripeID","photo","joinedDate","metadata","creationTime","vehicles","listings","payments","searchHistory","signInProvider","providerData","providerId","displayName","phoneNumber","photoURL","createdAt","set","firstname","lastname","totalNumTimesParked","numTimesOpenedApp","navigation","navigate","onPressSignUp","match","fullnameError","namevalid","phoneError","createUserWithEmailAndPassword","password","userCredentials","emailError","passwordError","updateProfile","updateEmail","sendEmailVerification","docData","e","delete","errorCode","code","errorMessage","onPressSignIn","signInWithEmailAndPassword","console","log","update","setPersistence","Auth","Persistence","LOCAL","state","toggleLogIn","bind","renderCurrentState","toggleSignInOrUp","_navListener","addListener","StatusBar","setBarStyle","Platform","OS","setBackgroundColor","initAsync","clientId","scopes","behavior","remove","styles","form","backgroundColor","color","marginRight","hyperlink","flexGrow","justifyContent","primaryView","img","StyleSheet","create","paddingHorizontal","width","resizeMode","alignSelf","flex","textDecorationLine","fontSize","marginTop"],"mappings":"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","sourcesContent":["// React library imports\r\nimport React, {Component} from 'react';\r\nimport { ActivityIndicator, StyleSheet, StatusBar, Platform, View, ScrollView, SafeAreaView, Dimensions, KeyboardAvoidingView, Image } from 'react-native';\r\nimport Text from '../components/Txt'\r\n\r\nimport logo from '../assets/img/Logo_001.png'\r\n\r\nimport Expo from 'expo';\r\nimport * as GoogleSignIn from 'expo-google-sign-in'\r\n\r\n// import { GoogleSignin } from 'react-native-google-signin'\r\n\r\n// Firebase imports\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport 'firebase/auth';\r\nimport firebaseConfig from '../firebaseConfig'\r\n\r\n\r\nimport {createAppContainer} from 'react-navigation'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n// Component imports\r\nimport Input from '../components/Input'\r\nimport Button from '../components/Button'\r\n\r\n// Viewport imports\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height'\r\nimport { YellowBox } from 'react-native'\r\n\r\n//MobX Imports\r\nimport {inject, observer} from 'mobx-react/native'\r\nimport { requireNativeViewManager } from '@unimodules/core';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { GoogleSignin, GoogleSigninButton } from 'react-native-google-signin'\r\n\r\n\r\n// For export statement after render\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\n\r\n\r\n\r\n// Initlialized FB Vars\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\n\r\n\r\n\r\n// Regex to check name and phone are valid at sign in\r\nconst regexFullname = /[^0-9]([a-zA-Z]{1,})+[ ]+([a-zA-Z-']{2,})*$/gi;\r\nconst regexPhone = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\r\n\r\n// Vars that prevent continuing since this is not built into firebase natively\r\nlet nameValid = false;\r\nlet phoneValid = false;\r\n\r\n\r\n\r\n\r\n@inject(\"UserStore\")\r\n@observer\r\nclass Authentication extends Component {\r\n  constructor(){\r\n    super();\r\n   \r\n    \r\n\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      fullname: '',\r\n      phone: '',\r\n      stripeID: 'invalid',\r\n      authenticating: false,\r\n      toggleLogIn: true,\r\n\r\n      // Errors that may show if firebase catches them.\r\n      emailError: '',\r\n      passwordError: '',\r\n      fullnameError: '',\r\n      phoneError: '',\r\n    }\r\n    this.onPressSignIn = this.onPressSignIn.bind(this);\r\n    this.onPressSignUp = this.onPressSignUp.bind(this);\r\n    this.renderCurrentState = this.renderCurrentState.bind(this);\r\n    this.toggleSignInOrUp = this.toggleSignInOrUp.bind(this);\r\n    this.resetPassword =  this.resetPassword.bind(this);\r\n    this.signInWithGoogle = this.signInWithGoogle.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Remove after testing!!\r\n    this.props.UserStore.email = 'admin@riive.net'\r\n    this.props.UserStore.password = \"Fallon430\"\r\n\r\n     // Set Status Bar page info here!\r\n   this._navListener = this.props.navigation.addListener('didFocus', () => {\r\n    StatusBar.setBarStyle('dark-content', true);\r\n    Platform.OS === 'android' && StatusBar.setBackgroundColor('white');\r\n\r\n  });\r\n\r\n\r\n  \r\n  try {\r\n    await GoogleSignIn.initAsync({ \r\n      clientId: 'com.googleusercontent.apps.888723186328-bq5cq0kof3dd1mn5pbi6ivj5ebodis9o',\r\n      scopes: ['profile', 'email'],\r\n      behavior: 'web',\r\n    });\r\n  } catch ({ message }) {\r\n    alert('GoogleSignIn.initAsync(): ' + message);\r\n  }\r\n\r\n\r\n    \r\n    \r\n  }\r\n\r\n \r\n\r\n   componentWillUnmount() {\r\n        // Unmount status bar info\r\n       this._navListener.remove();\r\n     }\r\n\r\ncreateStripeCustomer = async () => {\r\n\r\n  const settings = {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      name: this.props.UserStore.fullname,\r\n      email: this.props.UserStore.email,\r\n      phone: this.props.UserStore.phone,\r\n      FBID: firebase.auth().currentUser.uid,\r\n    })\r\n  }\r\n  try{\r\n    const fetchResponse = await fetch('https://us-central1-riive-parking.cloudfunctions.net/addCustomer', settings)\r\n    const data = await fetchResponse.json();\r\n    return data;\r\n  }catch(e){\r\n    alert(e);\r\n  }    \r\n}\r\n\r\n\r\n\r\n\r\n// Resets the password of the state with email\r\nresetPassword = () =>{\r\n  firebase.auth().sendPasswordResetEmail(this.props.UserStore.email).then(function() {\r\n      alert('Check your email for a password reset link.')\r\n    }).catch(function(error) {\r\n      alert('Failed to send password reset. ' + error.message)\r\n  });\r\n}\r\n\r\n  // Toggles between sign in and sign up on same page.\r\n  toggleSignInOrUp() {\r\n    // resets the errors and password for security reasons\r\n    this.setState({ \r\n      toggleLogIn: !this.state.toggleLogIn,\r\n      password: '',\r\n      emailError: '',\r\n      passwordError: '',\r\n      fullnameError: '',\r\n      phoneError: '',\r\n    \r\n    })\r\n  }\r\n\r\n  signInWithGoogle = async () => {\r\n     \r\n    this.setState({authenticating: true})\r\n    try{\r\n\r\n      await GoogleSignIn.askForPlayServicesAsync();\r\n    const { result, user } = await    GoogleSignIn.signInAsync();\r\n\r\n      // const result = await Google.logInAsync({\r\n      //   androidClientId: '929031102626-0vgrqk865kkcar3d2smoabmuocn5d1h1.apps.googleusercontent.com',\r\n      //   iosClientId: '929031102626-c2ssoc6rc65ukb9moi1h45th1sni2ol1.apps.googleusercontent.com',\r\n      //   scopes: ['profile', 'email'],\r\n      // })\r\n      if (result.type === 'success'){\r\n        \r\n        const credential = firebase.auth.GoogleAuthProvider.credential(result.idToken, result.accessToken)\r\n        firebase.auth().signInWithCredential(credential).then((result) => {\r\n         \r\n        //  console.log(result.user)\r\n         this.props.UserStore.userID = result.user.uid;\r\n         \r\n\r\n        const db = firebase.firestore();\r\n        const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n\r\n\r\n        doc.get().then((doc) => {\r\n          if (doc.exists){\r\n            \r\n            \r\n            this.props.UserStore.email = doc.data().email\r\n            this.props.UserStore.fullname = doc.data().fullname;\r\n            this.props.UserStore.phone = doc.data().phone;\r\n            this.props.UserStore.userID = doc.data().id;\r\n            this.props.UserStore.stripeID = doc.data().stripeID;\r\n            this.props.UserStore.photo = doc.data().photo;\r\n            this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime\r\n            this.props.UserStore.vehicles = doc.data().vehicles;\r\n            this.props.UserStore.listings = doc.data().listings;\r\n            this.props.UserStore.payments = doc.data().payments;\r\n            this.props.UserStore.searchHistory = doc.data().searchHistory;\r\n\r\n            this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\r\n\r\n            \r\n\r\n\r\n            \r\n        }else{\r\n            this.props.UserStore.email = result.user.email;\r\n            this.props.UserStore.fullname = result.user.displayName;\r\n            this.props.UserStore.phone = result.user.phoneNumber;\r\n            // Skip User ID. we do this after creating the member\r\n            this.props.UserStore.photo = result.user.photoURL\r\n            this.props.UserStore.joinedDate = result.user.createdAt\r\n            // Vehicles, listings, search history and payments will be empty.\r\n            \r\n\r\n          db.collection(\"users\").doc(this.props.UserStore.userID).set({\r\n            id: firebase.auth().currentUser.uid,\r\n            fullname: this.props.UserStore.fullname,\r\n            firstname: this.props.UserStore.firstname,\r\n            lastname: this.props.UserStore.lastname,\r\n            email: this.props.UserStore.email,\r\n            phone: this.props.UserStore.phone,\r\n            searchHistory: [],\r\n            totalNumTimesParked: 0,\r\n            numTimesOpenedApp: 1,\r\n            listings: [],\r\n            vehicles: [],\r\n            payments: [],\r\n            photo: this.props.UserStore.photo,\r\n         })\r\n         \r\n        }\r\n             \r\n      \r\n        }).then(() => {\r\n          this.props.UserStore.userID = firebase.auth().currentUser.uid\r\n          this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime\r\n           // ID if user signed in via email or google\r\n          this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\r\n          \r\n          this.setState({authenticating: false})\r\n          this.props.navigation.navigate(\"Home\")\r\n      \r\n        })\r\n\r\n        \r\n        \r\n        })        \r\n      }else{\r\n        // return { cancelled: true };\r\n        alert(\"Cancelled\")\r\n      }\r\n    } catch (e){\r\n      return alert(\"ERROR!! \" + e)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Sign up authorization with email and password\r\n  // also sends an email verification to the user\r\n  onPressSignUp = () => {\r\n\r\n     // Begin ActivityIndicator since auth == true\r\n    this.setState ({ authenticating: true})\r\n\r\n      // Checks if full name is in format of Firstname Lastname\r\n      if(this.props.UserStore.fullname.match(regexFullname)){\r\n        // alert('name valid')\r\n        this.setState({fullnameError: ''})\r\n        nameValid = true;\r\n      }else{\r\n        // alert('name invalid')\r\n        this.setState({\r\n          fullnameError: 'Please provide first and last name with a space.',\r\n          authenticating: false\r\n        });\r\n        namevalid = false;\r\n      }  \r\n\r\n      // Checks phone for valid format (accepts many formats)\r\n      if(this.props.UserStore.phone.match(regexPhone)){\r\n        // alert('name valid')\r\n        this.setState({phoneError: ''})\r\n        phoneValid = true;\r\n      }else{\r\n        // alert('name invalid')\r\n        this.setState({\r\n          phoneError: 'Please provide a proper 10 digit phone number.',\r\n          authenticating: false\r\n        });\r\n        phoneValid = false;\r\n      }  \r\n      \r\n\r\n    // If vars are true and valid beguin creating user\r\n    if(nameValid && phoneValid){\r\n    \r\n    firebase.auth().createUserWithEmailAndPassword(this.props.UserStore.email, this.props.UserStore.password).then((userCredentials) => {\r\n        // RETURN ALL THIS IF EMAIL AND PASSWORD ARE TRUE\r\n\r\n        this.setState({\r\n          emailError: '',\r\n          passwordError: '',\r\n          fullnameError: '',\r\n          phoneError: '',\r\n        })  \r\n\r\n        \r\n        // Updates user's displayName in firebase auth\r\n        if(userCredentials.user){\r\n          this.props.UserStore.userID = firebase.auth().currentUser.uid;\r\n           userCredentials.user.updateProfile({\r\n            displayName: this.props.UserStore.fullname\r\n           })\r\n           userCredentials.user.updateEmail(this.props.UserStore.email).then(() => {\r\n                this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime\r\n                // IMPORTANT!!! Defines user location in database\r\n                this.props.UserStore.userID = firebase.auth().currentUser.uid;\r\n              }).then(() => {\r\n                // Sends email to valid user\r\n              firebase.auth().currentUser.sendEmailVerification()\r\n                //start firestore\r\n                const db = firebase.firestore();\r\n                const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n\r\n                doc.get().then((docData) => {\r\n\r\n                  db.collection(\"users\").doc(this.props.UserStore.userID).set({\r\n                    id: firebase.auth().currentUser.uid,\r\n                     fullname: this.props.UserStore.fullname,\r\n                     firstname: this.props.UserStore.firstname,\r\n                     lastname: this.props.UserStore.lastname,\r\n                     email: this.props.UserStore.email,\r\n                     phone: this.props.UserStore.phone,\r\n                     searchHistory: [],\r\n                     totalNumTimesParked: 0,\r\n                     numTimesOpenedApp: 1,\r\n                     listings: [],\r\n                     vehicles: [],\r\n                     payments: [],\r\n                     photo: '',\r\n                  })\r\n     \r\n                  // alert('Welcome to Riive ' + this.props.UserStore.firstname + '!')\r\n     \r\n                  this.setState({ authenticating: false});\r\n                  this.props.navigation.navigate('Home')\r\n     \r\n                  // ID if user signed in via email or google\r\n                  this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\r\n     \r\n                  \r\n               \r\n     \r\n              }).then(() => this.createStripeCustomer())\r\n              .catch((e) => {\r\n               alert('Whoops! We accidently lost connection. Try signing up again.' + e)\r\n               firebase.auth().currentUser.delete();\r\n              })\r\n            })\r\n                  \r\n          \r\n        }\r\n  }).catch(e => {\r\n    // Handle Errors here.\r\n    var errorCode = e.code;\r\n    var errorMessage = e.message;\r\n    this.setState ({ authenticating: false})\r\n    // alert(errorCode + ': ' + errorMessage)\r\n    if(errorCode == 'auth/invalid-email'){\r\n      this.setState({\r\n        emailError: 'Email format must be name@domain.com',\r\n        passwordError: '',\r\n\r\n      })\r\n    }else if (errorCode == 'auth/email-already-in-use'){\r\n      this.setState({\r\n        emailError: 'Email is already in use with another account.',\r\n        passwordError: '',\r\n\r\n      })\r\n    }else if (errorCode == 'auth/weak-password'){\r\n      this.setState({\r\n        emailError: '',\r\n        passwordError: 'Password must be longer than 5 characters.',\r\n\r\n      })\r\n    }else{\r\n      alert(errorCode + ': ' + errorMessage);\r\n    }\r\n })\r\n}\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  onPressSignIn = async() => {\r\n\r\n    this.setState ({ authenticating: true})\r\n\r\n  \r\n    firebase.auth().signInWithEmailAndPassword(this.props.UserStore.email, this.props.UserStore.password).then(() => {\r\n      // define user id before calling the db from it\r\n      this.props.UserStore.userID = firebase.auth().currentUser.uid;\r\n      this.setState({\r\n        emailError: '',\r\n        passwordError: '',\r\n      })\r\n\r\n\r\n      const db = firebase.firestore();\r\n      const doc = db.collection('users').doc(this.props.UserStore.userID);\r\n\r\n      console.log(firebase.auth().currentUser.providerId)\r\n\r\n      \r\n\r\n      \r\n\r\n      // MOBX is not cached upon force close. Reinitalize data to mobx here!\r\n        doc.get().then((doc) => {\r\n          if (doc.exists){\r\n\r\n            \r\n\r\n\r\n            // alert(`${doc.id} => ${doc.data().fullname}`);\r\n            this.props.UserStore.fullname = doc.data().fullname;\r\n            this.props.UserStore.phone = doc.data().phone;\r\n            this.props.UserStore.userID = doc.data().id;\r\n            this.props.UserStore.stripeID = doc.data().stripeID;\r\n            this.props.UserStore.photo = doc.data().photo;\r\n            this.props.UserStore.joinedDate = firebase.auth().currentUser.metadata.creationTime\r\n            this.props.UserStore.vehicles = doc.data().vehicles;\r\n            this.props.UserStore.listings = doc.data().listings;\r\n            this.props.UserStore.payments = doc.data().payments;\r\n            this.props.UserStore.searchHistory = doc.data().searchHistory;\r\n\r\n             // ID if user signed in via email or google\r\n            this.props.UserStore.signInProvider = firebase.auth().currentUser.providerData[0].providerId;\r\n            ;\r\n\r\n            // in case a user reverts their email change via profile update\r\n            db.collection(\"users\").doc(this.props.UserStore.userID).update({\r\n              email: this.props.UserStore.email,\r\n           })\r\n\r\n           \r\n\r\n            // Upon setting the MobX State Observer, navigate to home\r\n            this.props.navigation.navigate('Home')\r\n        }else{\r\n          alert(\"No user found\")\r\n        }\r\n    }).catch((e) => {\r\n      alert(\"Failed to grab user data. Please try again. \" + e)\r\n    })\r\n\r\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\r\n      // alert('Persisted!')\r\n    })\r\n\r\n\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      this.setState ({ authenticating: false})\r\n      // alert(errorCode + ': ' + errorMessage)\r\n      if(errorCode == 'auth/invalid-email'){\r\n        this.setState({\r\n          emailError: 'Email format must be name@domain.com',\r\n          passwordError: '',\r\n\r\n        })\r\n      }else if(errorCode == 'auth/user-not-found'){\r\n        this.setState({\r\n          emailError: 'There is no account under this email',\r\n          passwordError: '',\r\n\r\n        })\r\n      }else if(errorCode == 'auth/too-many-requests'){\r\n        this.setState({\r\n          emailError: 'Too many recent requests. Try again soon.',\r\n          passwordError: '',\r\n\r\n        })\r\n      }else if(errorCode == 'auth/wrong-password'){\r\n        this.setState({\r\n          passwordError: 'Password is incorrect or empty',\r\n          emailError: '',\r\n        })\r\n      }else{\r\n        alert(errorCode + ': ' + errorMessage);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  renderCurrentState() {\r\n    if(this.state.authenticating){\r\n      return(\r\n        <View style={styles.form}>\r\n          <ActivityIndicator size=\"large\" />\r\n          <Button style={{backgroundColor: \"#FF8708\"}} textStyle={{color:\"#FFFFFF\"}} onPress={() => this.setState({ authenticating: false})}>Cancel</Button>\r\n        </View>\r\n      )\r\n    }else if(this.state.toggleLogIn){\r\n      return(\r\n          <View style={styles.form}>\r\n            <Input \r\n            placeholder='Enter email...'\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            onChangeText = {(email) => this.props.UserStore.email = email}\r\n            value={this.props.UserStore.email}\r\n            keyboardType='email-address'\r\n            maxLength = {55} \r\n            error={this.state.emailError}\r\n            />\r\n            <Input \r\n            placeholder='Enter password...'\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            secureTextEntry\r\n            onChangeText = {(password) => this.props.UserStore.password = password}\r\n            value={this.props.UserStore.password}\r\n            maxLength = {55}\r\n            keyboardType='default'\r\n            error={this.state.passwordError}\r\n            />\r\n            <Button style={{backgroundColor: \"#FF8708\"}} textStyle={{color:\"#FFFFFF\"}} onPress = {() => this.onPressSignIn()}>Log In</Button>\r\n            <Button iconLib=\"FontAwesome\" iconName=\"google\" iconSize={24} iconColor=\"#ffffff\" iconStyle={{marginRight: 16}} style={{backgroundColor: \"#DB4437\",}} textStyle={{color:\"#FFFFFF\"}} onPress = {() => this.signInWithGoogle()}>Sign In With Google</Button>\r\n            <Text onPress={() => this.toggleSignInOrUp()} style={styles.hyperlink}>Or Sign Up</Text>\r\n            <Text onPress={() => this.resetPassword()} style={styles.hyperlink}>Forgot Password?</Text>\r\n          </View>\r\n      )\r\n    }else{\r\n      return(\r\n       <View style={styles.form}>\r\n          <Input \r\n          placeholder='Your name...'\r\n          label=\"Full Name\"\r\n          name=\"full name\"\r\n          onChangeText= {(fullname) => this.props.UserStore.fullname = fullname}\r\n          value={this.props.UserStore.fullname}\r\n          maxLength = {40}\r\n          keyboardType='default'\r\n          error={this.state.fullnameError}\r\n          />\r\n          <Input \r\n          placeholder='000-000-0000'\r\n          mask='phone'\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          type=\"phone\"\r\n          onChangeText= {(phone) => this.props.UserStore.phone = phone}\r\n          value={this.props.UserStore.phone}\r\n          keyboardType='phone-pad'\r\n          maxLength = {17}\r\n          error={this.state.phoneError}\r\n          />\r\n          <Input \r\n          placeholder='Enter email...'\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          onChangeText= {(email) => this.props.UserStore.email = email}\r\n          value={this.props.UserStore.email}\r\n          keyboardType='email-address'\r\n          maxLength = {55}\r\n          error={this.state.emailError}\r\n          />\r\n          <Input \r\n          placeholder='Enter password...'\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          secureTextEntry\r\n          onChangeText = {(password) => this.props.UserStore.password = password}\r\n          value={this.props.UserStore.password}\r\n          maxLength = {55}\r\n          keyboardType='default'\r\n          error={this.state.passwordError}\r\n          />\r\n          <Button style={{backgroundColor: \"#FF8708\"}} textStyle={{color:\"#FFFFFF\"}} onPress = {() => this.onPressSignUp(\"HomeScreen\")}>Sign Up</Button>\r\n          <Text onPress={() => this.toggleSignInOrUp()} style={styles.hyperlink}>Or Log In</Text>\r\n        </View>\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n\r\n        <ScrollView contentContainerStyle={{flexGrow : 1, justifyContent : 'center'}}>\r\n          <KeyboardAvoidingView \r\n            // style={{backgroundColor: 'purple'}}\r\n            behavior={\"padding\"} \r\n            keyboardVerticalOffset={120}\r\n            enabled \r\n          >\r\n            <View style={styles.primaryView}>\r\n             {!this.state.authenticating ?<Image source={logo} style={styles.img}/> : null}\r\n             {this.renderCurrentState()}\r\n             {/* <View style={{height: 60}}/> */}\r\n             </View>\r\n          </KeyboardAvoidingView>\r\n        </ScrollView>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  primaryView:{\r\n    paddingHorizontal: 24,\r\n  },\r\n  img:{\r\n    width: 150,\r\n    resizeMode: 'contain',\r\n    alignSelf: 'center'\r\n  },\r\n  form: {\r\n    flex: 1,\r\n  },\r\n  hyperlink: {\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n    fontSize: 18,\r\n    alignSelf: 'center',\r\n    marginTop: 24\r\n  }\r\n});\r\n\r\n\r\nexport default withFirebaseAuth ({providers, firebaseAppAuth})(Authentication);\r\n"]},"metadata":{},"sourceType":"module"}